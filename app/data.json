{
  "routing": {
    "category": "authoring experience",
    "issues": []
  },
  "templateTag": {
    "category": "authoring experience",
    "issues": [
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/159",
        "text": "[ember-template-imports]: Crashes on class declaration with no id",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/160",
        "text": "[ember-template-imports]: Template shorter than three characters crashes build",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/171",
        "text": "[ember-template-imports]: missing semicolon in class attributes breaks build",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/183",
        "text": "[ember-template-imports]: preprocessEmbeddedTemplates appears to be processing jsdoc comments",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/186",
        "text": "[ember-template-imports]: yielded components on a hash are linted as not defined when yielded on named blocks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/207",
        "text": "[ember-template-imports]: v4 is not working for select environments",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/226",
        "text": "[ember-template-imports]: no-unused-expressions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/185",
        "text": "[ember-template-imports]: docs: class based component inheriting from '@glimmer/component'",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/187",
        "text": "[ember-template-imports]: Use content-tag, which fixes *all the bugs*",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/190",
        "text": "[ember-template-imports]: Add explicit support for Ember 4.12 and 5.x",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/211",
        "text": "[ember-template-imports]: Add failing test for v4 / content-tag not respecting imports, demonstrate fix by rolling for a new lockfile and cleaning up resulting peer errors",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/219",
        "text": "[ember-template-imports]: docs: add section on testing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/14",
        "text": "[content-tag]: Enable typescript",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/16",
        "text": "[content-tag]: Fix: Inner expressions get missed",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/21",
        "text": "[content-tag]: Initial sourcemapping support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/22",
        "text": "[content-tag]: add Preprocessor.parse",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/24",
        "text": "[content-tag]: BUG: backticks are not escaped",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/25",
        "text": "[content-tag]: Move the ContentTagVisitor to its own module",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/27",
        "text": "[content-tag]: Don't interpret js escapes in hbs",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/36",
        "text": "[content-tag]: Updating swc",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/44",
        "text": "[content-tag]: Standalone content-tag implemented via conditional exports in package.json",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/49",
        "text": "[content-tag]: npm pkg fix",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/50",
        "text": "[content-tag]: Add .npmignore to not ignore pkg/* folders",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/52",
        "text": "[content-tag]: Remove extraneous gitignores which interfere with packing",
        "labels": [
          "bug",
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/54",
        "text": "[content-tag]: fix package.json#exports for types",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/57",
        "text": "[content-tag]: Document API methods (Closes #45)",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/7",
        "text": "[content-tag]: Move component `this` reference into first argument",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/github-linguist/linguist/pull/6556",
        "text": "[linguist]: Add Glimmer language",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/github-linguist/linguist/pull/6578",
        "text": "[linguist]: Add Glimmer JS language",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tailwindlabs/tailwindcss-intellisense/pull/867",
        "text": "[tailwindcss-intellisense]: feat: add glimmer langs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/yoavbls/pretty-ts-errors/pull/85",
        "text": "[pretty-ts-errors]: feat: Add glimmer support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/XAMPPRocky/tokei/pull/1052",
        "text": "[tokei]: Add support for Glimmer JS/TS",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10419",
        "text": "[ember-cli]: Setup ESLint for gjs/gts",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10418",
        "text": "[ember-cli]: [ENHANCEMENT] Use `content-tag` to parse GTS in blueprints",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/123",
        "text": "[ember-template-imports]: Add gjs/gts highlighting to GitHub",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/189",
        "text": "[ember-template-imports]: using <template> in tests, how to rerender with an updated parameter",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/212",
        "text": "[ember-template-imports]: Quest: add support to popular third-party editor extensions",
        "labels": [
          "meta"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/228",
        "text": "[ember-template-imports]: Setting `enableTypeScriptTransform` to true breaks imports in .gjs tests",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/ember.js/issues/20062",
        "text": "[ember.js]: Quest: First-Class Component Templates",
        "labels": [
          "Help Wanted",
          "Quest"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/issues/940",
        "text": "[rfcs]: Replacing `moduleName` in template meta",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/issues/982",
        "text": "[rfcs]: Whitespace handling for `<template>` tag",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/1000",
        "text": "[rfcs]: Make array built-in in strict-mode",
        "labels": [
          "S-Exploring",
          "S-Proposed"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/997",
        "text": "[rfcs]: Make the `on` modifier built-in in strict-mode",
        "labels": [
          "S-Exploring",
          "S-Proposed"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/998",
        "text": "[rfcs]: Make fn built-in in strict-mode",
        "labels": [
          "S-Exploring",
          "S-Proposed"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/999",
        "text": "[rfcs]: Make hash built-in in strict-mode",
        "labels": [
          "S-Exploring",
          "S-Proposed"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/39",
        "text": "[content-tag]: For linting, we'd need to be able to emit a full AST, including nodes for the template",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/60",
        "text": "[content-tag]: content-tag failing with HMR api used inside `gts/gjs`;",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/61",
        "text": "[content-tag]: [Feature request] source map generation",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/59",
        "text": "[content-tag]: Combine tests, authoring them once, and testing against both ESM and CJS",
        "labels": [
          "internal"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/github-linguist/linguist/pull/6680",
        "text": "[linguist]: Add Glimmer TS language",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/wix/import-cost/pull/320",
        "text": "[import-cost]: feat: Add glimmer support",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "reactivity": {
    "category": "authoring experience",
    "issues": [
      {
        "href": "https://github.com/emberjs/ember.js/issues/20095",
        "text": "[ember.js]: Reactivity: Services",
        "labels": [
          "design"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/ember.js/issues/20096",
        "text": "[ember.js]: Reactivity: resources",
        "labels": [
          "design"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/957",
        "text": "[rfcs]: Render Aware Scheduler Interface",
        "labels": [
          "T-ember-data",
          "T-deprecation",
          "T-routing",
          "T-framework",
          "T-testing",
          "T-fastboot",
          "T-learning",
          "T-ember-cli",
          "S-Exploring"
        ],
        "isPending": true
      }
    ]
  },
  "intellisense": {
    "category": "authoring experience",
    "issues": [
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10406",
        "text": "[ember-cli]: [BUGFIX beta] use import type in helpers/index.ts :: typechecking in new apps otherwise fails",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-page-title/pull/262",
        "text": "[ember-page-title]: Re-export `pageTitle` from index",
        "labels": [
          "documentation",
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-page-title/pull/275",
        "text": "[ember-page-title]: TypeScript conversion so we have accurately generated types for consumers",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1099",
        "text": "[ember-qunit]: Add types directory in the publish output",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1137",
        "text": "[ember-qunit]: Add 'types' to package.json#exports because newer typescript versions ignore the package.json#types entry when package.json#exports is present",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20579",
        "text": "[ember.js]: Mark `cached` as a `MethodDecorator` instead of `PropertyDecorator`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20597",
        "text": "[ember.js]: [FEATURE] Add explicit support TS 5.1, 5.2, and 5.3",
        "labels": [
          "Feature",
          "enhancement",
          "TypeScript"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ijlee2/ember-codemod-args-to-signature/issues/1",
        "text": "[ember-codemod-args-to-signature]: Develop ember-codemod-args-to-signature",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/data/issues/8852",
        "text": "[data]: tracking: road to public EmberData typescript support",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/976",
        "text": "[rfcs]: Enable Glint by Default",
        "labels": [
          "S-Exploring"
        ],
        "isPending": true
      }
    ]
  },
  "removingOldPatterns": {
    "category": "authoring experience",
    "issues": [
      {
        "href": "https://github.com/emberjs/ember.js/pull/20570",
        "text": "[ember.js]: [CLEANUP] Remove all traces of named outlets code",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20578",
        "text": "[ember.js]: [BUGFIX beta] Deprecate outlet `TemplateFactory` support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/issues/20472",
        "text": "[ember.js]: Deprecate Classic (specifically Ember.Object)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/1001",
        "text": "[rfcs]: Deprecate named `inject` export from `@ember/service`",
        "labels": [
          "S-Exploring",
          "S-Proposed"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/964",
        "text": "[rfcs]: EmberData | deprecate legacy finder support",
        "labels": [
          "T-ember-data",
          "T-learning",
          "S-Exploring"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/995",
        "text": "[rfcs]: Deprecate non-colocated components.",
        "labels": [
          "S-Proposed"
        ],
        "isPending": true
      }
    ]
  },
  "shrinkingTheBuild": {
    "category": "tooling",
    "issues": [
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1064",
        "text": "[ember-qunit]: Convert to native package",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-test-waiters/pull/452",
        "text": "[ember-test-waiters]: v2 Addon prep: move everything in to a single package monorepo",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-test-waiters/pull/453",
        "text": "[ember-test-waiters]: Require ember-auto-import@v2",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-test-waiters/pull/454",
        "text": "[ember-test-waiters]: Remove dual-package emit",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-test-waiters/pull/460",
        "text": "[ember-test-waiters]: Add 4 empty test apps (all boilerplate)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-test-waiters/pull/463",
        "text": "[ember-test-waiters]: move tests to base-tests app, drop support for 3.8, 3.12, 0.x embroider, and ember-classic",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-test-waiters/pull/464",
        "text": "[ember-test-waiters]: Move ember-concurrency-specific-tests to the ember-concurrency@v2 test-app",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/mainmatter/qunit-dom/issues/2023",
        "text": "[qunit-dom]: convert to v2 addon / real npm package ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/mainmatter/qunit-dom/pull/2027",
        "text": "[qunit-dom]: Prepare for V2 Addon conversion.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/mainmatter/qunit-dom/pull/2028",
        "text": "[qunit-dom]: Convert to V2 Addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/mainmatter/qunit-dom/pull/2054",
        "text": "[qunit-dom]: Move everything to the packages/ folder",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/mainmatter/qunit-dom/pull/2066",
        "text": "[qunit-dom]: Switch to Vitest because it supports ESM",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/738",
        "text": "[ember-fetch]: Maintenance, V2, modern `fetch`, etc",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/ember-test-waiters/issues/458",
        "text": "[ember-test-waiters]: Quest: Prep for v4: V2 Addon conversion",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "compatibility": {
    "category": "tooling",
    "issues": [
      {
        "href": "https://github.com/ember-cli/ember-page-title/pull/258",
        "text": "[ember-page-title]: Drop support for IE 11",
        "labels": [
          "Cleanup",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1012",
        "text": "[ember-qunit]: Add missing peer dependency on `@ember/test-helpers`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1089",
        "text": "[ember-qunit]: Remove hasEmberVersion",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1095",
        "text": "[ember-qunit]: specify that ember cli is no longer needed for consumers ",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1102",
        "text": "[ember-qunit]: Bring back disableContainerStyles",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1111",
        "text": "[ember-qunit]: Due to hardcoded ember-cli assumptions around testing, ember-cli version matters",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1134",
        "text": "[ember-qunit]: Ensure folks get bugfixes when installing ember-qunit",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/939",
        "text": "[rfcs]: Introduce import.meta.glob",
        "labels": [
          "Final Comment Period",
          "S-Exploring"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/480",
        "text": "[ember-auto-import]: Provide context to errors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/485",
        "text": "[ember-auto-import]: support v2-addons that contain embroider/macros ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/487",
        "text": "[ember-auto-import]: concat mixed configuration for webpack externals",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/490",
        "text": "[ember-auto-import]: backporting newer embroider dep into 1.x series",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/492",
        "text": "[ember-auto-import]: fastboot css fixes",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/496",
        "text": "[ember-auto-import]: don't let broccoli-asset-rev mess with css chunks",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/510",
        "text": "[ember-auto-import]: avoid unnecssary full page reloads",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/521",
        "text": "[ember-auto-import]: Adjust appRoot to account for dummy apps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/523",
        "text": "[ember-auto-import]: Allow user webpack config to override internal config",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/524",
        "text": "[ember-auto-import]: Prioritize user's devTool setting",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/530",
        "text": "[ember-auto-import]: Move Dynamic Template Import error to runtime instead of a build error",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/531",
        "text": "[ember-auto-import]: Improve upgrade-guide",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/541",
        "text": "[ember-auto-import]: Respect v2 addon's explicit external list",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/544",
        "text": "[ember-auto-import]: Add support for consumers using Node ES Module support (e.g. `type=module` in `package.json`)",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/553",
        "text": "[ember-auto-import]: Add v1 addons that could be consumed by v2 addons in module-scope to …",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/562",
        "text": "[ember-auto-import]: Prevent HTML-escaping of module specifiers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/563",
        "text": "[ember-auto-import]: remove incorrect version safety check",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/573",
        "text": "[ember-auto-import]: added babel-plugin-ember-template-compilation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/574",
        "text": "[ember-auto-import]: Detect where modules loop back to AMD from webpack",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/587",
        "text": "[ember-auto-import]: Feature: allowAppImports",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/594",
        "text": "[ember-auto-import]: Add section on importing a module for side affects only to the README.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/596",
        "text": "[ember-auto-import]: Support private properties and static blocks",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/602",
        "text": "[ember-auto-import]: Allow arbitrary extensions for app-imports",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/603",
        "text": "[ember-auto-import]: Fix imports with a query part",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/605",
        "text": "[ember-auto-import]: Add es-compat to make asset loaders work as expected",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/606",
        "text": "[ember-auto-import]: Fix dynamic import inside allowAppImports dirs",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/mainmatter/qunit-dom/pull/2031",
        "text": "[qunit-dom]: Drop ember qunit less than v6",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/mainmatter/qunit-dom/pull/2065",
        "text": "[qunit-dom]: v3: Maximize compatibility",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/issues/20621",
        "text": "[ember.js]: [Bug] Types cannot be found when using type=module, moduleResolution=node16",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/540",
        "text": "[ember-auto-import]: wrong assets url if rootUrl is set to empty string ''",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/547",
        "text": "[ember-auto-import]: V1 Addons declared as peerDependencies are resolved by ember-auto-import",
        "labels": [
          "working-group"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/556",
        "text": "[ember-auto-import]: npm package inconsistently resolved when imported from v1 vs. v2 addon",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/557",
        "text": "[ember-auto-import]: uuid v9.0.0 import in fastboot fails with crypto.getRandomValues() not supported",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/558",
        "text": "[ember-auto-import]: Does not work with babel-plugin-lodash",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/577",
        "text": "[ember-auto-import]: Modifying SASS files triggers full reload since 2.6.2",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/588",
        "text": "[ember-auto-import]: `instanceof` fails in classic mode",
        "labels": [
          "has reproduction"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/589",
        "text": "[ember-auto-import]: css imports not working until referenced",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/592",
        "text": "[ember-auto-import]: \"Require is not defined\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/595",
        "text": "[ember-auto-import]: Dynamic import missing fingerprint URL",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/601",
        "text": "[ember-auto-import]: Add option to disable decorator transforms in case we are using a different decorator transform plugin",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/512",
        "text": "[ember-auto-import]: Restructure entry file bundle logic to support \"layering\"",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "vite": {
    "category": "tooling",
    "issues": [
      {
        "href": "https://github.com/emberjs/ember.js/pull/20577",
        "text": "[ember.js]: [BUGFIX canary] Restore/deprecate outlet `TemplateFactory` support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20578",
        "text": "[ember.js]: [BUGFIX beta] Deprecate outlet `TemplateFactory` support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20581",
        "text": "[ember.js]: Reducing internal usage of AMD loader",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20582",
        "text": "[ember.js]: Reducing internal usage of AMD loader",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20587",
        "text": "[ember.js]: Reform internal use of template compiler",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20593",
        "text": "[ember.js]: Enable tsconfig isolatedModules",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20595",
        "text": "[ember.js]: [BUGFIX LTS] An addon re-export should always be a JavaScript file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20603",
        "text": "[ember.js]: [BUGFIX beta] internal templates should be strictMode",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20605",
        "text": "[ember.js]: [BUGFIX beta] move babel-plugin-ember-template-compilation to dependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20619",
        "text": "[ember.js]: [CLEANUP canary] Cleanup incorrect module usage",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20620",
        "text": "[ember.js]: [CLEANUP canary] Remove final eager consumption of AMD loader",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/rfcs/issues/940",
        "text": "[rfcs]: Replacing `moduleName` in template meta",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1614",
        "text": "[embroider]: esbuild resolver for Vite dependency optimization",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1715",
        "text": "[embroider]: Move the app files in an embroider rewritten app into virtualised content",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1730",
        "text": "[embroider]: move vite index html to root",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1736",
        "text": "[embroider]: fix vite build ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1744",
        "text": "[embroider]: control ember build through vite",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1762",
        "text": "[embroider]: Fix incorrect ownerOfFile at root of filesystem",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "glint": {
    "category": "tooling",
    "issues": [
      {
        "href": "https://github.com/typed-ember/glint/issues/599",
        "text": "[glint]: `glint --declaration` fails to create declaration files when `@glint-ignore`, `@glint-expect-error`, or `@glint-nocheck` is used",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/601",
        "text": "[glint]: Semantic Token Scopes not provided",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/604",
        "text": "[glint]: LSP Suggestions",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/614",
        "text": "[glint]: Syntax error in tsconfig.json causes out-of-memory error",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/626",
        "text": "[glint]: Quest: let's forward _all_ the ServerCapabilities to tsserver",
        "labels": [
          "hacktoberfest"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/628",
        "text": "[glint]: Import of .gts emits broken declarations",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/645",
        "text": "[glint]: {{#each-in}} breaks if used with a Map",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/649",
        "text": "[glint]: --watch reports errors when normal build does not",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/661",
        "text": "[glint]: *Like-bug: (ModifierLike, ComponentLike, etc?) When using WithBoundArgs,  Type instantiation is excessively deep and possibly infinite (requiring glint-ignore/expect-error to move forward in a project)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/672",
        "text": "[glint]: Glint doesn’t support multiple Typescript extends",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/679",
        "text": "[glint]: Remove the need for consumers to install `@glint/environment-` packages",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "linting": {
    "category": "tooling",
    "issues": [
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/10",
        "text": "[ember-eslint-parser]: Add the noop preprocessor-to-exports",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/13",
        "text": "[ember-eslint-parser]: Run eslint-plugin-ember's tests with every change",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/14",
        "text": "[ember-eslint-parser]: Resolve \"Parsing error: Cannot read properties of null\"",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/15",
        "text": "[ember-eslint-parser]: fix named block",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/17",
        "text": "[ember-eslint-parser]: Use pnpm for eslint-plugin-ember testing",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/18",
        "text": "[ember-eslint-parser]: Fix: 'this' is undefined",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/20",
        "text": "[ember-eslint-parser]: fix rust utf8 ranges vs js utf16 ranges",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/21",
        "text": "[ember-eslint-parser]: Fix Incorrectly missing scope",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/22",
        "text": "[ember-eslint-parser]: `<@argument>` Parsing error: Cannot read properties of null (reading 'index')",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/24",
        "text": "[ember-eslint-parser]: allow SVG child Elements without reference",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/7",
        "text": "[ember-eslint-parser]: Fix requires of the transforms module",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2028",
        "text": "[eslint-plugin-ember]: Move gjs/gts parser to `ember-eslint-parser` library",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2045",
        "text": "[eslint-plugin-ember]: Bump ember-eslint-parser to `0.2.3`",
        "labels": [
          "Bug",
          "dependencies"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2047",
        "text": "[eslint-plugin-ember]: Remove unused dependency `@glimmer/syntax`",
        "labels": [
          "Internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2048",
        "text": "[eslint-plugin-ember]: Bump ember-eslint-parser to `0.2.4`",
        "labels": [
          "Bug",
          "dependencies"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2055",
        "text": "[eslint-plugin-ember]: Bump ember-eslint-parser to `0.2.5` - Includes fix for SVG scope parsing",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2068",
        "text": "[eslint-plugin-ember]: add `plugin:@typescript-eslint/recommended` to readme for GTS",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/113",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] `prettier . --write` does not run on .gjs/.gts files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/131",
        "text": "[prettier-plugin-ember-template-tag]: Consider disable minification?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/149",
        "text": "[prettier-plugin-ember-template-tag]: Replace ember-template-imports with content-tag",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/154",
        "text": "[prettier-plugin-ember-template-tag]: Remove handling of \"preprocessed\" template tags when it is no longer necessary for eslint-plugin-ember compat",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/173",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Unexpected token error on route files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/192",
        "text": "[prettier-plugin-ember-template-tag]: RFC: `<template>` in `CallExpression` argument position",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/193",
        "text": "[prettier-plugin-ember-template-tag]: RFC: Short templates in the top-level-of-a-class position",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/20",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] doesn't work with eslint<->prettier integration?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/222",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Incorrect behavior when template contains a",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/228",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] An apostrophe in a comment breaks formatting",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/40",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] VSCode Integration Not Working",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/43",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] With invalid hbs, prettier will transform `<template>` in source code",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/47",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Regressions in 0.3.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/49",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] In v0.3.2, with invalid hbs, a newline is added before the closing <template> tag",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/61",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Prettier v3 Support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/62",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Breaks @trivago/prettier-plugin-sort-imports",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/90",
        "text": "[prettier-plugin-ember-template-tag]: Usage of only-allow",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/162",
        "text": "[prettier-plugin-ember-template-tag]: content tag",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/178",
        "text": "[prettier-plugin-ember-template-tag]: Clean up content-tag implementation",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/185",
        "text": "[prettier-plugin-ember-template-tag]: Remove ember-cli-htmlbars dependency",
        "labels": [
          "dependencies"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/188",
        "text": "[prettier-plugin-ember-template-tag]: Add test for ember-route-template routes",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/194",
        "text": "[prettier-plugin-ember-template-tag]: Fix formatting issues #191, #192, #193",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/195",
        "text": "[prettier-plugin-ember-template-tag]: More content-tag cleanup",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/208",
        "text": "[prettier-plugin-ember-template-tag]: Switch to type: module",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/211",
        "text": "[prettier-plugin-ember-template-tag]: Upgrade content-tag",
        "labels": [
          "dependencies"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/212",
        "text": "[prettier-plugin-ember-template-tag]: Fix bug where preceding {} was slurping up template",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/issues/29",
        "text": "[ember-eslint-parser]: Document what to do with custom-elements and other not-defined HTML tags (no-undef)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/issues/30",
        "text": "[ember-eslint-parser]: Parsing error: Cannot read properties of null (reading 'type')",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/issues/31",
        "text": "[ember-eslint-parser]: Parsing error: No Babel config file detected for [GJS files]",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/32",
        "text": "[ember-eslint-parser]: Add GJS test project",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/NullVoxPopuli/ember-eslint-parser/pull/33",
        "text": "[ember-eslint-parser]: test: add failing component for array destructure",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/191",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] 2.0.0 Errors when components contain multi-byte characters (e.g. emoji) 💩 (not always, though)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/218",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Required semicolons incorrectly removed",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/42",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] New line added in comment block (and maybe generally when dealing with embedded formats with syntax errors)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/53",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Does not work with VSCode `formatOnPaste` config",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/81",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Invalid formatting of `render` function in tests when running prettier via eslint-plugin-ember + eslint-plugin-prettier",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/84",
        "text": "[prettier-plugin-ember-template-tag]: plugin is parsing JS comments and throws errors",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/prettier/prettier/pull/15087",
        "text": "[prettier]: Handle <style> and <pre> tags in Handlebars/Glimmer",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "css": {
    "category": "authoring experience",
    "issues": []
  },
  "other": {
    "category": "other",
    "issues": [
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10394",
        "text": "[ember-cli]: [ENHANCEMENT] automatically select a port by default with `ember serve`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      }
    ]
  },
  "total": 218,
  "finished": 144,
  "labels": [
    "bug",
    "enhancement",
    "breaking",
    "internal",
    "documentation",
    "meta",
    "Help Wanted",
    "Quest",
    "S-Exploring",
    "S-Proposed",
    "design",
    "T-ember-data",
    "T-deprecation",
    "T-routing",
    "T-framework",
    "T-testing",
    "T-fastboot",
    "T-learning",
    "T-ember-cli",
    "Feature",
    "TypeScript",
    "Cleanup",
    "Final Comment Period",
    "working-group",
    "has reproduction",
    "hacktoberfest",
    "Breaking",
    "Bug",
    "dependencies",
    "Internal",
    "Documentation"
  ]
}