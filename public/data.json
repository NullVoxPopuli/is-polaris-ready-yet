{
  "templateTag": {
    "issues": [
      {
        "href": "https://github.com/IgnaceMaes/ember-shiki/pull/1",
        "text": "[ember-shiki]: Publish initial release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/NullVoxPopuli/highlightjs-glimmer/pull/429",
        "text": "[highlightjs-glimmer]: Update allowed `node` versions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/antfu/shikiji/issues/46",
        "text": "[shikiji]: Example 404 not found?",
        "labels": [
          "upstream"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10418",
        "text": "[ember-cli]: [ENHANCEMENT] Use `content-tag` to parse GTS in blueprints",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/108",
        "text": "[ember-template-imports]: Should avoid generating inline sourcemaps for unchanged *.js files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/11",
        "text": "[ember-template-imports]: Runtime error: Uncaught SyntaxError: import declarations may only appear at top level of a module",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/114",
        "text": "[ember-template-imports]: Remove ember-cli-htmlbars requirement?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/12",
        "text": "[ember-template-imports]: Embroider Compatibility",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/123",
        "text": "[ember-template-imports]: Add gjs/gts highlighting to GitHub",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/124",
        "text": "[ember-template-imports]: Cut a release of `@glimmer/syntax` to fix blocked-scoped variables mistakenly flagged is undefined.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/13",
        "text": "[ember-template-imports]: Guidance for using built-in components & helpers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/14",
        "text": "[ember-template-imports]: TypeScript Support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/143",
        "text": "[ember-template-imports]: Extract preprocessor and babel plugin into their own packages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/159",
        "text": "[ember-template-imports]: Crashes on class declaration with no id",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/160",
        "text": "[ember-template-imports]: Template shorter than three characters crashes build",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/171",
        "text": "[ember-template-imports]: missing semicolon in class attributes breaks build",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/178",
        "text": "[ember-template-imports]: Export the constants in utils file explicitly for lint tooling",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/183",
        "text": "[ember-template-imports]: preprocessEmbeddedTemplates appears to be processing jsdoc comments",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/186",
        "text": "[ember-template-imports]: yielded components on a hash are linted as not defined when yielded on named blocks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/20",
        "text": "[ember-template-imports]: VUE/Svelte like syntax",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/201",
        "text": "[ember-template-imports]: Accidental whitespace after .gjs conversion",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/207",
        "text": "[ember-template-imports]: v4 is not working for select environments",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/22",
        "text": "[ember-template-imports]: Identifier 'hbs' has already been declared",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/226",
        "text": "[ember-template-imports]: no-unused-expressions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/228",
        "text": "[ember-template-imports]: Setting `enableTypeScriptTransform` to true breaks imports in .gjs tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/23",
        "text": "[ember-template-imports]: astro components style?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/233",
        "text": "[ember-template-imports]: upgrading 3 to 4 breaks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/28",
        "text": "[ember-template-imports]: duplicate babel plugin when used in an app that consumes in addon that uses ember-template-imports",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/31",
        "text": "[ember-template-imports]: < is not a valid character within attribute names: (error occurred in 'an unknown module' @ line 14 : column 8)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/33",
        "text": "[ember-template-imports]: `<template>` Layering Proposal",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/35",
        "text": "[ember-template-imports]: The Road to Stable",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/42",
        "text": "[ember-template-imports]: Update `TemplateLiteralMatch` to include source `importPath` and `importIdentifier`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/43",
        "text": "[ember-template-imports]: breaks with babel sourceMaps: 'inline'",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/44",
        "text": "[ember-template-imports]: a way to split component definition and template into different files",
        "labels": [
          "invalid"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/48",
        "text": "[ember-template-imports]: Build fails in Ember 4.X when on @babel/generator >= v7.17",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/52",
        "text": "[ember-template-imports]:  Parsing totally breaks when functions containing type arguments are defined \"above\" a class, but not below. ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/6",
        "text": "[ember-template-imports]: gts files in the `templates` folder are not detected",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/7",
        "text": "[ember-template-imports]: gjs files in the `templates` directory cannot find components adjacent to the template files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/8",
        "text": "[ember-template-imports]: gjs \"nested\" component does not import sibling components",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/9",
        "text": "[ember-template-imports]: Runtime error: gts file not able to be resolved",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/93",
        "text": "[ember-template-imports]: Handlebars comments within `<template>` cause parse error if they include backtick characters",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/1",
        "text": "[ember-template-imports]: Switch to Yarn",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/10",
        "text": "[ember-template-imports]: Fix class-based template literal example",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/110",
        "text": "[ember-template-imports]: Fix unnecessary addition of sourcemaps - Fixes #108",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/111",
        "text": "[ember-template-imports]: Update CONTRIBUTING.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/146",
        "text": "[ember-template-imports]: [Cleanup] Remove all traces of hbs",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/15",
        "text": "[ember-template-imports]: Update to using babel-plugin-htmlbars-inline-precompile preprocessor",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/152",
        "text": "[ember-template-imports]: Fix `Textarea` import README",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/154",
        "text": "[ember-template-imports]: typo in README: `Textarea`, not `TextArea`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/156",
        "text": "[ember-template-imports]: Update neovim instructions to include configuring ESLint",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/16",
        "text": "[ember-template-imports]: Make getting the template compiler path lazy",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/169",
        "text": "[ember-template-imports]: docs: prepare for stabilization",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/17",
        "text": "[ember-template-imports]: Run before ember-cli-typescript",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/173",
        "text": "[ember-template-imports]: set moduleName to relativePath",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/175",
        "text": "[ember-template-imports]: find templates with custom babel parser",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/176",
        "text": "[ember-template-imports]: fix: add eslint-plugin-ember support version",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/179",
        "text": "[ember-template-imports]: Fix(docs): add missing `extends Component` in readme example",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/18",
        "text": "[ember-template-imports]: Add TS type definition for hbs import",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/181",
        "text": "[ember-template-imports]: Fix(docs): add reminder to include `.gts` file to `.eslintrc` config",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/182",
        "text": "[ember-template-imports]: use content-tag",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/184",
        "text": "[ember-template-imports]: Update README for eslintrc configuration for test files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/185",
        "text": "[ember-template-imports]: docs: class based component inheriting from '@glimmer/component'",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/187",
        "text": "[ember-template-imports]: Use content-tag, which fixes *all the bugs*",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/190",
        "text": "[ember-template-imports]: Add explicit support for Ember 4.12 and 5.x",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/197",
        "text": "[ember-template-imports]: Upgrade test dependencies, ember-qunit, @ember/test-helpers, ember-cli",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/2",
        "text": "[ember-template-imports]: Switch to Github Actions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/202",
        "text": "[ember-template-imports]: Link to the VSCode extension pack",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/203",
        "text": "[ember-template-imports]: Switch to pnpm",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/206",
        "text": "[ember-template-imports]: Failures with imported modifiers and helpers repro",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/21",
        "text": "[ember-template-imports]: HTML-first .gc syntax",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/219",
        "text": "[ember-template-imports]: docs: add section on testing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/230",
        "text": "[ember-template-imports]: Bump content-tag and add inline_source_map option",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/231",
        "text": "[ember-template-imports]: add import guide for components, helpers, modifiers ",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/232",
        "text": "[ember-template-imports]: docs: use gjs as language for syntax highlighting",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/234",
        "text": "[ember-template-imports]: Add project description for intellisense",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/235",
        "text": "[ember-template-imports]: Update README.md for correct variable",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/24",
        "text": "[ember-template-imports]: start a README section for editor integration links",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/25",
        "text": "[ember-template-imports]: Support Embroider + HTMLBars 6",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/26",
        "text": "[ember-template-imports]: Try to reproduce https://github.com/emberjs/ember.js/issues/19877",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/27",
        "text": "[ember-template-imports]: Add reference for built-in helpers/modifiers/components",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/29",
        "text": "[ember-template-imports]: Do not add the babel plugin if it's already present",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/3",
        "text": "[ember-template-imports]: Initial Implementation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/30",
        "text": "[ember-template-imports]: declare magic string dependency",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/32",
        "text": "[ember-template-imports]: Fix missing quotes in reference-imports section",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/34",
        "text": "[ember-template-imports]: Fix broken link",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/37",
        "text": "[ember-template-imports]: Update parseTemplates to filter by tagName",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/4",
        "text": "[ember-template-imports]: fix gjs example file extensions in readme",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/41",
        "text": "[ember-template-imports]: Correctly support multiple template parsing fn from same path",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/45",
        "text": "[ember-template-imports]: Update README to reflect latest state",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/46",
        "text": "[ember-template-imports]: TemplateLiteralMatch populates its own importPath and importIdentifier",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/47",
        "text": "[ember-template-imports]: Update `TemplateLiteralMatch` to include source `importPath` and `importIdentifier`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/49",
        "text": "[ember-template-imports]: Pin @babel/generator to 7.16",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/5",
        "text": "[ember-template-imports]: Ensure this addon is included before ember-cli-htmlbars",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/50",
        "text": "[ember-template-imports]: Include the correct import name in `parseTemplates` results",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/51",
        "text": "[ember-template-imports]: Stop trying to tokenize regexes to avoid confusing bug caused by division appearing in a file before a <template> tag",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/53",
        "text": "[ember-template-imports]: Failing scenario for unexpected jsx",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/54",
        "text": "[ember-template-imports]: Fix build failures due to backticks within in template tags",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/55",
        "text": "[ember-template-imports]: Fix parse function comments",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/73",
        "text": "[ember-template-imports]: Do not require parent addon to include ember-cli-htmlbars",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/74",
        "text": "[ember-template-imports]: Provide the contents of the parsed template when calling `parseTemplates`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/76",
        "text": "[ember-template-imports]: bug: when using a generic named `template` in `.gts` files (e.g. `type template = { foo: string }; Partial<template>;`)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/78",
        "text": "[ember-template-imports]: Bring back `src/utils.js` temporarily",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/80",
        "text": "[ember-template-imports]: readme: update example neovim link",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/82",
        "text": "[ember-template-imports]: feat: adds default exports to avoid importing from nested paths",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/pull/83",
        "text": "[ember-template-imports]: feat: adds tagName to TemplateTag",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/tree-sitter-glimmer/issues/100",
        "text": "[tree-sitter-glimmer]: comments without `--` are not identified as comments when multiline.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/tree-sitter-glimmer/issues/115",
        "text": "[tree-sitter-glimmer]: <@arg> components are identified as errors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/tree-sitter-glimmer/issues/60",
        "text": "[tree-sitter-glimmer]: Indent module support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/tree-sitter-glimmer/pull/112",
        "text": "[tree-sitter-glimmer]: Support indents and folding",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/tree-sitter-glimmer/pull/116",
        "text": "[tree-sitter-glimmer]: Fix parsing multi-line short comments",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/tree-sitter-glimmer/pull/117",
        "text": "[tree-sitter-glimmer]: Support arg-components, `<@arg>`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/1",
        "text": "[content-tag]: Report errors through the WASM bindings",
        "labels": [
          "blocker"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/19",
        "text": "[content-tag]: Add an API for parse metadata so that content-tag can be used with eslint, prettier, and glint",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/2",
        "text": "[content-tag]: Implement default export form of content tag",
        "labels": [
          "blocker"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/26",
        "text": "[content-tag]: JS escapes are interpreted in hbs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/3",
        "text": "[content-tag]: Ensure we support typescript",
        "labels": [
          "blocker"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/30",
        "text": "[content-tag]: parse result should have more specific type",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/35",
        "text": "[content-tag]: content-tag's `process` incorrectly converts `type` imports to value imports.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/4",
        "text": "[content-tag]: Add file-based APIs too",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/45",
        "text": "[content-tag]: Template node has incorrect range if the template contains emoji or other multi-byte characters 💩",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/61",
        "text": "[content-tag]: [Feature request] source map generation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/10",
        "text": "[content-tag]: Pass a better message back to JS",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/14",
        "text": "[content-tag]: Enable typescript",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/15",
        "text": "[content-tag]: Implementing export-default sugar form",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/16",
        "text": "[content-tag]: Fix: Inner expressions get missed",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/17",
        "text": "[content-tag]: Updating deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/18",
        "text": "[content-tag]: Enable browser / cross-platform support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/20",
        "text": "[content-tag]: Update to latest upstream swc",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/21",
        "text": "[content-tag]: Initial sourcemapping support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/22",
        "text": "[content-tag]: add Preprocessor.parse",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/23",
        "text": "[content-tag]: releasing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/24",
        "text": "[content-tag]: BUG: backticks are not escaped",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/27",
        "text": "[content-tag]: Don't interpret js escapes in hbs",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/31",
        "text": "[content-tag]: Failing test for parsing single-line JS without no content tag",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/34",
        "text": "[content-tag]: Prepare Release 1.1.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/36",
        "text": "[content-tag]: Updating swc",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/38",
        "text": "[content-tag]: Add failing test for #37",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/41",
        "text": "[content-tag]: Add browser support via conditional exports",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/42",
        "text": "[content-tag]: Convert to monorepo and allow pkg to participate in monorepo package resolution",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/43",
        "text": "[content-tag]: Move generated wasm-pack content to 'node' folder, allowing us to persist a custom index.d.ts",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/44",
        "text": "[content-tag]: Standalone content-tag implemented via conditional exports in package.json",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/50",
        "text": "[content-tag]: Add .npmignore to not ignore pkg/* folders",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/54",
        "text": "[content-tag]: fix package.json#exports for types",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/57",
        "text": "[content-tag]: Document API methods (Closes #45)",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/6",
        "text": "[content-tag]: use git dependencies for swc",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/62",
        "text": "[content-tag]: Add js/rust bindings for inline source map generation",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/63",
        "text": "[content-tag]: Update docs with API changes",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/64",
        "text": "[content-tag]: Update type declaration file with latest API",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/7",
        "text": "[content-tag]: Move component `this` reference into first argument",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/74",
        "text": "[content-tag]: fix identifiers renaming",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/8",
        "text": "[content-tag]: Setup release on CI when tag is pushed",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/9",
        "text": "[content-tag]: fix installation instructions in README",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/github-linguist/linguist/pull/6556",
        "text": "[linguist]: Add Glimmer language",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/lifeart/vsc-ember-syntax/pull/45",
        "text": "[vsc-ember-syntax]: feat: add glimmer js/ts markdown language injects",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/shikijs/shiki/pull/550",
        "text": "[shiki]: chore: make sample match language name for Glimmer TS",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tailwindlabs/tailwindcss-intellisense/pull/867",
        "text": "[tailwindcss-intellisense]: feat: add glimmer langs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tree-sitter/tree-sitter-javascript/issues/212",
        "text": "[tree-sitter-javascript]: Implement support for parsing new <template> syntax",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tree-sitter/tree-sitter-javascript/pull/208",
        "text": "[tree-sitter-javascript]: Support <template> tags for Glimmer",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tree-sitter/tree-sitter-typescript/pull/218",
        "text": "[tree-sitter-typescript]: Update tree-sitter-javascript",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/yoavbls/pretty-ts-errors/pull/85",
        "text": "[pretty-ts-errors]: feat: Add glimmer support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/XAMPPRocky/tokei/pull/1052",
        "text": "[tokei]: Add support for Glimmer JS/TS",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10419",
        "text": "[ember-cli]: Setup ESLint for gjs/gts",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/129",
        "text": "[ember-template-imports]: write docs for setting up VSCode ESLint plugin to work with gts/gjs files.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/189",
        "text": "[ember-template-imports]: using <template> in tests, how to rerender with an updated parameter",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/19",
        "text": "[ember-template-imports]: Eslint integration",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/223",
        "text": "[ember-template-imports]: Transpilation issue with `this` remaining in function args",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/227",
        "text": "[ember-template-imports]: Issues with semi-colons?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/229",
        "text": "[ember-template-imports]: GJS/GTS components break when rendering an `<svg>` that contains `<linearGradient>`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-imports/ember-template-imports/issues/38",
        "text": "[ember-template-imports]: Updates based on spec mode discussion",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-tooling/tree-sitter-glimmer/issues/119",
        "text": "[tree-sitter-glimmer]: Links break highlighting",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/issues/982",
        "text": "[rfcs]: Whitespace handling for `<template>` tag",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/1000",
        "text": "[rfcs]: Make array built-in in strict-mode",
        "labels": [
          "S-Exploring"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/33",
        "text": "[tracking-polaris]: Quest: First-Class Component Templates",
        "labels": [
          "help wanted"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/11",
        "text": "[content-tag]: Ensure and test that running in the browser is appropriately supported",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/12",
        "text": "[content-tag]: Test for source_map memory leaks",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/13",
        "text": "[content-tag]: tests/node-api.js should be typescript",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/37",
        "text": "[content-tag]: fails to process when missing semi",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/39",
        "text": "[content-tag]: For linting, we'd need to be able to emit a full AST, including nodes for the template",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/5",
        "text": "[content-tag]: See if we can construct StringInput directly from JsString",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/60",
        "text": "[content-tag]: content-tag failing with HMR api used inside `gts/gjs`;",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/70",
        "text": "[content-tag]: Add transform callback to process that is overridable (with the default value being what our transform does today)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/issues/71",
        "text": "[content-tag]: bad transform of fake this param",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/53",
        "text": "[content-tag]: Reproduce issue described in #45 - multi-byte characters are counted incorrectly.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/56",
        "text": "[content-tag]: Add line numbers to js errors",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/66",
        "text": "[content-tag]: Add failing test for declarative shadow-dom",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/72",
        "text": "[content-tag]: Refactor import insertion code into its own module",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/content-tag/pull/73",
        "text": "[content-tag]: Update swc",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/wix/import-cost/pull/320",
        "text": "[import-cost]: feat: Add glimmer support",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "glint": {
    "issues": [
      {
        "href": "https://github.com/typed-ember/glint/issues/1",
        "text": "[glint]: Auto-import doesn't merge with existing imports",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/100",
        "text": "[glint]: Element is not allowed as a handlebars value",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/102",
        "text": "[glint]: `<LinkTo>` doesn't require `@route` if `@query` is provided",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/103",
        "text": "[glint]: `<Input>` should allow `null` for `@value`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/104",
        "text": "[glint]: No way to access data from an `ObjectProxy`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/105",
        "text": "[glint]: Support positional params on Ember Components",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/106",
        "text": "[glint]: Support `@models` on `LinkTo`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/107",
        "text": "[glint]: [Unverified] Set function as HTML attribute",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/108",
        "text": "[glint]: `{{#each-in}}` should support inverse",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/11",
        "text": "[glint]: Investigate import merging failures",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/110",
        "text": "[glint]: Types of parameters '𝚪' and '𝚪' are incompatible.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/118",
        "text": "[glint]: `{{#each}}` doesn't support `Ember.Array`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/120",
        "text": "[glint]: Missing test coverage for `ember-modifier` re-exports",
        "labels": [
          "testing"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/122",
        "text": "[glint]: Arg interface matching issue",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/123",
        "text": "[glint]: Declare types for Classic Component",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/124",
        "text": "[glint]: Error in VSCode output pane when trying to get autocompletions",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/126",
        "text": "[glint]: Continued issues with ProxyObject",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/128",
        "text": "[glint]: Export type for invokeEmit",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/129",
        "text": "[glint]: Intellisense sometimes points to comments instead of matching function",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/13",
        "text": "[glint]: Symbol search includes results from transformed modules",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/130",
        "text": "[glint]: Turning off built-in Typescript in VSCode loses useful features",
        "labels": [
          "bug",
          "good first issue"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/133",
        "text": "[glint]: Can't apply attributes or modifiers to yielded components",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/135",
        "text": "[glint]: Dynamic-component invocation should allow `undefined`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/136",
        "text": "[glint]: Yarn Workspaces support",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/14",
        "text": "[glint]: Path rewriting issues when moving modules",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/142",
        "text": "[glint]: '𝛄' is declared but its value is never read",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/143",
        "text": "[glint]: `if` type narrowing is lost inside further nested blocks",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/147",
        "text": "[glint]: Inheritance for Ember components with a Mixin doesn't work",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/152",
        "text": "[glint]: `get` returns `unknown` when the object could be `undefined`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/158",
        "text": "[glint]: Nested component have to have their full nested name for the registry",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/161",
        "text": "[glint]: Cannot extend a Glimmer component",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/164",
        "text": "[glint]: Glint server crash",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/168",
        "text": "[glint]: `{{each}}` yields `unknown` given an `any` iterable",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/169",
        "text": "[glint]: `{{link-to}}` doesn't accept named args for `route` and `model`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/170",
        "text": "[glint]: Cannot use the `component` helper with `undefined`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/181",
        "text": "[glint]: `each-in` sets `string | number` for the key's type",
        "labels": [
          "design"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/182",
        "text": "[glint]: Globals are shadowed by block parameters whose name they are a prefix of",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/183",
        "text": "[glint]: Issue with contextual components and `any`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/184",
        "text": "[glint]: Argument is narrowed to `unknown`",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/186",
        "text": "[glint]: Wrong error message when an attribute is a substring of another",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/189",
        "text": "[glint]: Error: Could not find module `@glint/environment-ember-loose/glimmer-component`",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/190",
        "text": "[glint]: `link-to` cannot be used with the `component` helper",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/191",
        "text": "[glint]: How to handle a helper and a modifier with the same name?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/192",
        "text": "[glint]: Deprecation warnings with Ember 3.27",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/193",
        "text": "[glint]: Way to integrate automated registry generation, based on LS data",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/195",
        "text": "[glint]: Glint doesn't work with the `noImplicitOverride` TypeScript option",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/196",
        "text": "[glint]: Glint doesn't work with the `noPropertyAccessFromIndexSignature` TypeScript option",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/2",
        "text": "[glint]: Diagnostics occasionally mention the transformed name of a module",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/201",
        "text": "[glint]: Update README for js support for glimmer language server",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/21",
        "text": "[glint]: Attribute and modifier handling",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/211",
        "text": "[glint]: Ember globals aren't available to `{{component}}`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/212",
        "text": "[glint]: Narrow possibly-undefined value in `each`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/214",
        "text": "[glint]: HTML attributes shouldn't accept element and component values",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/215",
        "text": "[glint]: Glint doesn't always recognize component",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/216",
        "text": "[glint]: TypeScript compiler crashes",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/22",
        "text": "[glint]: Support out-of-module templates",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/220",
        "text": "[glint]: Cannot modify a helper's return signature with the `exactOptionalPropertyTypes` TypeScript option",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/221",
        "text": "[glint]: Support type-narrowing via discriminated unions",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/222",
        "text": "[glint]: Type 'GlimmerComponent<{}>' is not assignable to type 'TemplateComponent<{}>'.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/223",
        "text": "[glint]: broken SSR: environment-glimmerx does not support nodejs modules",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/224",
        "text": "[glint]: [windows] incorrect errors mapping for templates",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/225",
        "text": "[glint]: Integration test failing after installing `@glint/environment-ember-loose/` ",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/226",
        "text": "[glint]: Integration test failing after installing `@glint/environment-ember-loose/` ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/23",
        "text": "[glint]: Ember environment",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/237",
        "text": "[glint]: Add examples for modifiers and helpers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/24",
        "text": "[glint]: Resolver-like component/helper/modifier resolution",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/243",
        "text": "[glint]: VSCode addon doesn't work for Node 16",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/244",
        "text": "[glint]: `@babel/*` updates cause Glint to fail",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/25",
        "text": "[glint]: Figure out the shape of component type parameters",
        "labels": [
          "design"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/255",
        "text": "[glint]: \"Cannot find name\" error if helper and block param names start with same character(s)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/26",
        "text": "[glint]: Document how to set up a new project",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/263",
        "text": "[glint]: Offsets are incorrect for files that begin with trivia",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/265",
        "text": "[glint]: Performance issues when many editors are open",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/268",
        "text": "[glint]: Bug: Unsafe Call of an any typed value when using `@glint/environment-ember-loose/glimmer-component`",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/269",
        "text": "[glint]: Make clear the path for incremental adoption",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/27",
        "text": "[glint]: Design walkthrough",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/274",
        "text": "[glint]: Passing file to CLI does not work",
        "labels": [
          "bug",
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/277",
        "text": "[glint]: Does this work with Embroider `staticAddonTrees` enabled?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/28",
        "text": "[glint]: Document common error messages",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/282",
        "text": "[glint]: Missing @glimmer/component dependency",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/284",
        "text": "[glint]: glint doesn't parse args with dashes correctly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/29",
        "text": "[glint]: Test things out in different environments",
        "labels": [
          "good first issue",
          "testing"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/293",
        "text": "[glint]: Regression when using native imports for modifier",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/294",
        "text": "[glint]: Typing custom components",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/297",
        "text": "[glint]: Invalid parse after use of <template> as expression",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/3",
        "text": "[glint]: Ensure changes to on-disk files are reflected in open files",
        "labels": [
          "testing"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/30",
        "text": "[glint]: Signature argument ordering",
        "labels": [
          "design"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/302",
        "text": "[glint]: Addon adoption plan",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/317",
        "text": "[glint]: TS can't find registry when declaring component templates",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/319",
        "text": "[glint]: envFunction is not a function",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/320",
        "text": "[glint]: False expression: Node must have a real position for this operation.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/322",
        "text": "[glint]: Document: ambient types vs. TS conversion",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/323",
        "text": "[glint]: BUG: VS Code extension swallows config errors",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/327",
        "text": "[glint]: Is this export from environment-ember-loose's environment misnamed?",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/337",
        "text": "[glint]: Does not output an error (and doesn't work) when `tsconfig.json` is missing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/338",
        "text": "[glint]: Support shipping Glint types with v2 addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/340",
        "text": "[glint]: in-element should support `ShadowRoot | Element` rather than just `Element`",
        "labels": [
          "bug",
          "good first issue"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/341",
        "text": "[glint]: Component helper is undefined, yet is built-in? (no import)",
        "labels": [
          "bug",
          "good first issue"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/342",
        "text": "[glint]: Type Error with class-based Ember helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/343",
        "text": "[glint]: [VSCode] Glint not running in project which is sub-folder within CWD",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/344",
        "text": "[glint]: `environment-ember-template-imports` types fail to resolve in a `pnpm` project",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/347",
        "text": "[glint]: When installing @glint/template to provide types via HelperLike, etc, I get an error about @glimmer/component being a missing peer",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/351",
        "text": "[glint]: Parsing / Syntax errors in test gts file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/352",
        "text": "[glint]: Error reported by any value that isn't already a string/number in template is not clear  ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/353",
        "text": "[glint]: VSCode extension doesn't incrementally update across package boundaries",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/355",
        "text": "[glint]: Parse error with no-arg helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/36",
        "text": "[glint]: Type and document environment-ember-loose intrinsics",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/360",
        "text": "[glint]: Lowercase in-scope identifiers aren't treated as components",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/362",
        "text": "[glint]: `WithBoundArgs` results in `Property '[Invoke]' is missing` error",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/363",
        "text": "[glint]: Support the default-helper-manager RFC for non-strict-mode templates",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/367",
        "text": "[glint]: Adding a component to the `exclude` list causes parsing to break",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/37",
        "text": "[glint]: Handle template-only components",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/373",
        "text": "[glint]: Invalid `{{component}}` first arg leads to a confusing message",
        "labels": [
          "error messages"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/374",
        "text": "[glint]: Strict mode: hash is required to be imported, but glint reports it as not used.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/375",
        "text": "[glint]: Incorrect diagnostic augmentation for `{{yield}}` type errors",
        "labels": [
          "error messages"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/378",
        "text": "[glint]: Hbs globals is missing page-title and unique-id",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/379",
        "text": "[glint]: Look for packages at the same level as the tsconfig/jsconfig instead of in monorepo root",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/38",
        "text": "[glint]: Editor support for standalone templates",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/380",
        "text": "[glint]: Don't crash on unrecognized file types",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/389",
        "text": "[glint]: Generic component signatures not working with template tag / gts",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/395",
        "text": "[glint]: Bug: Glint not catching assignability error with callback args (when the args use method signatures)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/396",
        "text": "[glint]: Meta issue: function helper resolution bugs",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/398",
        "text": "[glint]: Improve error message when a helper/modifier/component is missing from the loose registry",
        "labels": [
          "error messages"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/400",
        "text": "[glint]: Property 'template' does not exist on type",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/405",
        "text": "[glint]: ExpandSignature Resolution Issues",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/406",
        "text": "[glint]: TypeScript 4.8: Error when no type argument is provided for `render`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/408",
        "text": "[glint]: Parsing totally breaks when functions containing type arguments are defined \"above\" a class, but not below.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/409",
        "text": "[glint]: Publish and document `@glint/scripts`",
        "labels": [
          "documentation",
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/410",
        "text": "[glint]: support helper and modifier helpers",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/413",
        "text": "[glint]: Parsing / Syntax errors in test ts file, ember-loose",
        "labels": [
          "bug",
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/414",
        "text": "[glint]: When disabling the built in VS-Code TypeScript Language Features, CMD + hover stops showing type preview",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/434",
        "text": "[glint]: `@glint/scripts` missing `glob` dependency",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/436",
        "text": "[glint]: Vague autocomplete weirdness",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/438",
        "text": "[glint]: Incompatibility with `--watch` and `declarationMap`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/439",
        "text": "[glint]: RFC: Side-effect free addon registries",
        "labels": [
          "design"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/444",
        "text": "[glint]: Using a JS keyword as a block parameter name results in an internal error",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/446",
        "text": "[glint]: Update addon registry documentation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/455",
        "text": "[glint]: Spurious error when using --isolatedModules in development",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/459",
        "text": "[glint]: Translated TypeScript of standalone templates fails to compile under --isolatedModules",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/460",
        "text": "[glint]: Model not provided to error substate templates",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/468",
        "text": "[glint]: undefined buildOptions taking precedence over tsconfig compilerOptions entries",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/477",
        "text": "[glint]: as typescript plugin ?",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/480",
        "text": "[glint]: 1.0-beta: regression with valid `LinkTo` vs `link-to` invocation patterns",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/481",
        "text": "[glint]: 1.0.0-beta.1 fails with Typescript 4.7.4: Attempted to transform a range across two different files",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/485",
        "text": "[glint]: `glint --build` not respecting `{{! @glint-nocheck }}` directive in composite projects",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/486",
        "text": "[glint]: Union types for named args in signatures don't distribute correctly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/503",
        "text": "[glint]: `@glint` directives do not work when used as TS/JS comments",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/507",
        "text": "[glint]: glint 1.0.0-beta.2 attempts to typecheck addons not included in tsconfig",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/508",
        "text": "[glint]: Should glint prevent the \"noPropertyAccessFromIndexSignature\" compiler option being applied to templates?",
        "labels": [
          "error messages"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/512",
        "text": "[glint]: Misleading error message when accessing a property in violation of noPropertyAccessFromIndexSignature",
        "labels": [
          "error messages"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/514",
        "text": "[glint]: How to type Element in component signature when `...attributes` applied to other component",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/515",
        "text": "[glint]: Consider switching this monorepo to pnpm",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/517",
        "text": "[glint]: component helper w/ class constructor returns nullable value",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/518",
        "text": "[glint]: ensure-safe-component breaks types",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/519",
        "text": "[glint]: Support templates, compiled by `precompileTemplate`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/521",
        "text": "[glint]: Can this run as part of `ember build`?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/524",
        "text": "[glint]: Make VS Code plugin work for pnpm projects",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/529",
        "text": "[glint]: Document how to do generic types?",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/535",
        "text": "[glint]: Support parsing gjs and gts in glimmerx environment",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/538",
        "text": "[glint]: feature: outline provide in VS Code",
        "labels": [
          "enhancement",
          "good first issue"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/540",
        "text": "[glint]: Generic types with `HelperLike`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/541",
        "text": "[glint]: Support `key` option in `each-in` helper",
        "labels": [
          "bug",
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/543",
        "text": "[glint]: support `additionalGlobals` in `environment-ember-template-imports`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/550",
        "text": "[glint]: Turning off TS Language Server turns off too much comfort",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/555",
        "text": "[glint]: `component \"link-to\"` seems broken on `beta.5`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/556",
        "text": "[glint]: Difference between using `component` and assigning it via `let`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/559",
        "text": "[glint]: `{{modifier}}` fails when pre-binding multiple positional arguments",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/566",
        "text": "[glint]: Arg completions incorrectly contain globals in .gts files",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/570",
        "text": "[glint]: Issues with new modifier helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/571",
        "text": "[glint]: Inline comment mentions no-longer-used `EmptyObject`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/579",
        "text": "[glint]: Expose loadConfig to consumers",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/580",
        "text": "[glint]: Suppressing Errors in `.gts` files?",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/581",
        "text": "[glint]: `glint` fails with resolving `@ember/test-helpers` ",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/585",
        "text": "[glint]: allow customizing template processing in custom environments for hbs files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/593",
        "text": "[glint]: external and internal Args type",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/594",
        "text": "[glint]: issue in combination with glint-template-types",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/597",
        "text": "[glint]: Option to not clear the screen when in watch mode?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/602",
        "text": "[glint]: VS Code multi-root workspace causes duplicate hover information",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/608",
        "text": "[glint]: Expose \"Program\" so that @typescript-eslint/* can use it for type-aware lints",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/609",
        "text": "[glint]: Use `content-tag` in `@glint/environment-ember-template-imports`",
        "labels": [
          "enhancement",
          "refactor"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/612",
        "text": "[glint]: Rehearsal removes a content of .gts files after prettier.format()",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/618",
        "text": "[glint]: Support import paths with `.gts` extensions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/622",
        "text": "[glint]: in loose mode, hovering over a component should should the comment block on the actual component, especially if there isn't a comment block on the registrys entry",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/624",
        "text": "[glint]: Modifier optional positional argument interferes with named argument",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/631",
        "text": "[glint]: VSCode release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/638",
        "text": "[glint]: Reproducible language server crash",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/639",
        "text": "[glint]: Type of property ''@each'' circularly references itself in mapped type UnwrapComputedPropertyGetters",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/643",
        "text": "[glint]: Incompatibility between Ember with the native types and `ts-reset`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/652",
        "text": "[glint]: Adding `environment-ember-loose` to my `global.d.ts` file breaks the `TemplateFactory` import",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/658",
        "text": "[glint]: `glint --declaration` flattens and removes folders if there is no top-level module.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/662",
        "text": "[glint]: VSCode unable to start Glint language server for…",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/665",
        "text": "[glint]: @glint/environment-ember-template-imports is incompatible with ember-template-imports 4.0.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/678",
        "text": "[glint]: Drop support for GlimmerX",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/691",
        "text": "[glint]: Unknown name 'page-title'",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/694",
        "text": "[glint]: GJS parsed as JSX",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/706",
        "text": "[glint]: Parse error on `{{!` mustache comment in `.gts`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/75",
        "text": "[glint]: TS Nightly is failing",
        "labels": [
          "testing"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/81",
        "text": "[glint]: Bug with Mixin usage",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/82",
        "text": "[glint]: [Feature request] Ignore lines in HBS with `{{! glint-ignore }}` or something",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/83",
        "text": "[glint]: Cannot specify that a helper doesn't have mandatory positional parameters",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/85",
        "text": "[glint]: Built-in components have no declared primary elements",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/86",
        "text": "[glint]: A keyword-only helper does not type-check",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/87",
        "text": "[glint]: Cannot have a helper that returns `undefined`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/88",
        "text": "[glint]: Type 'MyComponentArgs' has no properties in common with type 'ComponentSignature'.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/89",
        "text": "[glint]: Type 'null' does not satisfy the constraint 'Element'.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/91",
        "text": "[glint]: What if a component emits multiple elements at the root level?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/92",
        "text": "[glint]: Can't find registry module",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/93",
        "text": "[glint]: Support SafeString",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/94",
        "text": "[glint]: Seems to Hang in VSCode",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/96",
        "text": "[glint]: Difficulty Declaring Modifiers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/98",
        "text": "[glint]: Type 'null' does not satisfy the constraint 'Element'.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/99",
        "text": "[glint]: Can't apply `...attributes` to `SVGElement`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/10",
        "text": "[glint]: Support helper-based type narrowing",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/109",
        "text": "[glint]: Type primary elements properly for built-in components",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/111",
        "text": "[glint]: Introduce `ComponentLike` and associated types",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/112",
        "text": "[glint]: Support inverse for {{#each-in}} - Fixes #108",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/113",
        "text": "[glint]: `LinkTo`: support `@models` and fix required args",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/114",
        "text": "[glint]: Support SVGElements - Fixes #99",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/115",
        "text": "[glint]: Support SafeString - Fixes #93",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/116",
        "text": "[glint]: Fix Typo",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/117",
        "text": "[glint]: Fix Ember Modifier class",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/119",
        "text": "[glint]: Bugfix batch for `environment-ember-loose`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/12",
        "text": "[glint]: Fix faulty location mapping for paths with repeated substrings",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/125",
        "text": "[glint]: Allow {{each}} to handle null and undefined",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/127",
        "text": "[glint]: Better handling for null and undefined in {{get}}",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/131",
        "text": "[glint]: Don't crash for operations on an unaffiliated template",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/132",
        "text": "[glint]: Allow emitting `Element` values",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/134",
        "text": "[glint]: Properly handle attributes and modifiers for yielded components - Fixes #133",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/137",
        "text": "[glint]: Support @value=null for Input - Fixes #103",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/138",
        "text": "[glint]: Rework `Element`/`...attributes`/modifier checking",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/139",
        "text": "[glint]: Allow null values for Textarea",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/140",
        "text": "[glint]: Don't print declaration diagnostics when we aren't emitting declarations",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/141",
        "text": "[glint]: Allow invoking nullable component values",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/144",
        "text": "[glint]: Ensure the invocation-context 𝛄 doesn't trigger an unused symbol warning",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/145",
        "text": "[glint]: Avoid a direct `@glimmer/runtime` reference",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/146",
        "text": "[glint]: Add failing tests for conditionals",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/149",
        "text": "[glint]: Ensure type narrowing propagates downward",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/15",
        "text": "[glint]: Require declared block params rather than inferring them",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/150",
        "text": "[glint]: Ensure we reexport static members from upstream classes",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/151",
        "text": "[glint]: Allow 'on' modifier with SVGElement",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/153",
        "text": "[glint]: Fix `get` returning `unknown` for objects that can be `undefined`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/154",
        "text": "[glint]: Introduce `PositionalArgs` for component signatures",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/155",
        "text": "[glint]: Remove `Record`-based constraints on signature members",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/157",
        "text": "[glint]: Support ComputedProperty in get helper",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/16",
        "text": "[glint]: Simplify resolution of context and signature types",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/163",
        "text": "[glint]: Don't prevent subclassing of components with companion templates",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/165",
        "text": "[glint]: Don't crash when requesting diagnostics on an excluded template.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/166",
        "text": "[glint]: Introduce `@glint-ignore` and `@glint-expect-error` directives",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/167",
        "text": "[glint]: Readme: Info on adding nested components to registry",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/17",
        "text": "[glint]: Use original module resolution",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/171",
        "text": "[glint]: Allow LinkTo current-when to be boolean",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/172",
        "text": "[glint]: Capture given signatures so TS can infer them from the concrete type",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/173",
        "text": "[glint]: Ensure `{{each}}` yields `any` given `any` or a non-iterable value",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/174",
        "text": "[glint]: Support named args with `{{link-to}}`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/175",
        "text": "[glint]: Prefer `else` over `inverse`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/176",
        "text": "[glint]: The `{{component}}` helper silently accepts nullable values",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/178",
        "text": "[glint]: Support routes, controllers and classic-layout components",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/179",
        "text": "[glint]: Avoid cascading errors on invalid component invocations",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/18",
        "text": "[glint]: Filter transformed modules from symbol search",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/180",
        "text": "[glint]: Link to `glint-template-types` repo in the README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/187",
        "text": "[glint]: Add support for `bubbles` in `link-to`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/188",
        "text": "[glint]: Fix spelling in README.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/19",
        "text": "[glint]: Ensure moved files don't result in broken imports",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/194",
        "text": "[glint]: Support standalone templates as components in GlimmerX",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/197",
        "text": "[glint]: Support Ember rendering tests",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/199",
        "text": "[glint]: Adding support for glint-language-server for js files",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/20",
        "text": "[glint]: Get `{{component}}` working more robustly",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/202",
        "text": "[glint]: Support template-only components",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/203",
        "text": "[glint]: Assorted bugfixes",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/206",
        "text": "[glint]: Upgrade to TS 4.3 and play nicely with new flags",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/207",
        "text": "[glint]: Add `checkStandaloneTemplates` configuration option",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/208",
        "text": "[glint]: Update README to include documentation for Glint in projects using JS",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/210",
        "text": "[glint]: Ensure `{{component}}` works with template-only components",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/218",
        "text": "[glint]: Allow explicitly passing `undefined` for `disabled` on `link-to`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/227",
        "text": "[glint]: Fix extension smoke test failures",
        "labels": [
          "testing"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/235",
        "text": "[glint]: Add overloads to `fn` with more arguments",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/238",
        "text": "[glint]: Move file add/delete tests into the LS suite",
        "labels": [
          "testing"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/241",
        "text": "[glint]: Support multiple active environments in a project",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/242",
        "text": "[glint]: Add `ResolveOrReturn` utility type to `@glint/template`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/245",
        "text": "[glint]: Fix errors with latest `@babel/generator`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/247",
        "text": "[glint]: Handle Windows line endings correctly in inline templates",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/248",
        "text": "[glint]: Make it easier to avoid errors with vanilla `tsc`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/250",
        "text": "[glint]: A small bug bash 🐛 ",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/251",
        "text": "[glint]: Support custom file extensions",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/253",
        "text": "[glint]: Overhaul global scope management",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/258",
        "text": "[glint]: Handle FS events more robustly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/259",
        "text": "[glint]: Support preprocessing for custom extensions",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/261",
        "text": "[glint]: Add helper and modifier docs",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/273",
        "text": "[glint]: Fix compatibility with new upstream `Helper` types",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/275",
        "text": "[glint]: Ensure compatibility with latest upstream Ember/Glimmer types",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/276",
        "text": "[glint]: Prevent `tsc` from inlining implementation details from upstream",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/278",
        "text": "[glint]: Fix issue where Component super args were incorrect",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/279",
        "text": "[glint]: Fix issue where Component super args were incorrect",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/280",
        "text": "[glint]: Fix issue where Component super args were incorrect",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/281",
        "text": "[glint]: Update readme with example of third-party types",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/283",
        "text": "[glint]: Support native import paths & signatures",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/285",
        "text": "[glint]: Expose `@glint/template` utility types",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/286",
        "text": "[glint]: Break out README contents into GitBook docs",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/287",
        "text": "[glint]: Handle spinal-case arg names",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/288",
        "text": "[glint]: Handle arg name position inference more carefully",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/289",
        "text": "[glint]: Don't pretend the CLI can check individual files",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/290",
        "text": "[glint]: Add a migration guide for native imports",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/291",
        "text": "[glint]: Deprecate `environment-ember-loose` reexports",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/292",
        "text": "[glint]: Migration-guide improvements",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/295",
        "text": "[glint]: Update README, renaming `Yields` -> `Blocks`",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/296",
        "text": "[glint]: Use `SilentError` when no config is found",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/298",
        "text": "[glint]: Enable dumping of the intermediate representation source code",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/299",
        "text": "[glint]: Fix preprocessed template locations",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/300",
        "text": "[glint]: Drop TypeScript < 4.6",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/304",
        "text": "[glint]: Remove `environment-ember-loose` reexports",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/306",
        "text": "[glint]: Update to use Node 14+",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/307",
        "text": "[glint]: Update documentation for native imports & signatures",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/309",
        "text": "[glint]: Extend volta config in test packages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/31",
        "text": "[glint]: Account for multiple potential sources in @glint/transform",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/310",
        "text": "[glint]: Add @glint-nocheck directive.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/311",
        "text": "[glint]: docs: Fix broken link to VS Code extension",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/312",
        "text": "[glint]: Remove re-exports from known limitations",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/313",
        "text": "[glint]: Add addon documentation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/314",
        "text": "[glint]: Fix docs link",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/315",
        "text": "[glint]: Document @glint directives",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/316",
        "text": "[glint]: Handle explicit `Args: {}` and similar",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/318",
        "text": "[glint]: Add docs for common error messages",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/321",
        "text": "[glint]: For Ember components, keep args in signature, use type alias",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/324",
        "text": "[glint]: Add section for adding types to non-TS addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/325",
        "text": "[glint]: Minor docs fixes for Glint types for non ts addons section",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/326",
        "text": "[glint]: DOCS: Clarify Getting Started and Ember Installation pages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/329",
        "text": "[glint]: Make Ember template-only components ComponentLike",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/330",
        "text": "[glint]: docs: change return value of page-title helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/331",
        "text": "[glint]: docs: reword/update glint types for non-ts projects section",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/333",
        "text": "[glint]: Integrate `@glint/environment-ember-template-imports`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/334",
        "text": "[glint]: Provide slightly more helpful errors when an environment is misconfigured",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/335",
        "text": "[glint]: Account for leading trivia in source files for LSP diagnostic locations",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/336",
        "text": "[glint]: Don't flood the language server work queue when many changes come in",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/34",
        "text": "[glint]: Introduce `@glint/environment-ember-loose`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/346",
        "text": "[glint]: [bugfix] Cleanup for dependency issues and CLI/LSP consistency",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/349",
        "text": "[glint]: Add `component` to template-imports environment built-ins",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/35",
        "text": "[glint]: Support standalone template files in @glint/cli",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/350",
        "text": "[glint]: in-element can take a ShadowRoot",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/354",
        "text": "[glint]: Configuration overhaul",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/356",
        "text": "[glint]: Migration script: `.glintrc.yml` to `glint` key in `tsconfig.json`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/359",
        "text": "[glint]: Handle no-arg helper invocations correctly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/361",
        "text": "[glint]: Clearer error messages for common scenarios",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/364",
        "text": "[glint]: Fix import typo in doc",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/365",
        "text": "[glint]: Language server and Code extension improvements",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/366",
        "text": "[glint]: Support the default helper manager RFC in `environment-ember-loose`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/368",
        "text": "[glint]: Handle nullable components/helpers/modifiers in Ember environments",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/370",
        "text": "[glint]: Add CONTRIBUTING.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/377",
        "text": "[glint]: Add support for project references and `--build`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/381",
        "text": "[glint]: core/cli: implement `glint --build --clean`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/382",
        "text": "[glint]: core/cli: implement `glint --build --force`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/383",
        "text": "[glint]: core/cli: implement `glint --build --dry`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/384",
        "text": "[glint]: Remove GlimmerX shims",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/386",
        "text": "[glint]: core/cli: add `glint --incremental` support",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/388",
        "text": "[glint]: Mention minimum Ember version",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/39",
        "text": "[glint]: handle default export in module augmentation",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/390",
        "text": "[glint]: Break `template()` in two",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/391",
        "text": "[glint]: Avoid trying to load a local TypeScript instance from the LSP",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/392",
        "text": "[glint]: Start publishing `@glint/environment-glimmerx` again",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/393",
        "text": "[glint]: Improve autosuggest slightly",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/394",
        "text": "[glint]: Explicitly document our expected peer versions",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/397",
        "text": "[glint]: feat: expose component helper for glimmerx",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/399",
        "text": "[glint]: feat: Expose Globals registry to glimmerx",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/4",
        "text": "[glint]: Introduce @glint/config",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/40",
        "text": "[glint]: Glint language server, etc.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/401",
        "text": "[glint]: Document @glint directives, incorporating suggestions",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/402",
        "text": "[glint]: core/cli: fix empty `.buildinfo` files with `--incremental`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/403",
        "text": "[glint]: bugfix: Actually include globals.d.ts",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/412",
        "text": "[glint]: add helper and modifier helpers",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/416",
        "text": "[glint]: Remove unhelpful `glint-language-server` docs page",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/419",
        "text": "[glint]: Add docs for JS usage, including an example",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/42",
        "text": "[glint]: Introduce demo-ember-app",
        "labels": [
          "testing"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/420",
        "text": "[glint]: Introduce an ARCHITECTURE.md file",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/423",
        "text": "[glint]: docs: remove caveat about JS from README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/424",
        "text": "[glint]: Add Common Error notes for `resolve` failures and missing `Globals` members",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/426",
        "text": "[glint]: Add support for `--build --watch`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/427",
        "text": "[glint]: Add `auto-glint-nocheck` script",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/428",
        "text": "[glint]: Honor `incremental: true` in `tsconfig.json`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/429",
        "text": "[glint]: Fix `render` inference in TS 4.8+",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/43",
        "text": "[glint]: Move `cli` -> `core`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/430",
        "text": "[glint]: Fix JS-backed types",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/431",
        "text": "[glint]: Add `{{unique-id}}` to `environment-ember-loose`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/432",
        "text": "[glint]: Improve custom diagnostic messages",
        "labels": [
          "enhancement",
          "error messages"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/435",
        "text": "[glint]: Add missing `glob` dependency to `@glint/scripts`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/437",
        "text": "[glint]: Note that generic template-only-component signatures are not supported",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/44",
        "text": "[glint]: Add `glint-language-server` to `@glint/core`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/440",
        "text": "[glint]: Handle out-of-scope files more cleanly in the language server",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/441",
        "text": "[glint]: Ensure we don't conflict with `declarationMap: true`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/442",
        "text": "[glint]: Further autocomplete improvements",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/447",
        "text": "[glint]: Overhaul internal `[Invoke]` signature representation",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/448",
        "text": "[glint]: Fix a typo in directives docs",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/45",
        "text": "[glint]: Add Language Service tests",
        "labels": [
          "testing"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/450",
        "text": "[glint]: Migrate to ESM",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/451",
        "text": "[glint]: Update addon docs with the outcome of #439",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/453",
        "text": "[glint]: Generalize handling of special forms",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/454",
        "text": "[glint]: Merge the `transform` and `config` packages into `core`",
        "labels": [
          "refactor"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/456",
        "text": "[glint]: Add support for equality operators (Ember RFC 560)",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/457",
        "text": "[glint]: Rename block param identifiers that conflict with JS/TS keywords.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/46",
        "text": "[glint]: Port tsserver-plugin tests for remaining uncovered language server functionality",
        "labels": [
          "testing"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/461",
        "text": "[glint]: Fix Get Helper",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/463",
        "text": "[glint]: Clean up package dependencies",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/464",
        "text": "[glint]: Drop support for the `transform` configuration key",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/465",
        "text": "[glint]: Drop `hbs` tag support in `ember-template-imports`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/467",
        "text": "[glint]: Use a `./glint-environment-definition` entrypoint for env packages",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/469",
        "text": "[glint]: honor `compilerOptions.incremental` in build mode",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/47",
        "text": "[glint]: Handle symbol rename requests in the language server",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/470",
        "text": "[glint]: Validate assignability rules for `ComponentLike` and friends",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/472",
        "text": "[glint]: Honor lowercase in-scope variables when used as components",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/473",
        "text": "[glint]: Support the `ShowIR` command for non-`.ts` files",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/474",
        "text": "[glint]: Add migration notes for 0.9 => 1.0",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/478",
        "text": "[glint]: docs: move registry interface inside registry ambient module",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/479",
        "text": "[glint]: Make the Code extension publishable",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/482",
        "text": "[glint]: Update minimum supported TS version to 4.8",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/483",
        "text": "[glint]: Fix up a couple ESM oddities in the CLI",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/484",
        "text": "[glint]: Ensure `link-to` can still be invoked with only named args",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/487",
        "text": "[glint]: Ensure unions of arg types distribute correctly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/489",
        "text": "[glint]: Handle `--isolatedModules` correctly when synthesizing a template backing module",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/49",
        "text": "[glint]: Add support for \"find references\" to `glint-language-server`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/490",
        "text": "[glint]: Introduce `@glint/type-test` package",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/492",
        "text": "[glint]: Add an option to the Code extension for where to look for @glint/core",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/493",
        "text": "[glint]: [v0.9] Introduce `@glint/type-test` package",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/495",
        "text": "[glint]: Ensure we handle `@glint-nocheck` in composite projects correctly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/497",
        "text": "[glint]: Fix typo in README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/498",
        "text": "[glint]: Widen supported range for ember-modifier to include v4",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/499",
        "text": "[glint]: Introduce CodeActions",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/50",
        "text": "[glint]: Add support for symbol search to `glint-language-server`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/500",
        "text": "[glint]: Ensure adding/removing directives busts any cached typecheck results",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/504",
        "text": "[glint]: Error when TS is insufficient version",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/51",
        "text": "[glint]: Add VS Code extension",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/510",
        "text": "[glint]: Add support for logical operators (RFC 562)",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/511",
        "text": "[glint]: Add documentation note about error substate routes",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/516",
        "text": "[glint]: Declare `@ember/test-helpers` as a peerDependency",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/52",
        "text": "[glint]: Drop @glint/tsserver-plugin",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/520",
        "text": "[glint]: Honor user formatting preferences in completions",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/523",
        "text": "[glint]: Validate that TS meets our minimum supported version requirement",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/527",
        "text": "[glint]: Use `{{get}}` notation in `noPropertyAccessFromIndexSignature` diagnostics",
        "labels": [
          "error messages"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/528",
        "text": "[glint]: Don't duplicate diagnostic code information",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/53",
        "text": "[glint]: More robust error handling in the language server",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/530",
        "text": "[glint]: Explicitly note the `Library Path` extension setting",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/537",
        "text": "[glint]: Small note about ember-template-imports",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/54",
        "text": "[glint]: Simplify resolution and support plain function helpers in GlimmerX",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/544",
        "text": "[glint]: Expose TS language service and original document contents in `ProjectAnalysis`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/545",
        "text": "[glint]: support additionalGlobals in template-imports environment",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/553",
        "text": "[glint]: Introduce `{{helper}}` and `{{modifier}}` helpers",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/558",
        "text": "[glint]: Allow `each-in` to accept `key` as a named arg",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/56",
        "text": "[glint]: Improve error reporting when failing to associate a companion template",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/561",
        "text": "[glint]: Bugfixes for the beta.5 `bind-invokable` refactor",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/562",
        "text": "[glint]: 1.0 Docs Updates",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/563",
        "text": "[glint]: [Bugfix] Drop `allowPlainFunctionInvocation` flag",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/564",
        "text": "[glint]: Fix broken links on \"Getting Started\" page",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/565",
        "text": "[glint]: Fix typo on Overview.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/567",
        "text": "[glint]: Don't pollute completions with globals in templates with syntax errors",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/57",
        "text": "[glint]: Ensure LSP requests don't use stale data",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/572",
        "text": "[glint]: Fix and extend ember-template-imports notes in installation.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/573",
        "text": "[glint]: Fix environment installation links in README.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/58",
        "text": "[glint]: Reexport glint-compatible versions of upstream values",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/583",
        "text": "[glint]: Add missing argument to LinkTo component type",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/586",
        "text": "[glint]: support template processing customization",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/59",
        "text": "[glint]: Distinguish instance- from direct-invokable types",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/60",
        "text": "[glint]: Break out reexports by path",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/600",
        "text": "[glint]: Update diagnosing-common-error-messages.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/605",
        "text": "[glint]: docs: document disabling VS Code TS plugin",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/606",
        "text": "[glint]: Expose `loadConfig` utility function",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/61",
        "text": "[glint]: Provide completions for template globals",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/616",
        "text": "[glint]: Fix \"Helper and Modifier Signatures\" code example",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/62",
        "text": "[glint]: Type `environment-ember-loose` intrinsics",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/620",
        "text": "[glint]: Support import paths with .gts extensions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/621",
        "text": "[glint]: Support custom extensions with `allowImportingTsExtensions`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/625",
        "text": "[glint]: Call out `ember-template-imports` config more clearly",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/629",
        "text": "[glint]: Update `vscode-uri` and match their docs",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/63",
        "text": "[glint]: Transform `{{unless}}` as `if (!...)`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/635",
        "text": "[glint]: Add \"Sort Imports\" command to vscode extension & lsp",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/637",
        "text": "[glint]: Add --preserveWatchOutput flag to avoid clearing console output in watch mode",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/64",
        "text": "[glint]: Ensure non-identifier hash keys are mapped correctly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/647",
        "text": "[glint]: docs: Add \"Template Imports\" page",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/654",
        "text": "[glint]: docs: fix typo",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/655",
        "text": "[glint]: Use `content-tag` instead of `ember-template-imports`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/656",
        "text": "[glint]: Fix organize-imports tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/657",
        "text": "[glint]: Fix debugging of TS Source so that breakpoints work when debugging the extension",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/66",
        "text": "[glint]: README: Getting Started",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/660",
        "text": "[glint]: Move ember-template-imports to dependencies instead of peerDependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/666",
        "text": "[glint]: fix windows tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/67",
        "text": "[glint]: Encourage decentralizing the template registry for Ember projects",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/677",
        "text": "[glint]: Auto Imports, remove JS/TS config",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/689",
        "text": "[glint]: Docs: Update ARCHITECTURE to reflect latest API",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/699",
        "text": "[glint]: feat(vscode): add jsx and tsx to the list of watched extensions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/7",
        "text": "[glint]: Fix merging auto-imports with existing import statements",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/70",
        "text": "[glint]: Introduce template primitives for modifiers and attrs",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/71",
        "text": "[glint]: Fix `ember-component` and `ember-helper` reexports",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/713",
        "text": "[glint]: check if template is in heritage clause",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/716",
        "text": "[glint]: Remove GlimmerX",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/74",
        "text": "[glint]: Make private modules clearly private",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/76",
        "text": "[glint]: Interpret functions that accept `unknown` in GlimmerX as helpers, not modifiers",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/79",
        "text": "[glint]: Show using `glint` to replace `tsc --noEmit`",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/8",
        "text": "[glint]: Simplify specifying block params",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/80",
        "text": "[glint]: Fix `each` not working with a `readonly` array",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/9",
        "text": "[glint]: Introduce environments",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/95",
        "text": "[glint]: Performance improvements",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/101",
        "text": "[glint]: Some sort of `assert` functionality",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/121",
        "text": "[glint]: More autocompletion",
        "labels": [
          "question"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/270",
        "text": "[glint]: Enable configuring template type checking separately from their TS file components",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/271",
        "text": "[glint]: \"Go to symbol in editor\" in Code does not work if built-in TS disabled",
        "labels": [
          "bug",
          "good first issue"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/387",
        "text": "[glint]: Allow inline component signatures on first-class, template-only components",
        "labels": [
          "design"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/411",
        "text": "[glint]: Discussion/pre-RFC: what is the right long-term home for environment types?",
        "labels": [
          "design"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/476",
        "text": "[glint]: Infer route model when controller exists",
        "labels": [
          "design"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/488",
        "text": "[glint]: add ability to run `glint --build` specifying a `--project` like tsc",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/506",
        "text": "[glint]: VSCode completion after disabling the builtin typescript extension",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/534",
        "text": "[glint]: glint language server incorrectly surfacing diagnostics form template-only components in non-TS packages",
        "labels": [
          "question"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/536",
        "text": "[glint]: glint cli does not produce declaration-related errors where tsc cli does",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/549",
        "text": "[glint]: Glint does resolve `extends` in `tsconfig.json` from external packages",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/568",
        "text": "[glint]: Reenable a couple helpers in strict mode",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/589",
        "text": "[glint]: `@glint-expect-error` cannot suppress errors from MustacheStatement in AttrNode ",
        "labels": [
          "design"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/591",
        "text": "[glint]: Assignability of union types for `Args`",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/595",
        "text": "[glint]: auto-glint-nocheck script fails because it could not find a source file",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/598",
        "text": "[glint]: How to use `glint-language-server`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/599",
        "text": "[glint]: `glint --declaration` fails to create declaration files when `@glint-ignore`, `@glint-expect-error`, or `@glint-nocheck` is used",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/601",
        "text": "[glint]: Semantic Token Scopes not provided",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/604",
        "text": "[glint]: LSP Suggestions",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/610",
        "text": "[glint]: Problem with generics in Signatures",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/614",
        "text": "[glint]: Syntax error in tsconfig.json causes out-of-memory error",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/617",
        "text": "[glint]: Bug?: \"Unclosed element `pre`, when `<pre>` is mentioned in test name of gts test file",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/626",
        "text": "[glint]: Quest: let's forward _all_ the ServerCapabilities to tsserver",
        "labels": [
          "hacktoberfest"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/628",
        "text": "[glint]: Import of .gts emits broken declarations",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/633",
        "text": "[glint]: Activate on gjs files",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/645",
        "text": "[glint]: {{#each-in}} breaks if used with a Map",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/649",
        "text": "[glint]: --watch reports errors when normal build does not",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/661",
        "text": "[glint]: *Like-bug: (ModifierLike, ComponentLike, etc?) When using WithBoundArgs,  Type instantiation is excessively deep and possibly infinite (requiring glint-ignore/expect-error to move forward in a project)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/667",
        "text": "[glint]: provide completions for element tag names",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/672",
        "text": "[glint]: Glint doesn’t support multiple Typescript extends",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/673",
        "text": "[glint]: VSCode question re \"Monorepos and Other Non-Workspace-Root Installations\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/675",
        "text": "[glint]: Custom Events and Typescript",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/676",
        "text": "[glint]: Goto Definition only works in gts files",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/679",
        "text": "[glint]: Remove the need for consumers to install `@glint/environment-` packages",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/681",
        "text": "[glint]: repo maintenance (if anyone wants to help)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/692",
        "text": "[glint]: auto-import / import-suggestions only work on gts files",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/693",
        "text": "[glint]: Allow attributes duplication on element",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/697",
        "text": "[glint]: Glint generates reference comments when using the `TOC` type",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/698",
        "text": "[glint]: `Cannot find module '@glimmer/env'` when trying to run `glint --declaration`",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/702",
        "text": "[glint]: \"Go to Declaration\" in Extension doesn't appear to support .d.ts.map files",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/703",
        "text": "[glint]: Enhance ContentValue Type to Support Template-Only Components",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/704",
        "text": "[glint]: `glint --declaration` fails to generate declarations when `tsc --declaration` reports errors",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/705",
        "text": "[glint]: Glint can't handle `hbs` (from ember-cli-htmlbars) while in a gjs file.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/707",
        "text": "[glint]: `${` in templates breaks Glint",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/711",
        "text": "[glint]: compat: `glint --build` does not report errors ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/712",
        "text": "[glint]: compat: `gts` files don't respect references and include from `tsconfig`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/715",
        "text": "[glint]: Narrowing `@namedArgs` does not work, but narrowing `this.args.namedArgs` does work.  (@X named args are not aliased to \"this.args.X\" internally)",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/719",
        "text": "[glint]: A keyword-only modifier does not type-check when used with the `modifier` helper",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/issues/90",
        "text": "[glint]: Codemods",
        "labels": [
          "enhancement",
          "good first issue"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/532",
        "text": "[glint]: feat: Introduce InlayHints",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/590",
        "text": "[glint]: Add support for `--build --verbose` invocations",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/632",
        "text": "[glint]: Add JS/TS code folding support to language server",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/659",
        "text": "[glint]: Make explicit extensions in imports work.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/663",
        "text": "[glint]: provide suggestions and type checking for elements attributes",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/669",
        "text": "[glint]: Add  \"Organize Imports\" command",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/671",
        "text": "[glint]: build: migrate to yarn v4",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/695",
        "text": "[glint]: [feat] improve attributes transform semantics to match hbs AST",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/696",
        "text": "[glint]: use new glimmer ElementNode sub nodes",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/701",
        "text": "[glint]: Loading tsconfig with extends array",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/708",
        "text": "[glint]: Add `Date` to ContentValue",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/typed-ember/glint/pull/709",
        "text": "[glint]: Fix project argument to match tsc",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "linting": {
    "issues": [
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1026",
        "text": "[eslint-plugin-ember]: TypeError: Cannot read property 'type' of undefined",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1035",
        "text": "[eslint-plugin-ember]: [require-super-in-lifecycle-hooks] False negative with Glimmer components?",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1037",
        "text": "[eslint-plugin-ember]: ember/no-shadow-route-definition false positive",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1041",
        "text": "[eslint-plugin-ember]: New rule: Prevent usage of `htmlSafe`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1049",
        "text": "[eslint-plugin-ember]: Possible bug in require-valid-css-selector-in-test-helpers rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1050",
        "text": "[eslint-plugin-ember]: New Rule: no-current-route-name",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1053",
        "text": "[eslint-plugin-ember]: New Rule: require-fetch-import",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1058",
        "text": "[eslint-plugin-ember]: no-component-lifecycle-hooks: False positive for `willDestroy()` hook",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1074",
        "text": "[eslint-plugin-ember]: New rule: `no-deprecated-transition-methods` ",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1075",
        "text": "[eslint-plugin-ember]: New Rule `no-array-prototype-extensions`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1088",
        "text": "[eslint-plugin-ember]: `no-classic-classes`: `getSourceModuleName` should only be called on a `CallExpression`, `MemberExpression` or `Identifier`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1097",
        "text": "[eslint-plugin-ember]: [require-valid-css-selector-in-test-helpers] `[data-foo` without the closing bracket is a valid CSS selector",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1107",
        "text": "[eslint-plugin-ember]: Error while parsing dynamic route map in no-shadow-route-definition rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1126",
        "text": "[eslint-plugin-ember]: `no-classic-classes` does not catch EmberObject.extend(someVariable)",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1133",
        "text": "[eslint-plugin-ember]: New rule: `no-store-find`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1134",
        "text": "[eslint-plugin-ember]: `no-shadow-route-definition` false positive",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1140",
        "text": "[eslint-plugin-ember]: New rule: `no-immediate-run`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1141",
        "text": "[eslint-plugin-ember]: no-get autofix is running on ObjectProxies",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1142",
        "text": "[eslint-plugin-ember]: New Rule: no-unused-service",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1154",
        "text": "[eslint-plugin-ember]: Best practice for `requireServiceNames` of `require-computed-property-dependencies.md`",
        "labels": [
          "Question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1155",
        "text": "[eslint-plugin-ember]: `emberUtils.isInjectedServiceProp` doesn't check imports",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1157",
        "text": "[eslint-plugin-ember]: `no-unused-services` rule should account for observer dependent keys",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1169",
        "text": "[eslint-plugin-ember]: Plan v11 Release",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1176",
        "text": "[eslint-plugin-ember]: `eslint-plugin-ember` doesn't work with `Glint`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1178",
        "text": "[eslint-plugin-ember]: New rule: `no-implicit-injections`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1190",
        "text": "[eslint-plugin-ember]: False positive with injected service detection `foo.service()` in classic class",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1257",
        "text": "[eslint-plugin-ember]: Getting \"AssertionError [ERR_ASSERTION]: Function should only be called on a `CallExpression` (classic class) or `ClassDeclaration` (native class)`\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1268",
        "text": "[eslint-plugin-ember]: `no-shadow-route-definition` ignores conditions",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1270",
        "text": "[eslint-plugin-ember]: `no-controller-access-in-routes`: Destructured controller does not get caught",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1282",
        "text": "[eslint-plugin-ember]: Node type doesn't necessarily exist in `no-controller-access-in-routes`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1332",
        "text": "[eslint-plugin-ember]: Does not work with ESLint v8",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1335",
        "text": "[eslint-plugin-ember]: 10.5.6 breaks",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1346",
        "text": "[eslint-plugin-ember]: ESLint throws \"Must use import to load ES Module...\"",
        "labels": [
          "Question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1371",
        "text": "[eslint-plugin-ember]: Disallow duplicate name in class members (no-dupe-class-members)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1373",
        "text": "[eslint-plugin-ember]: Allow empty glimmer component class with decorator",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1500",
        "text": "[eslint-plugin-ember]: Cannot disable no-jquery for whole file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1534",
        "text": "[eslint-plugin-ember]: False positives with `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1535",
        "text": "[eslint-plugin-ember]: Plan v12 Release",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1537",
        "text": "[eslint-plugin-ember]: Additional false positives with `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1548",
        "text": "[eslint-plugin-ember]: False positive with `no-array-prototype-extensions` when using `reject()`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1553",
        "text": "[eslint-plugin-ember]: Add special case for super in ember/no-array-prototype-extensions",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1561",
        "text": "[eslint-plugin-ember]: Even more false positives with `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1634",
        "text": "[eslint-plugin-ember]: Tweak autofix for `sortBy` in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1659",
        "text": "[eslint-plugin-ember]: Conflicts with prettier-plugin-ember-template-tag + eslint-plugin-prettier when linting gjs/gts files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1666",
        "text": "[eslint-plugin-ember]: False positives for `no-unused-vars` on gts files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1683",
        "text": "[eslint-plugin-ember]: Glimmer Processor can't handle errors without lines",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1701",
        "text": "[eslint-plugin-ember]: Propose new rule: no-tracked-properties-from-args",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1711",
        "text": "[eslint-plugin-ember]: `no-tracked-properties-from-args` blows up",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1728",
        "text": "[eslint-plugin-ember]: `no-deprecated-router-transition-methods` blows up",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1734",
        "text": "[eslint-plugin-ember]: `nodeToDependentKey` error when passing `this.someMethod()`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1747",
        "text": "[eslint-plugin-ember]: False positive `no-undef` for template-imports and contextual components",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1750",
        "text": "[eslint-plugin-ember]: --fix does not work in gjs/gts files",
        "labels": [
          "Bug",
          "Help Wanted"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1760",
        "text": "[eslint-plugin-ember]: Incorrect fix for `Promise.any` with `ember/no-array-prototype-extensions`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1770",
        "text": "[eslint-plugin-ember]: Cannot do type-aware lints with gts files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1771",
        "text": "[eslint-plugin-ember]: Error in ember/no-array-prototype-extensions after upgrading to 11.4.4",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1821",
        "text": "[eslint-plugin-ember]: Add `no-get` rule autofixer for `getProperties`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1822",
        "text": "[eslint-plugin-ember]: `ember/no-empty-glimmer-component-classes` should pass if class has generic parameter",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1833",
        "text": "[eslint-plugin-ember]: ember/use-ember-data-rfc-395-imports: Typescript and registries",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1835",
        "text": "[eslint-plugin-ember]: update ember/no-get fixer to support `firstObject`/`foo.0.bar` scenarios",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1840",
        "text": "[eslint-plugin-ember]: Enhancement - `no-get` rule and auto-fix",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1894",
        "text": "[eslint-plugin-ember]: <template> tag parsing issue in templates shorter than 3 characters ",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1897",
        "text": "[eslint-plugin-ember]: New rule to lint against referencing `let` variables in `<template>`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1901",
        "text": "[eslint-plugin-ember]: New Rule: no-render-modifiers",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1937",
        "text": "[eslint-plugin-ember]: eslint-plugin-ember@11.11.0 detects single-line components as zero-line components",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1940",
        "text": "[eslint-plugin-ember]: Parsing error for template tags within classes on v11.11.0",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1957",
        "text": "[eslint-plugin-ember]: Replace ember-template-imports with content-tag",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1989",
        "text": "[eslint-plugin-ember]: ESLint couldn't find the config \"plugin:ember/gts-recommended\" to extend from",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1991",
        "text": "[eslint-plugin-ember]: false positives for `no-unused-vars` in `gjs` files, when using `<Component as |something|>`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1993",
        "text": "[eslint-plugin-ember]: gjs/gts Incorrect token mapping after handlebars",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1995",
        "text": "[eslint-plugin-ember]: Support \"Type aware\" linting for gts files",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2061",
        "text": "[eslint-plugin-ember]: new \"flat\" configs contain invalid parser key",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2062",
        "text": "[eslint-plugin-ember]: `@typescript-eslint` breaks after update to `eslint-plugin-ember` v12",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2106",
        "text": "[eslint-plugin-ember]: @typescript-eslint/eslint-recommended not applicable to `*.gts` files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/668",
        "text": "[eslint-plugin-ember]: New Rule: Catch duplicate @attr in native classes",
        "labels": [
          "Enhancement",
          "Help Wanted",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/673",
        "text": "[eslint-plugin-ember]: require-computed-property-dependencies doesn't work with multi-line keys",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/675",
        "text": "[eslint-plugin-ember]: Not able to disable ember/no-observers in code",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/676",
        "text": "[eslint-plugin-ember]: New Rule: Use ember test-helper util function in tests instead of native window method",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/680",
        "text": "[eslint-plugin-ember]: New Rule: no-legacy-test-waiters",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/684",
        "text": "[eslint-plugin-ember]: Rules that are fixable should say so in their documentation",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/685",
        "text": "[eslint-plugin-ember]: New Rule: `no-incorrect-computed-macros`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/690",
        "text": "[eslint-plugin-ember]: New rule: catching case-sensitivity errors for `isFastBoot` property",
        "labels": [
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/696",
        "text": "[eslint-plugin-ember]: [no-private-routing-service] TypeError: Cannot read property 'value' of undefined",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/699",
        "text": "[eslint-plugin-ember]: Plan V8 Release",
        "labels": [
          "Enhancement",
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/701",
        "text": "[eslint-plugin-ember]: New Rule: `no-invalid-test-waiters`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/706",
        "text": "[eslint-plugin-ember]: Violations reported when trying to create an observer on init",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/708",
        "text": "[eslint-plugin-ember]: Curly braces used in computed properties has to be balanced.",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/710",
        "text": "[eslint-plugin-ember]: Improve contribution guide for adding new rules",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/717",
        "text": "[eslint-plugin-ember]: New Rule: `no-replace-test-comments`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/756",
        "text": "[eslint-plugin-ember]: Missing import statement when ember/no-incorrect-computed-macros fixer is run",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/762",
        "text": "[eslint-plugin-ember]: Prevent \"bad\" router usages",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/765",
        "text": "[eslint-plugin-ember]: Verify that changes landed in Ember do not fail `no-replace-test-comments`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/769",
        "text": "[eslint-plugin-ember]: `no-legacy-test-waiters` incorrectly flagging registerHelper import",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/784",
        "text": "[eslint-plugin-ember]: Latest release added additional rules that cause a breaking change?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/785",
        "text": "[eslint-plugin-ember]: require-computed-property-dependencies mustn't handle assignment",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/792",
        "text": "[eslint-plugin-ember]: require-computed-property-dependencies is thrown for root-level dependencies in braces",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/811",
        "text": "[eslint-plugin-ember]: Can't fix \"Import the `find()` method from @ember/test-helpers\"",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/822",
        "text": "[eslint-plugin-ember]: no-ember-super-in-es-classes lint rule's message should include the correct syntax",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/825",
        "text": "[eslint-plugin-ember]: Plan V9 Release",
        "labels": [
          "Enhancement",
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/836",
        "text": "[eslint-plugin-ember]: New Rule: Deprecate Components",
        "labels": [
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/837",
        "text": "[eslint-plugin-ember]: `require-computed-macros` rule could catch more possible macro usage",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/843",
        "text": "[eslint-plugin-ember]: support optional chaining for ember/no-get",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/844",
        "text": "[eslint-plugin-ember]: possible false flagging of require-computed-property-dependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/847",
        "text": "[eslint-plugin-ember]: Add optional chaining support to `require-computed-property-dependencies` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/849",
        "text": "[eslint-plugin-ember]: [Bug] `no-computed-properties-in-native-classes` default config value is not set properly",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/859",
        "text": "[eslint-plugin-ember]: no-observers rule triggers on variable named `observer`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/867",
        "text": "[eslint-plugin-ember]: [no-assignment-of-untracked-properties-used-in-tracking-contexts] False positive with constructors?",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/869",
        "text": "[eslint-plugin-ember]: False positive with `require-computed-macros` rule using `this.` for filterBy/mapBy value",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/889",
        "text": "[eslint-plugin-ember]: no-test-import-export rule should allowed importing from tests/helpers folder",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/890",
        "text": "[eslint-plugin-ember]: false positive in `ember/no-attrs-in-components`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/891",
        "text": "[eslint-plugin-ember]: `no-get` rule autofixer should handle nested paths that access array elements",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/896",
        "text": "[eslint-plugin-ember]: New Rule: `no-controller-access-in-routes`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/897",
        "text": "[eslint-plugin-ember]: `require-computed-property-dependencies` rule does not detect complete missing dependency when using a combination of both ES5 getters and `get`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/905",
        "text": "[eslint-plugin-ember]: `no-new-mixins`: `getSourceModuleName` should only be called on a `CallExpression`, `MemberExpression` or `Identifier`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/915",
        "text": "[eslint-plugin-ember]: `no-side-effects` rule false positive with closure",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/918",
        "text": "[eslint-plugin-ember]: Disallow noop `setupOnerror` in before/beforeEach",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/921",
        "text": "[eslint-plugin-ember]: no-actions-hash fails on class extensions that contain `...`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/922",
        "text": "[eslint-plugin-ember]: New Rule: Lint against firstObject/lastObject",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/924",
        "text": "[eslint-plugin-ember]: order-in-models: TypeError: Cannot read property 'name' of undefined",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/951",
        "text": "[eslint-plugin-ember]: New Rule: avoiding router routes definition conflict",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/958",
        "text": "[eslint-plugin-ember]: ember/no-side-effects doesn't work with plain getters",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/960",
        "text": "[eslint-plugin-ember]: Plan v10 Release",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/970",
        "text": "[eslint-plugin-ember]: no-test-support-import false positives",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/972",
        "text": "[eslint-plugin-ember]: New rule: Lint against `tryInvoke`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/979",
        "text": "[eslint-plugin-ember]: Disallow using invalid CSS selectors in test helpers",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/984",
        "text": "[eslint-plugin-ember]: New rule: no-settled-after-test-helper",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/992",
        "text": "[eslint-plugin-ember]: New Rule: `no-empty-glimmer-component-classes`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/997",
        "text": "[eslint-plugin-ember]: Auto-fixing 'no-get' with 'useOptionalChaining' broken with arrays",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/999",
        "text": "[eslint-plugin-ember]: 'ember/no-get-with-default' rule not working in any cases?",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1000",
        "text": "[eslint-plugin-ember]: Add `catchSafeObjects` and `catchUnsafeObjects` options (default false) to `no-get-with-default` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1001",
        "text": "[eslint-plugin-ember]: Fix issues with `no-get` rule autofix with array access in nested path",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1005",
        "text": "[eslint-plugin-ember]: Fix typo in `require-valid-css-selector-in-test-helpers` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1006",
        "text": "[eslint-plugin-ember]: Elaborate on configuration in `avoid-leaking-state-in-ember-objects` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1018",
        "text": "[eslint-plugin-ember]: Update `checkInitOnly` option default to false in `require-super-in-init` rule",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1019",
        "text": "[eslint-plugin-ember]: Update `checkNativeClasses` option default to true in `require-super-in-init` rule",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1020",
        "text": "[eslint-plugin-ember]: Rename `require-super-in-init` rule to `require-super-in-lifecycle-hooks`",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1021",
        "text": "[eslint-plugin-ember]: Update `checkPlainGetters` option default to true in `no-side-effects` rule",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1022",
        "text": "[eslint-plugin-ember]: Update `checkSafeObjects` option default to true in `no-get-with-default` rule",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1023",
        "text": "[eslint-plugin-ember]: Update `checkUnsafeObjects` option default to true in `no-get-with-default` rule",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1024",
        "text": "[eslint-plugin-ember]: Enable additional `recommended` rules for v10",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1025",
        "text": "[eslint-plugin-ember]: Promote `octane` rules to `recommended` config and delete `octane` config",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1027",
        "text": "[eslint-plugin-ember]: Fix crash when non-expression precedes `settled()` in `no-settled-after-test-helper` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1028",
        "text": "[eslint-plugin-ember]: Mention Ember 3.13 minimum version to use tracked properties and Glimmer components in some rule docs",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1029",
        "text": "[eslint-plugin-ember]: Handle comma-separated selectors in `require-valid-css-selector-in-test-helpers` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1030",
        "text": "[eslint-plugin-ember]: Allow using string functions directly from Ember in `no-string-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1036",
        "text": "[eslint-plugin-ember]: Catch `willDestroy` Glimmer component hook in `require-super-in-lifecycle-hooks` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1038",
        "text": "[eslint-plugin-ember]: Improve detection of global window methods in `prefer-ember-test-helpers` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1040",
        "text": "[eslint-plugin-ember]: `willDestroy` should be considered a classic component lifecycle hook in `require-super-in-lifecycle-hooks` and `no-component-lifecycle-hooks` rules",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1043",
        "text": "[eslint-plugin-ember]: Fix false positive in `no-shadow-route-definition` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1051",
        "text": "[eslint-plugin-ember]: Fix path checks for Windows in `no-test-import-export` and `no-test-support-import` rules",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1054",
        "text": "[eslint-plugin-ember]: Handle commas inside quotes in selectors in `require-valid-css-selector-in-test-helpers` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1055",
        "text": "[eslint-plugin-ember]: Add new rule `require-fetch-import`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1056",
        "text": "[eslint-plugin-ember]: Add new rule `no-current-route-name`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1059",
        "text": "[eslint-plugin-ember]: Do not warn about Glimmer lifecycle hooks on classic components in `no-component-lifecycle-hooks` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1061",
        "text": "[eslint-plugin-ember]: Re-roll yarn.lock from scratch",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1062",
        "text": "[eslint-plugin-ember]: Update highlight.js to v10",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1063",
        "text": "[eslint-plugin-ember]: Improve detection of globals and catch additional jQuery function calls in `no-jquery` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1066",
        "text": "[eslint-plugin-ember]: Improve detection of globals in `no-global-jquery` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1072",
        "text": "[eslint-plugin-ember]: Improve jquery detection in `jquery-ember-run` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1073",
        "text": "[eslint-plugin-ember]: Allow any Ember runloop function in `jquery-ember-run` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1079",
        "text": "[eslint-plugin-ember]: Add new rule `no-html-safe`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1080",
        "text": "[eslint-plugin-ember]: Update `no-html-safe` rule to flag call instead of import",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1081",
        "text": "[eslint-plugin-ember]: Update `avoid-leaking-state-in-ember-objects` rule to apply to mixins",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1102",
        "text": "[eslint-plugin-ember]: Fix crash with `this.extend()` in `no-classic-classes` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1103",
        "text": "[eslint-plugin-ember]: Only calculate source module name once in import util function for slight optimization",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1113",
        "text": "[eslint-plugin-ember]: Add `additionalClassImports` option to `no-classic-classes` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1114",
        "text": "[eslint-plugin-ember]: Ensure rules validate arrays in options to have at least one item and unique items",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1115",
        "text": "[eslint-plugin-ember]: Fix crash with dynamic/variable route name in `no-shadow-route-definition` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1117",
        "text": "[eslint-plugin-ember]: WIP: Failing test cases for #1116",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1127",
        "text": "[eslint-plugin-ember]: Add automated suggestion to `route-path-style` rule for converting route path to kebab case",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1132",
        "text": "[eslint-plugin-ember]: Fix crash with dynamic/variable route name in `no-shadow-route-definition` rule (again)",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1135",
        "text": "[eslint-plugin-ember]: Fix false positive in same level routes but nested paths in `no-shadow-route-definition` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1143",
        "text": "[eslint-plugin-ember]: Add new rule `no-unused-services`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1148",
        "text": "[eslint-plugin-ember]: Detect classic classes created with variable parameters",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1149",
        "text": "[eslint-plugin-ember]: Detect classic classes which have object variables passed to them in `no-classic-classes` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1150",
        "text": "[eslint-plugin-ember]: `no-get` rule should ignore proxy classes that look like `ObjectProxy.extend(SomeMixin)`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1151",
        "text": "[eslint-plugin-ember]: Fix `extend` typo in `no-assignment-of-untracked-properties-used-in-tracking-contexts` test cases",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1152",
        "text": "[eslint-plugin-ember]: docs: switch javascript code fences in doc code samples to js",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1158",
        "text": "[eslint-plugin-ember]: Improve robustness of classic class controller body detection in `no-controllers` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1159",
        "text": "[eslint-plugin-ember]: Improve robustness of classic class component body detection in `require-tagless-components` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1160",
        "text": "[eslint-plugin-ember]: Account for observer dependent keys in `no-unused-services` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1161",
        "text": "[eslint-plugin-ember]: Tweak messaging around false positives in `no-unused-services` rule",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1162",
        "text": "[eslint-plugin-ember]: Update several rules to check imports when checking for Ember service injections",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1164",
        "text": "[eslint-plugin-ember]: Account for `observes` decorator in `no-unused-services` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1165",
        "text": "[eslint-plugin-ember]: Improve robustness of classic class body detection in several rules using `getModuleProperties` util",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1166",
        "text": "[eslint-plugin-ember]: Check service import in `order-in-models` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1167",
        "text": "[eslint-plugin-ember]: Update route rules to handle route path option passed as object variable",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1168",
        "text": "[eslint-plugin-ember]: Avoid some false positives with jQuery usage when recognizing extended objects",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1170",
        "text": "[eslint-plugin-ember]: Further clarify limitations of `no-unused-services` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1177",
        "text": "[eslint-plugin-ember]: docs: mention limitations of `no-unused-services` rule in README",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1179",
        "text": "[eslint-plugin-ember]: Handle spread syntax with both `babel-eslint` and `@babel/eslint-parser` parsers in `order-in-*` rules",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1186",
        "text": "[eslint-plugin-ember]: Refresh yarn.lock",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1187",
        "text": "[eslint-plugin-ember]: Fix optional chaining support to handle newer ChainExpression implementation",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1188",
        "text": "[eslint-plugin-ember]: Add new rule `no-implicit-service-injection-argument`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1189",
        "text": "[eslint-plugin-ember]: Add a few test cases for service injection detection",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1194",
        "text": "[eslint-plugin-ember]: Add new rule `no-restricted-property-modifications`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1195",
        "text": "[eslint-plugin-ember]: Fix false positives with service/controller/observer detection in some rules",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1196",
        "text": "[eslint-plugin-ember]: Check import when detecting observer usage in `order-in-*` rules",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1197",
        "text": "[eslint-plugin-ember]: Check import when detecting controller usage in `order-in-*` rules",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1204",
        "text": "[eslint-plugin-ember]: Improve columns in README rules table",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1210",
        "text": "[eslint-plugin-ember]: Avoid some false positives with lodash usage when recognizing extended Ember objects",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1211",
        "text": "[eslint-plugin-ember]: Fix false positive with non-components in `require-tagless-components` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1212",
        "text": "[eslint-plugin-ember]: Improve detection of property names (check string literals in addition to identifiers) in several rules",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1213",
        "text": "[eslint-plugin-ember]: Explain why some rules are not in the `recommended` config",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1230",
        "text": "[eslint-plugin-ember]: Use `meta.hasSuggestions` for suggestable rules to prepare for ESLint 8",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1231",
        "text": "[eslint-plugin-ember]: Fix `eslint-plugin/test-case-property-ordering` lint rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1232",
        "text": "[eslint-plugin-ember]: Add `meta.hasSuggestions` to `no-unused-services` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1237",
        "text": "[eslint-plugin-ember]: Stop using deprecated ESLint `report` API",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1241",
        "text": "[eslint-plugin-ember]: Indicate which rules provide automated suggestions in README rules table",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1242",
        "text": "[eslint-plugin-ember]: Explain why `require-fetch-import` is not a `recommended` rule",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1243",
        "text": "[eslint-plugin-ember]: Indicate which rules provide automated suggestions in individual rule docs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1245",
        "text": "[eslint-plugin-ember]: Explain how to fix violations in `no-empty-glimmer-component-classes` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1275",
        "text": "[eslint-plugin-ember]: Fix typo in `no-controller-access-in-routes` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1277",
        "text": "[eslint-plugin-ember]: Fix IIFE crash in `require-return-from-computed` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1281",
        "text": "[eslint-plugin-ember]: Catch destructured controller access in `no-controller-access-in-routes` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1283",
        "text": "[eslint-plugin-ember]: Fix crash with `let foo` in `no-controller-access-in-routes`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1286",
        "text": "[eslint-plugin-ember]: Avoid unnecessary optional chaining in autofix for `no-get` rule when using `useOptionalChaining` option",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1290",
        "text": "[eslint-plugin-ember]: Add `npm-package-json-lint`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1294",
        "text": "[eslint-plugin-ember]: Super call missing arguments in some rule docs",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1297",
        "text": "[eslint-plugin-ember]: Support if/else route definitions in `no-shadow-route-definition` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1300",
        "text": "[eslint-plugin-ember]: Add `eslint-plugin` keywords in package.json",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1302",
        "text": "[eslint-plugin-ember]: Remove non-existent option from lint script",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1310",
        "text": "[eslint-plugin-ember]: Use consistent capitalization for \"ESLint\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1312",
        "text": "[eslint-plugin-ember]: Simplify CI dependency caching",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1318",
        "text": "[eslint-plugin-ember]: Drop support for Node 10, 12, 15, 17",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1321",
        "text": "[eslint-plugin-ember]: Fix markdownlint glob path",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1333",
        "text": "[eslint-plugin-ember]: Support ESLint v8 by switching from ESLint's internal traverser to `estraverse`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1336",
        "text": "[eslint-plugin-ember]: Avoid crash when estraverse does not recognize node type during traversal",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1351",
        "text": "[eslint-plugin-ember]: Deduplicate `yarn.lock` file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1363",
        "text": "[eslint-plugin-ember]: Ensure test coverage requirements are enforced",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1364",
        "text": "[eslint-plugin-ember]: Fix typos in violation message for `classic-decorator-hooks` rule",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1372",
        "text": "[eslint-plugin-ember]: Add test for tweaked rule jsdoc type comment",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1374",
        "text": "[eslint-plugin-ember]: Allow empty-but-decorated classes in `no-empty-glimmer-component-classes` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1395",
        "text": "[eslint-plugin-ember]: Support `<template>` (no-undef, etc)",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1410",
        "text": "[eslint-plugin-ember]: Fix broken URLs in documentation",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1422",
        "text": "[eslint-plugin-ember]: BREAKING CHANGE: drop node 10",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1431",
        "text": "[eslint-plugin-ember]: Fix crash in `jquery-ember-run` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1461",
        "text": "[eslint-plugin-ember]: Add new rule `no-array-prototype-extensions`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1476",
        "text": "[eslint-plugin-ember]: Catch `replace` in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1480",
        "text": "[eslint-plugin-ember]: Update optional rule example to use actual optional rule",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1484",
        "text": "[eslint-plugin-ember]: Improve links in `no-array-prototype-extensions` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1512",
        "text": "[eslint-plugin-ember]: Update `avoid-leaking-state-in-ember-objects` rule to augment instead of replace default config",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1513",
        "text": "[eslint-plugin-ember]: Stop exporting non-Ember utils",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1514",
        "text": "[eslint-plugin-ember]: Strictly define Node API",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1515",
        "text": "[eslint-plugin-ember]: Drop support for ESLint v6",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1516",
        "text": "[eslint-plugin-ember]: Set config `ecmaVersion` to `2020`",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1517",
        "text": "[eslint-plugin-ember]: Add `no-array-prototype-extensions` as `recommended` rule",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1518",
        "text": "[eslint-plugin-ember]: Remove `base` config",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1519",
        "text": "[eslint-plugin-ember]: Enable `useOptionalChaining` option by default for `no-get` rule",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1529",
        "text": "[eslint-plugin-ember]: Better support native class property definitions (and update to ESLint v8 internally)",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1532",
        "text": "[eslint-plugin-ember]: Fix Node 14.0.0 support by removing node protocol imports",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1536",
        "text": "[eslint-plugin-ember]: Ignore some commonly-known non-array functions/objects to reduce false positives in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1538",
        "text": "[eslint-plugin-ember]: Fix false positive with simple Set/Map-initialized objects in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1539",
        "text": "[eslint-plugin-ember]: Fix false positive with `RSVP.reject()` in `no-array-prototype-extensions`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1543",
        "text": "[eslint-plugin-ember]: Fix false positive with Set/Map-initialized *public* class properties in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1544",
        "text": "[eslint-plugin-ember]: Fix false positive with Set/Map-initialized *private* class properties in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1545",
        "text": "[eslint-plugin-ember]: Improve documentation for `no-*-prototype-extensions` rules",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1546",
        "text": "[eslint-plugin-ember]: Fix false positives with `RSVP.Promise.reject()` in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1547",
        "text": "[eslint-plugin-ember]: Improve false positive detection, especially for variable names containing Set/Map, in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1552",
        "text": "[eslint-plugin-ember]: Fix false positive with `reject()` on instance of `RSVP.defer()` in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1554",
        "text": "[eslint-plugin-ember]: Mention `no-array-prototype-extensions` ember-template-lint rule",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1555",
        "text": "[eslint-plugin-ember]: Ignore `super` in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1562",
        "text": "[eslint-plugin-ember]: Remove `no-array-prototype-extensions` rule from `recommended` config",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1569",
        "text": "[eslint-plugin-ember]: Add link to Ember function prototype extension deprecation RFC",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1582",
        "text": "[eslint-plugin-ember]: Add link to deprecation RFC in `no-array-prototype-extensions` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1601",
        "text": "[eslint-plugin-ember]: Switch to dash for markdown lists",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1609",
        "text": "[eslint-plugin-ember]: Add `any` to `some` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1610",
        "text": "[eslint-plugin-ember]: Add `filterBy` to `filter` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1611",
        "text": "[eslint-plugin-ember]: Add `compact` to `filter` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1614",
        "text": "[eslint-plugin-ember]: Add `findBy` to `find` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1615",
        "text": "[eslint-plugin-ember]: Add `objectAt` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1616",
        "text": "[eslint-plugin-ember]: Add `toArray` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1617",
        "text": "[eslint-plugin-ember]: Add `without` to `filter` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1618",
        "text": "[eslint-plugin-ember]: Add codemod links for jQuery-related rules",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1619",
        "text": "[eslint-plugin-ember]: Add `mapBy` to `map` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1620",
        "text": "[eslint-plugin-ember]: Add `uniq` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1621",
        "text": "[eslint-plugin-ember]: Add `sortBy` to `sort` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1626",
        "text": "[eslint-plugin-ember]: Add `uniqBy` to `reduce` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1627",
        "text": "[eslint-plugin-ember]: Add `rejectBy` to `filter` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1628",
        "text": "[eslint-plugin-ember]: Add `objectsAt` to `map` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1629",
        "text": "[eslint-plugin-ember]: Add `reject` to `filter` autofixer for no-array-prototype-extensions rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1630",
        "text": "[eslint-plugin-ember]: Add `isAny` and `isEvery` autofixers for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1631",
        "text": "[eslint-plugin-ember]: Add `invoke` to `map` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1632",
        "text": "[eslint-plugin-ember]: Add `getEach` to `map` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1633",
        "text": "[eslint-plugin-ember]: Add `setEach` to `forEach` autofixer for `no-array-prototype-extensions` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1635",
        "text": "[eslint-plugin-ember]: Simpler autofix for `sortBy` with single arg for `no-array-prototype-extension` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1639",
        "text": "[eslint-plugin-ember]: Explain what the autofixer covers in `no-array-prototype-extensions` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1640",
        "text": "[eslint-plugin-ember]: Avoid in-place sorting in `sortBy` autofixer in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1646",
        "text": "[eslint-plugin-ember]: Automate docs with eslint-doc-generator",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1667",
        "text": "[eslint-plugin-ember]: Avoid some errors that break eslint-plugin-ember for gts",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1687",
        "text": "[eslint-plugin-ember]: Don't lose optional chaining with `objectAt` in autofix for `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1693",
        "text": "[eslint-plugin-ember]: Mention ESLint overrides for glob patterns in `no-restricted-service-injections` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1702",
        "text": "[eslint-plugin-ember]: Add new rule `no-tracked-properties-from-args`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1703",
        "text": "[eslint-plugin-ember]: Add new rule `no-runloop`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1712",
        "text": "[eslint-plugin-ember]: Fix crash with `no-tracked-properties-from-args` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1714",
        "text": "[eslint-plugin-ember]: Add new rule `no-implicit-injections`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1715",
        "text": "[eslint-plugin-ember]: Add new rule `no-deprecated-router-transition-methods`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1722",
        "text": "[eslint-plugin-ember]: Fix some crashes including with legacy classes in `no-deprecated-router-transition-methods` and `no-implicit-injections` rules",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1731",
        "text": "[eslint-plugin-ember]: Handle new service import style in several rules",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1735",
        "text": "[eslint-plugin-ember]: Fix crash from attempting to access non-existent dependent key in `no-tracked-property-from-args` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1748",
        "text": "[eslint-plugin-ember]: Ignore Ember Data `store` service calls in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1749",
        "text": "[eslint-plugin-ember]: Ignore direct instantiation of `EmberArray` in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1761",
        "text": "[eslint-plugin-ember]: Fix false positive with `Promise.any()` in `no-array-prototype-extensions` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1767",
        "text": "[eslint-plugin-ember]: Bump ember-template-imports to `v3.4.1`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1783",
        "text": "[eslint-plugin-ember]: Explain why route shadowing should be avoided in `no-shadow-route-definition` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1788",
        "text": "[eslint-plugin-ember]: Fix `no-array-prototype extensions` undefined error from trying to access callee from non-CallExpression",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1792",
        "text": "[eslint-plugin-ember]: [gjs] Return original diagnostic if transformed line matches original line in glimmer preprocessor",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1793",
        "text": "[eslint-plugin-ember]: [gjs] Fix bug with regex issues when parsing GLIMMER_TEMPLATE",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1794",
        "text": "[eslint-plugin-ember]: linter reports incorrect line number when line contains <template> tag",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1795",
        "text": "[eslint-plugin-ember]: refactor glimmer post-process, better handle template tag",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1801",
        "text": "[eslint-plugin-ember]: Fix issue with token mapping for lint errors on template tokens in gjs/gts files by displaying eslint error on the opening `<template>` tag",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1819",
        "text": "[eslint-plugin-ember]: Bump ember-template-imports to 3.4.2",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1823",
        "text": "[eslint-plugin-ember]: Add `getProperties` autofixer to `no-get` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1828",
        "text": "[eslint-plugin-ember]: Clarify error message for `no-pause-test` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1841",
        "text": "[eslint-plugin-ember]: Fix a bug in autofixer and autofix additional cases with `firstObject` and `lastObject` in `no-get` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1846",
        "text": "[eslint-plugin-ember]: No-get  lastObject improvement",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1847",
        "text": "[eslint-plugin-ember]: Add `useAt` option to autofix `.lastObject` to `.at(-1)` in `no-get` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1852",
        "text": "[eslint-plugin-ember]: Only show `no-undef` errors for templates in gts files",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1853",
        "text": "[eslint-plugin-ember]: Support autofix in gts files",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1865",
        "text": "[eslint-plugin-ember]: Support autofix of numerical property access and ternary expressions in `no-get` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1866",
        "text": "[eslint-plugin-ember]: Account for class only having template tag in `no-empty-glimmer-component-classes` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1868",
        "text": "[eslint-plugin-ember]: [Docs] Use js syntax highlighting for no-empty-glimmer-component-classes",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1869",
        "text": "[eslint-plugin-ember]: Avoid crash with `inject` decorator in `no-restricted-service-injections` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1870",
        "text": "[eslint-plugin-ember]: Fix crash with default computed property import in `no-unused-services` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1871",
        "text": "[eslint-plugin-ember]: Avoid further decorator detection crashes in `no-restricted-service-injections` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1876",
        "text": "[eslint-plugin-ember]: Allow generic type in TypeScript class in `no-empty-glimmer-component-classes` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1899",
        "text": "[eslint-plugin-ember]: Check template tags for service usages in `no-unused-services`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1902",
        "text": "[eslint-plugin-ember]: Add new rule `no-at-ember-render-modifiers`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1920",
        "text": "[eslint-plugin-ember]: Use custom parser for gts/gjs",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1933",
        "text": "[eslint-plugin-ember]: Remove `routes-segments-snake-case` as a recommended rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1938",
        "text": "[eslint-plugin-ember]: fix no empty glimmer class",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1939",
        "text": "[eslint-plugin-ember]: Add new rule `template-no-let-reference`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1941",
        "text": "[eslint-plugin-ember]: Revert \"Use custom parser for gts/gjs (#1920)\"",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1942",
        "text": "[eslint-plugin-ember]: Use custom parser for gts/gjs",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1943",
        "text": "[eslint-plugin-ember]: Add new rule `template-indent`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1944",
        "text": "[eslint-plugin-ember]: Add gts/gjs configs",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1962",
        "text": "[eslint-plugin-ember]: Drop support for Node 14, 16, 19",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1963",
        "text": "[eslint-plugin-ember]: Add new `recommended` rules: `no-at-ember-render-modifiers`, `no-deprecated-router-transition-methods`, `no-implicit-injections`, `no-runloop`, `no-tracked-properties-from-args`,",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1965",
        "text": "[eslint-plugin-ember]: Change `useAt` option default to `true` at in `no-get` rule",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1966",
        "text": "[eslint-plugin-ember]: Automatically generate README configs list with eslint-doc-generator",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1967",
        "text": "[eslint-plugin-ember]: Drop support for ESLint 7",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1968",
        "text": "[eslint-plugin-ember]: Update Node compatibility in readme",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1969",
        "text": "[eslint-plugin-ember]: Add automatic rule option lists with eslint-doc-generator",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1970",
        "text": "[eslint-plugin-ember]: add explanation comments",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1971",
        "text": "[eslint-plugin-ember]: Add template block comment eslint directives",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1972",
        "text": "[eslint-plugin-ember]: fix first class component templates plugin link",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1973",
        "text": "[eslint-plugin-ember]: fix README.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1975",
        "text": "[eslint-plugin-ember]: Update almost all dependencies",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1976",
        "text": "[eslint-plugin-ember]: improve tests for template no let rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1977",
        "text": "[eslint-plugin-ember]: Add new `recommended` rule: `template-no-let-reference`",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1978",
        "text": "[eslint-plugin-ember]: Set config `ecmaVersion` to `2022`",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1979",
        "text": "[eslint-plugin-ember]: Switch to `@release-it-plugins/lerna-changelog`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1980",
        "text": "[eslint-plugin-ember]: Improve gts gjs configuration example",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1981",
        "text": "[eslint-plugin-ember]: Add `template-no-let-reference` rule to `recommended-gjs` and `recommended-gts` configs ",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1982",
        "text": "[eslint-plugin-ember]: Fix missing gjs/cts config icons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1984",
        "text": "[eslint-plugin-ember]: Update `@typescript-eslint/` dependencies to v6",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1990",
        "text": "[eslint-plugin-ember]: Fix names for `recommended-gts` / `recommended-gjs` configs in readme",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1992",
        "text": "[eslint-plugin-ember]: [gjs/gts parser] fix references for tags with a dot & non standard html tags",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1994",
        "text": "[eslint-plugin-ember]: [gjs/gts parser] fix locations for ast after templates",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1996",
        "text": "[eslint-plugin-ember]: [gjs-gts-parser] fix type aware linting when using ts+gts files",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2005",
        "text": "[eslint-plugin-ember]: [gjs-gts-parser] fix parsing when there are multiple default `<template>` blocks (not allowed)",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2020",
        "text": "[eslint-plugin-ember]: Support ESLint flat config",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2027",
        "text": "[eslint-plugin-ember]: Allow ember-data type registry imports in `use-ember-data-rfc-395-imports` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2028",
        "text": "[eslint-plugin-ember]: Move gjs/gts parser to `ember-eslint-parser` library",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2029",
        "text": "[eslint-plugin-ember]: Changes from v11.12.0",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2038",
        "text": "[eslint-plugin-ember]: Revert \"Add `lint:fix` script (#2036)\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2039",
        "text": "[eslint-plugin-ember]: Fix script",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2046",
        "text": "[eslint-plugin-ember]: Fix issue with `no-deprecated-router-transition-methods` throwing errors outside of class usage",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2055",
        "text": "[eslint-plugin-ember]: Bump ember-eslint-parser to `0.2.5` - Includes fix for SVG scope parsing",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2068",
        "text": "[eslint-plugin-ember]: add `plugin:@typescript-eslint/recommended` to readme for GTS",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2071",
        "text": "[eslint-plugin-ember]: Fix nested classes case in `no-ember-super-in-es-classes`",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2088",
        "text": "[eslint-plugin-ember]: add doc about gts imports in ts files",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2091",
        "text": "[eslint-plugin-ember]: Upgrade ember-eslint-parser to 0.3.6",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2092",
        "text": "[eslint-plugin-ember]: Fix flat config for gts/gjs and `noop` parser name",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2094",
        "text": "[eslint-plugin-ember]: Update jsdom to v24",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2107",
        "text": "[eslint-plugin-ember]: include recommended ts-eslint rules for gts",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2117",
        "text": "[eslint-plugin-ember]: update ember eslint parser",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/669",
        "text": "[eslint-plugin-ember]: Add \"Help Wanted\" section to documentation for rules that are missing native JavaScript class support",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/670",
        "text": "[eslint-plugin-ember]: Update `order-in-*` rules to consider template literals as properties",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/674",
        "text": "[eslint-plugin-ember]: Update `require-computed-property-dependencies` rule to handle basic string concatenation in dependent keys",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/677",
        "text": "[eslint-plugin-ember]: Fix markdownlint violations in README.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/678",
        "text": "[eslint-plugin-ember]: Improve internal lint scripts",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/681",
        "text": "[eslint-plugin-ember]: Add new rule `no-legacy-test-waiters`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/683",
        "text": "[eslint-plugin-ember]: Add TODOs to rule doc template",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/688",
        "text": "[eslint-plugin-ember]: Lint code samples with eslint-plugin-markdown",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/691",
        "text": "[eslint-plugin-ember]: Add new rule `no-mixins`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/694",
        "text": "[eslint-plugin-ember]: Add new rule `no-private-routing-service`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/695",
        "text": "[eslint-plugin-ember]: Add new rule `no-incorrect-computed-macros`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/697",
        "text": "[eslint-plugin-ember]: Handle service injections with no arguments in `no-private-routing-service` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/698",
        "text": "[eslint-plugin-ember]: Tweak a few rule error messages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/702",
        "text": "[eslint-plugin-ember]: Add new rule `no-invalid-test-waiters`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/705",
        "text": "[eslint-plugin-ember]: Support TypeScript files when checking if rules are running on Ember module or test files",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/709",
        "text": "[eslint-plugin-ember]: Add new rule `no-invalid-dependent-keys`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/711",
        "text": "[eslint-plugin-ember]: Improve contribution guide for adding new rules",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/712",
        "text": "[eslint-plugin-ember]: Improve path generation in rule setup tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/713",
        "text": "[eslint-plugin-ember]: Add tests to ensure each rule documentation file has the right title and an examples section",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/714",
        "text": "[eslint-plugin-ember]: Remove outdated contributors lists",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/715",
        "text": "[eslint-plugin-ember]: Mention if a rule is auto-fixable in its documentation",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/716",
        "text": "[eslint-plugin-ember]: Revamp the guide for contributing a new rule",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/718",
        "text": "[eslint-plugin-ember]: Add new rule `no-replace-test-comments`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/719",
        "text": "[eslint-plugin-ember]: Validate imports before reporting violations in `no-invalid-debug-function-arguments` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/721",
        "text": "[eslint-plugin-ember]: Add link to eslint \"Working with rules\" doc in README",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/722",
        "text": "[eslint-plugin-ember]: Tweak some rule descriptions for clarity",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/723",
        "text": "[eslint-plugin-ember]: Sort rule categories alphabetically in README",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/724",
        "text": "[eslint-plugin-ember]: Recategorize rules in README",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/728",
        "text": "[eslint-plugin-ember]: Allow brace expansion with `and`, `or` macros in `no-incorrect-computed-macros` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/729",
        "text": "[eslint-plugin-ember]: Update `ignoreNestedPaths` option default to `false` for `no-get` rule",
        "labels": [
          "Enhancement",
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/730",
        "text": "[eslint-plugin-ember]: Drop Node 8, 9, and 11 support",
        "labels": [
          "Enhancement",
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/731",
        "text": "[eslint-plugin-ember]: Enable additional `recommended` rules",
        "labels": [
          "Enhancement",
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/737",
        "text": "[eslint-plugin-ember]: Mention tracked properties as a fix for `classic-decorator-no-classic-methods`",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/738",
        "text": "[eslint-plugin-ember]: Use sets instead of arrays for better performance",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/739",
        "text": "[eslint-plugin-ember]: Fix crashes in `no-invalid-test-waiters` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/740",
        "text": "[eslint-plugin-ember]: Improve examples for `no-invalid-test-waiters` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/742",
        "text": "[eslint-plugin-ember]: Detect invalid position of `@each` or `[]` in `no-invalid-dependent-keys` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/743",
        "text": "[eslint-plugin-ember]: Recreate lockfile",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/744",
        "text": "[eslint-plugin-ember]: Fix some invalid test case properties",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/745",
        "text": "[eslint-plugin-ember]: Replace `this.get('property')` with `this.property` in rule examples",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/746",
        "text": "[eslint-plugin-ember]: Do not disable non-recommended rules in the `recommended` config",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/747",
        "text": "[eslint-plugin-ember]: Add autofixer to `no-get-with-default` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/748",
        "text": "[eslint-plugin-ember]: Switch to new module imports in rule examples",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/749",
        "text": "[eslint-plugin-ember]: Add missing init hook super calls in rule examples",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/752",
        "text": "[eslint-plugin-ember]: Remove `no-empty-attrs` from `recommended` config",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/755",
        "text": "[eslint-plugin-ember]: Add note about nullish coalescing operator in `no-get-with-default` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/758",
        "text": "[eslint-plugin-ember]: Fix typo in example in `no-side-effects` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/759",
        "text": "[eslint-plugin-ember]: Update each rule doc to mention what config enables the rule",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/763",
        "text": "[eslint-plugin-ember]: WIP - DO NOT MERGE - New Rule: prefer-ember-test-helpers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/764",
        "text": "[eslint-plugin-ember]: Catch unnecessary braces in `no-invalid-dependent-keys` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/767",
        "text": "[eslint-plugin-ember]: Add new rule `prefer-ember-test-helpers`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/768",
        "text": "[eslint-plugin-ember]: Catch leading or trailing periods in `no-invalid-dependent-keys`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/770",
        "text": "[eslint-plugin-ember]: WIP: failing test case for #769 - `no-legacy-test-waiters` incorrectly flagging registerHelper import",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/771",
        "text": "[eslint-plugin-ember]: Fix false positives in `no-legacy-test-waiters` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/772",
        "text": "[eslint-plugin-ember]: Update some rule docs regarding native class and decorator support and add test cases",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/773",
        "text": "[eslint-plugin-ember]: Add autofixer to `no-duplicate-dependent-keys` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/774",
        "text": "[eslint-plugin-ember]: Catch spaces in `no-invalid-dependent-keys` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/775",
        "text": "[eslint-plugin-ember]: Add support for explicit getter functions in `require-computed-property-dependencies` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/778",
        "text": "[eslint-plugin-ember]: Add new rule `no-test-this-render`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/779",
        "text": "[eslint-plugin-ember]: Add decorator support to `require-computed-property-dependencies` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/780",
        "text": "[eslint-plugin-ember]: Correct some rule docs about native class and decorator support and add some test cases (again)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/781",
        "text": "[eslint-plugin-ember]: Add decorator support to `no-unnecessary-service-injection-argument` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/783",
        "text": "[eslint-plugin-ember]: WIP: Failing test case for #782",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/786",
        "text": "[eslint-plugin-ember]: Ignore the left side of an assignment in `require-computed-property-dependencies` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/787",
        "text": "[eslint-plugin-ember]: Improve error message for `no-test-this-render` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/788",
        "text": "[eslint-plugin-ember]: Cleanup tests for `no-side-effects` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/789",
        "text": "[eslint-plugin-ember]: Add decorator support to `no-side-effects` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/790",
        "text": "[eslint-plugin-ember]: Catch assignment in `no-side-effects` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/791",
        "text": "[eslint-plugin-ember]: Cleanup tests for `require-return-from-computed` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/793",
        "text": "[eslint-plugin-ember]: Add some util function tests and reorganize some util files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/794",
        "text": "[eslint-plugin-ember]: Handle braces without nesting in `require-computed-property-dependencies` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/795",
        "text": "[eslint-plugin-ember]: Disallow accessing `_routerMicrolib` in `no-private-routing-service` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/797",
        "text": "[eslint-plugin-ember]: Remove duplicate example from `no-observers` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/800",
        "text": "[eslint-plugin-ember]: Handle `@computed` decorator without parentheses in `no-side-effects` and `require-computed-property-dependencies` rules",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/802",
        "text": "[eslint-plugin-ember]: Ignore `mirage/config.js` file in `no-get` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/806",
        "text": "[eslint-plugin-ember]: Run linting in parallel",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/807",
        "text": "[eslint-plugin-ember]: Move new functionality behind `catchRouterMicrolib` option on `no-private-routing-service` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/812",
        "text": "[eslint-plugin-ember]: Fix false negative when aliasing import in `prefer-ember-test-helpers` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/813",
        "text": "[eslint-plugin-ember]: Fix false positive with multiple imports in `prefer-ember-test-helpers` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/821",
        "text": "[eslint-plugin-ember]: Avoid some false positives when detecting if a file is an Ember component, controller, etc",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/823",
        "text": "[eslint-plugin-ember]: Include recommended fix in `no-ember-super-in-es-classes` rule error message",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/824",
        "text": "[eslint-plugin-ember]: Add .markdownlintignore",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/826",
        "text": "[eslint-plugin-ember]: Update `no-computed-properties-in-native-classes` rule to ignore classes marked `@classic`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/827",
        "text": "[eslint-plugin-ember]: Add new rule `no-restricted-service-injections`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/833",
        "text": "[eslint-plugin-ember]: Make failures more clear/actionable in rule setup tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/834",
        "text": "[eslint-plugin-ember]: Add link to jQuery RFCs in `no-jquery` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/835",
        "text": "[eslint-plugin-ember]: Rename `error` option to `message` on `no-restricted-service-injections` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/838",
        "text": "[eslint-plugin-ember]: Mention related ember-template-lint rule `invocable-blacklist` in `no-restricted-service-injections` rule doc",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/839",
        "text": "[eslint-plugin-ember]: Support `filterBy` and `mapBy` macros in `require-computed-macros` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/840",
        "text": "[eslint-plugin-ember]: Add `includeNativeGetters` option (default false) to `require-computed-macros` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/841",
        "text": "[eslint-plugin-ember]: Add decorator support to `require-return-from-computed` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/842",
        "text": "[eslint-plugin-ember]: Explain why `require-return-from-computed` rule does not apply to native classes",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/845",
        "text": "[eslint-plugin-ember]: Add `useOptionalChaining` option (default false) to `no-get` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/846",
        "text": "[eslint-plugin-ember]: Support optional chaining in `require-computed-macros` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/848",
        "text": "[eslint-plugin-ember]: Support optional chaining in `require-computed-property-dependencies` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/854",
        "text": "[eslint-plugin-ember]: Add `findDecorator` util and move to new decorator utils file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/855",
        "text": "[eslint-plugin-ember]: Add new rule `no-assignment-of-untracked-properties-used-in-tracking-contexts`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/856",
        "text": "[eslint-plugin-ember]: Handle nested paths with ES5 setters in `no-side-effects` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/857",
        "text": "[eslint-plugin-ember]: Ignore the left side of an assignment (nested path case) in `require-computed-property-dependencies` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/858",
        "text": "[eslint-plugin-ember]: Rename `getParent` util function to `getAncestor`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/860",
        "text": "[eslint-plugin-ember]: Change confusing behavior of `hasDecorator` util",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/861",
        "text": "[eslint-plugin-ember]: Extract some computed property dependent key utils into util file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/862",
        "text": "[eslint-plugin-ember]: Use `flatMap` util",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/863",
        "text": "[eslint-plugin-ember]: Rename internal variables to use allow-list/deny-list",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/864",
        "text": "[eslint-plugin-ember]: Fix default value of `ignoreClassic` option to be true for `no-computed-properties-in-native-classes` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/865",
        "text": "[eslint-plugin-ember]: Rename util function to `isExtendObject`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/866",
        "text": "[eslint-plugin-ember]: Fix missing import statement in autofix for `no-incorrect-computed-macros` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/868",
        "text": "[eslint-plugin-ember]: Fix false negatives in `no-invalid-test-waiters` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/870",
        "text": "[eslint-plugin-ember]: Fix false positive involving `this` keyword with `filterBy` / `mapBy` in `require-computed-macros` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/871",
        "text": "[eslint-plugin-ember]: Add `catchRouterMain` option (default false) to `no-private-routing-service` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/872",
        "text": "[eslint-plugin-ember]: Rename `flatten` util to `flat`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/879",
        "text": "[eslint-plugin-ember]: Autofix nested paths in the left side of an assignment without using optional chaining in the `no-get` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/880",
        "text": "[eslint-plugin-ember]: Check imports in `no-get` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/881",
        "text": "[eslint-plugin-ember]: Check imports in `no-get-with-default` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/882",
        "text": "[eslint-plugin-ember]: Check imports in `no-pause-test` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/883",
        "text": "[eslint-plugin-ember]: Gather dependent keys from computed property macros in `no-assignment-of-untracked-properties-used-in-tracking-contexts` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/886",
        "text": "[eslint-plugin-ember]: Remove invalid test case with no error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/887",
        "text": "[eslint-plugin-ember]: Add option for custom computed property macros in `no-assignment-of-untracked-properties-used-in-tracking-contexts` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/892",
        "text": "[eslint-plugin-ember]: Switch from unnecessary dynamic error message to static error message in `no-get` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/893",
        "text": "[eslint-plugin-ember]: Support array element access in `no-get` rule autofix",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/894",
        "text": "[eslint-plugin-ember]: Ensure `no-attrs-in-components` rule only runs inside components",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/895",
        "text": "[eslint-plugin-ember]: Update `no-test-import-export` rule to allow importing from anything under `tests/helpers` path",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/898",
        "text": "[eslint-plugin-ember]: Add new rule `no-controller-access-in-routes`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/906",
        "text": "[eslint-plugin-ember]: Avoid crash from classes extending a non-identifier superclass during Ember core module check",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/907",
        "text": "[eslint-plugin-ember]: Check imports in `require-computed-property-dependencies` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/908",
        "text": "[eslint-plugin-ember]: Check imported get/getProperties/getWithDefault functions for missing dependencies in `require-computed-property-dependencies` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/909",
        "text": "[eslint-plugin-ember]: Check imports when detecting computed properties in many rules",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/911",
        "text": "[eslint-plugin-ember]: Update `no-test-import-export` rule to allow importing from anything under `tests/helpers` path (when using relative path)",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/912",
        "text": "[eslint-plugin-ember]: Add `catchSafeObjects` option (default false) to `no-get` rule to catch `get(foo, 'bar')`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/913",
        "text": "[eslint-plugin-ember]: Add `catchUnsafeObjects` option (default false) to `no-get` rule to catch `foo.get('bar')`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/914",
        "text": "[eslint-plugin-ember]: Improve `set()` detection logic in `no-side-effects` rule to avoid false positives, catch missed cases, and check imports",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/916",
        "text": "[eslint-plugin-ember]: Add `catchEvents` option (default false) to `no-side-effects` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/917",
        "text": "[eslint-plugin-ember]: Add `ignoreClosures` option (default false) to `no-side-effects` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/919",
        "text": "[eslint-plugin-ember]: Fix crash with variable path in `route-path-style` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/920",
        "text": "[eslint-plugin-ember]: Add new rule `no-noop-setup-on-error-in-before`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/923",
        "text": "[eslint-plugin-ember]: Fix crash with spread syntax in `no-actions-hash` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/928",
        "text": "[eslint-plugin-ember]: Refactor `require-super-in-init` rule to improve performance",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/929",
        "text": "[eslint-plugin-ember]: Fix spread syntax crash in `avoid-using-needs-in-controllers` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/930",
        "text": "[eslint-plugin-ember]: Fix spread syntax crash in `no-restricted-resolver-tests` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/931",
        "text": "[eslint-plugin-ember]: Fix spread syntax crash in `no-unnecessary-route-path-option` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/932",
        "text": "[eslint-plugin-ember]: Fix spread syntax crash in `route-path-style` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/933",
        "text": "[eslint-plugin-ember]: Fix spread syntax crash in `routes-segments-snake-case` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/934",
        "text": "[eslint-plugin-ember]: Add support and enforcement for spread syntax in `order-in-*` rules",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/936",
        "text": "[eslint-plugin-ember]: Add dependabot configuration",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/938",
        "text": "[eslint-plugin-ember]: Drop Node 13 support",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/939",
        "text": "[eslint-plugin-ember]: Drop ESLint 5 support and add peer dependency on ESLint 6+",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/940",
        "text": "[eslint-plugin-ember]: Enable additional recommended rules",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/941",
        "text": "[eslint-plugin-ember]: Enable `catchRouterMicrolib` and `catchRouterMain` options in `no-private-routing-service` rule",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/942",
        "text": "[eslint-plugin-ember]: Enable `catchSafeObjects` option in `no-get` rule",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/943",
        "text": "[eslint-plugin-ember]: Enable `catchEvents` option in `no-side-effects` rule",
        "labels": [
          "Breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/950",
        "text": "[eslint-plugin-ember]: Add autofixer to `require-super-in-init` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/956",
        "text": "[eslint-plugin-ember]: Add imports in `no-test-module-for` rule doc",
        "labels": [
          "Documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/957",
        "text": "[eslint-plugin-ember]: Add `checkInitOnly` (default true) and `checkNativeClasses` (default false) options to `require-super-in-init` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/959",
        "text": "[eslint-plugin-ember]: Tweak autofix for `require-super-in-init` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/961",
        "text": "[eslint-plugin-ember]: Add `checkPlainGetters` option (default false) to `no-side-effects` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/962",
        "text": "[eslint-plugin-ember]: Do not pass `...arguments` in autofix for attrs hooks in `require-super-in-init` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/966",
        "text": "[eslint-plugin-ember]: Add new rule `no-test-support-import`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/967",
        "text": "[eslint-plugin-ember]: Avoid false positives and properly check imports in `no-observers` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/971",
        "text": "[eslint-plugin-ember]: Handle path separators for different platforms in `no-test-support-import` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/973",
        "text": "[eslint-plugin-ember]: Add new rule `no-try-invoke`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/978",
        "text": "[eslint-plugin-ember]: Add new rule `no-shadow-route-definition`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/980",
        "text": "[eslint-plugin-ember]: Add new rule `require-valid-css-selector-in-test-helpers`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/985",
        "text": "[eslint-plugin-ember]: Add new rule `no-settled-after-test-helper`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/986",
        "text": "[eslint-plugin-ember]: Add new rule `no-string-prototype-extensions`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/993",
        "text": "[eslint-plugin-ember]: Add new rule `no-empty-glimmer-component-classes`",
        "labels": [
          "Enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/998",
        "text": "[eslint-plugin-ember]: Fix autofix for array element access at beginning of path string in `no-get` rule",
        "labels": [
          "Bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1112",
        "text": "[ember-template-lint]: \"no-quoteless-attributes\" & arguments?",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1113",
        "text": "[ember-template-lint]: \"no-invalid-interactive\" is overly strict?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1122",
        "text": "[ember-template-lint]: Replace minimatch with micromatch",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1125",
        "text": "[ember-template-lint]: rule request: require \"as\" for block params",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1128",
        "text": "[ember-template-lint]: Error messages should contain rule code",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1129",
        "text": "[ember-template-lint]: Built-in helpers (e.g. `concat`, `array`, `hash`) should never be flagged by `no-implicit-this`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1135",
        "text": "[ember-template-lint]: no-quoteless-attributes false positives after upgrading",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1142",
        "text": "[ember-template-lint]: Fix README's build passing badge",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1150",
        "text": "[ember-template-lint]: Plugin causes crash in v2.0.0 release",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1155",
        "text": "[ember-template-lint]: Recommended fix for violations of `link-href-attributes`?",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1161",
        "text": "[ember-template-lint]: Does ember-template-lint v2 support ESLint integration?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1162",
        "text": "[ember-template-lint]: no-invalid-link-title: additional test(s)",
        "labels": [
          "bug",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1164",
        "text": "[ember-template-lint]: update contributing.md ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1170",
        "text": "[ember-template-lint]: Document the rule test harness.",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1180",
        "text": "[ember-template-lint]: Features required for `--fix` support ",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1192",
        "text": "[ember-template-lint]: New Rule: no-unbalanced-curlies",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1193",
        "text": "[ember-template-lint]: no-invalid-block-param-definition false positives with {{#each}}",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1203",
        "text": "[ember-template-lint]: Rule proposal: <form> method=\"POST\"",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1216",
        "text": "[ember-template-lint]: Command-line options have to come after file(s)?",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1217",
        "text": "[ember-template-lint]: Error repeating multiple times?",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1218",
        "text": "[ember-template-lint]: Expose test helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1230",
        "text": "[ember-template-lint]: Add ability to lint .html files",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1231",
        "text": "[ember-template-lint]: {{link-to tagName=\"button\"}} Linting",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1245",
        "text": "[ember-template-lint]: GitHub annotations does not distinguish between warnings and errors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1248",
        "text": "[ember-template-lint]: Pending rules should not be printed as warnings by default",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1256",
        "text": "[ember-template-lint]: Rule request: add condition to `require-input-label` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1273",
        "text": "[ember-template-lint]: Rule request: ensure landmark elements do not have redundant roles",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1274",
        "text": "[ember-template-lint]: Rule request: disallow nested landmark elements of the same name",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1275",
        "text": "[ember-template-lint]: Bug: Rule `no-invalid-meta` falsely reports issues for Open Graph protocol meta tags",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1281",
        "text": "[ember-template-lint]: ENOENT: no such file or directory, open 'D:\\dev\\stdin' on Windows",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1283",
        "text": "[ember-template-lint]: Doesn't support get helper with input element",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1286",
        "text": "[ember-template-lint]: roleValue.trim is not a function",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1311",
        "text": "[ember-template-lint]: Update `no invalid role` rule to check against valid role values",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1314",
        "text": "[ember-template-lint]: Rule request: require `<html>` tag to have `lang` attribute",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1337",
        "text": "[ember-template-lint]: Colliding rules no-negated-condition and simple-unless",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1339",
        "text": "[ember-template-lint]: Feature: allow custom reporters",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1343",
        "text": "[ember-template-lint]: no-element-event-actions doesn't catch non action event handlers",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1346",
        "text": "[ember-template-lint]: filePath or moduleId (or both)?",
        "labels": [
          "good first issue",
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1352",
        "text": "[ember-template-lint]: Rule-request: no yield to default",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1360",
        "text": "[ember-template-lint]: Remove rule \"no-unnecessary-component-helper\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1366",
        "text": "[ember-template-lint]: New Rule: `no-restricted-component-invocations`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1368",
        "text": "[ember-template-lint]: Audit rule documentation to ensure all relevant references are included",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1401",
        "text": "[ember-template-lint]: Plugin tests crash with ember-template-lint@2.9.0",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1412",
        "text": "[ember-template-lint]: Processing `overrides` rules is not idempotent",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1417",
        "text": "[ember-template-lint]: Rules override is reversed on extends",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1425",
        "text": "[ember-template-lint]: extract a more convenient .matches type API",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1440",
        "text": "[ember-template-lint]: update print pending feature ",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1448",
        "text": "[ember-template-lint]: New Rule: `no-nested-splattributes`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1451",
        "text": "[ember-template-lint]: Split a `no-block-params-for-html-elements` rule out of `no-arguments-for-html-elements`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1491",
        "text": "[ember-template-lint]: Binding computed properties to tabindex should (probably) be allowed?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1496",
        "text": "[ember-template-lint]: (bug) no-whitespace-within-word false positive with svg elements",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1506",
        "text": "[ember-template-lint]: New Rule Request: `no-hidden-body`",
        "labels": [
          "enhancement",
          "good first issue"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1511",
        "text": "[ember-template-lint]: no-duplicate-id false positive",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1520",
        "text": "[ember-template-lint]: New rule request: require-each-key",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1530",
        "text": "[ember-template-lint]: should \"require-input-label\" apply to other elements too?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1538",
        "text": "[ember-template-lint]: False positive with `require-input-label` rule and hidden inputs",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1539",
        "text": "[ember-template-lint]: False positive with comment in `no-invalid-block-param-definition` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1542",
        "text": "[ember-template-lint]: (bug) false positive when landmarks of different types are nested",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1551",
        "text": "[ember-template-lint]: Migrate JS API to async/await",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1557",
        "text": "[ember-template-lint]: Feature: Deprecate old pending functionality in favor of new todo feature",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1563",
        "text": "[ember-template-lint]: Warn about curly with property reference and arguments",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1565",
        "text": "[ember-template-lint]: Bug: Rule `no-invalid-meta` falsely reports issues for microdata itemprop meta tags",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1578",
        "text": "[ember-template-lint]: Rule Request: `require-presentational-children`",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1593",
        "text": "[ember-template-lint]: Invalid rule configuration found: no-forbidden-elements",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1604",
        "text": "[ember-template-lint]: no-invalid-link-title: False positive for SVG icon content",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1608",
        "text": "[ember-template-lint]: Add `--fix` option for `no-redundant-landmark-role`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1624",
        "text": "[ember-template-lint]: ember-template-lint in Github actions in PR makes annotation show twice",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1640",
        "text": "[ember-template-lint]: Delete the issue",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1641",
        "text": "[ember-template-lint]: Component name start with Modal is considered as modal",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1644",
        "text": "[ember-template-lint]: Unable to turn rules off in `next` branch",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1646",
        "text": "[ember-template-lint]: Rule Request: `no-mut-helper`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1656",
        "text": "[ember-template-lint]: [table-groups] False-positive with a nested component that has a tagName",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1677",
        "text": "[ember-template-lint]: Why is a11y preset is not listed in README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1684",
        "text": "[ember-template-lint]: TODO feature: when TODOs are resolved, empty folder remains",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1685",
        "text": "[ember-template-lint]: TODO feature: `todo-days-to-warn` and `todo-days-to-error` commands lack CLI messages",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1691",
        "text": "[ember-template-lint]: Feature: Automatically add todoConfig to package.json when one is not present",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1696",
        "text": "[ember-template-lint]: Possible V3 public api regression",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1704",
        "text": "[ember-template-lint]: Do not mention future deprecated `{{hasBlock}}` and `{{hasBlockParams}}`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1705",
        "text": "[ember-template-lint]: New rule: require `fn` for named arguments with params/hash",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1712",
        "text": "[ember-template-lint]: update 'quotes' rule for 3.0",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1713",
        "text": "[ember-template-lint]: update 'no-forbidden-elements' for 3.0",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1718",
        "text": "[ember-template-lint]: Fatal error when an HTML comment is inside an HTML file in 3.0.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1721",
        "text": "[ember-template-lint]: Fatal error when a role has a mustache statement in 3.0.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1730",
        "text": "[ember-template-lint]: rule request: no-unknown-arguments-for-link-to-component",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1732",
        "text": "[ember-template-lint]: rule request: no-capital-arguments",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1740",
        "text": "[ember-template-lint]: Enable require-has-block-helper for 3.0.0",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1748",
        "text": "[ember-template-lint]: Link to documentation in next branch README is 404",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1762",
        "text": "[ember-template-lint]: Add new rule to deprecate passing `classBinding` and `classNameBindings` to component invocations",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1764",
        "text": "[ember-template-lint]: Add rule to deprecate passing positional arguments to <LinkTo>",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1765",
        "text": "[ember-template-lint]: Add `no-unknown-arguments-for-builtin-components` to recommended set for 3.0.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1766",
        "text": "[ember-template-lint]: Improve `this.log` for rule base class",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1772",
        "text": "[ember-template-lint]: Feature request: rule for consistent naming of named-blocks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1781",
        "text": "[ember-template-lint]: Remove `moduleId` and `moduleName` references for 3.0.0",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1782",
        "text": "[ember-template-lint]: Node engine support changes for 3.0.0",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1784",
        "text": "[ember-template-lint]: New Generator: update:rules-index",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1792",
        "text": "[ember-template-lint]: Update link-rel-noopener to default to strict config",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1800",
        "text": "[ember-template-lint]: no-bare-strings should check placeholder attribute on built-in Input components",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1802",
        "text": "[ember-template-lint]: no-unknown-arguments-for-builtin-components: Argument \"@route\" is required for <LinkTo /> component",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1804",
        "text": "[ember-template-lint]: Custom rule without a full plugin",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1808",
        "text": "[ember-template-lint]: Add `no-deprecated-with` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1809",
        "text": "[ember-template-lint]: Deprecate `deprecated-each-syntax` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1811",
        "text": "[ember-template-lint]: todo decays are on by default, but documented as optional",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1813",
        "text": "[ember-template-lint]: <Textarea ../> with `@id` has `require-input-label` template lint error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1818",
        "text": "[ember-template-lint]: role=\"switch\" cause no-invalid-role error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1819",
        "text": "[ember-template-lint]: no-duplicate-landmark-elements shows error for roles \"presentation\" and \"none\" on images",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1820",
        "text": "[ember-template-lint]: various no-unknown-arguments-for-builtin-components errors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1821",
        "text": "[ember-template-lint]: Suggestions in no-unknown-built-in-component-arguments are often a bit misleading",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1835",
        "text": "[ember-template-lint]: Confusion with require-input-label",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1839",
        "text": "[ember-template-lint]: `require-input-label` - form elements should not have multiple labels false positive",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1842",
        "text": "[ember-template-lint]: no-unbalanced-curlies support escape",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1848",
        "text": "[ember-template-lint]: no-invalid-link-title false positive when a title contains link text as a substring",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1852",
        "text": "[ember-template-lint]: Request: separate out fixable functionality and removing stale todos from `--fix` flag",
        "labels": [
          "enhancement",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1853",
        "text": "[ember-template-lint]: Request: a command to reset or refresh todos",
        "labels": [
          "enhancement",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1854",
        "text": "[ember-template-lint]: `no-link-to-positional-params` rule reports `undefined` violation message with position parameter and query-params",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1856",
        "text": "[ember-template-lint]: Incorrect autofix for `require-has-block-helper` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1859",
        "text": "[ember-template-lint]: `no-duplicate-id` rule false positive with block param",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1869",
        "text": "[ember-template-lint]: New rule: `forbidden-components`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1873",
        "text": "[ember-template-lint]: [todos] Todos invalidate when files are moved",
        "labels": [
          "enhancement",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1878",
        "text": "[ember-template-lint]: [todos] Auto-delete stale todo file if there are no other todos in that file",
        "labels": [
          "enhancement",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1879",
        "text": "[ember-template-lint]: [todos] Explore moving todos to single file with deterministic contents vs multi-file storage",
        "labels": [
          "enhancement",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1880",
        "text": "[ember-template-lint]: [todos] Add days to warn/error configuration in lint todo config",
        "labels": [
          "enhancement",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1882",
        "text": "[ember-template-lint]: New rule: `no-valueless-arguments`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1884",
        "text": "[ember-template-lint]: Max line length rule",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1887",
        "text": "[ember-template-lint]: `no-yield-only` todo is not removed after fixing in addon",
        "labels": [
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1888",
        "text": "[ember-template-lint]: Require-valid-alt-text's object accessible text",
        "labels": [
          "documentation",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1896",
        "text": "[ember-template-lint]: require-valid-alt-text incorrectly parsing alt",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1898",
        "text": "[ember-template-lint]: Can I --fix just the manually fixed todos?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1902",
        "text": "[ember-template-lint]: Consider adding lint-staged to default",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1905",
        "text": "[ember-template-lint]: Expired todos cannot be recreated with --update-todo if expired todo file exists",
        "labels": [
          "bug",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1908",
        "text": "[ember-template-lint]: Plan V4 Release",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1920",
        "text": "[ember-template-lint]: Make `builtin-component-arguments` work for `Textarea` too",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1946",
        "text": "[ember-template-lint]: `--clean-todo` does not remove invalid TODOs, only expired TODOs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1963",
        "text": "[ember-template-lint]: New helper syntax from ember-source 3.27 not supported",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1965",
        "text": "[ember-template-lint]: `require-input-label` Custom label component false positive",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1966",
        "text": "[ember-template-lint]: Request: new flag `--create-todo`",
        "labels": [
          "enhancement",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1969",
        "text": "[ember-template-lint]: Bug: Todo file isn't being marked as stale if file is moved or deleted",
        "labels": [
          "bug",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1971",
        "text": "[ember-template-lint]: Deprecation warning (error) from linter when using a component with a named block called \"view\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2003",
        "text": "[ember-template-lint]: [todos] Update docs to include new .lint-todorc.js feature",
        "labels": [
          "documentation",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2010",
        "text": "[ember-template-lint]: Todos become orphaned when source file is moved or deleted",
        "labels": [
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2011",
        "text": "[ember-template-lint]: CLI does not find configuration file when working directory is not the root of the project",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2012",
        "text": "[ember-template-lint]: implement auto-correct by '--fix' for 'eol-last' rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2019",
        "text": "[ember-template-lint]: Updated rules for nested landmark",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2027",
        "text": "[ember-template-lint]: Error when using --fix with no-model-argument-in-route-templates rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2049",
        "text": "[ember-template-lint]: The `--fix` option for require-button-type breaks form buttons",
        "labels": [
          "bug",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2050",
        "text": "[ember-template-lint]: no-duplicate-landmark-elements ignores conditions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2071",
        "text": "[ember-template-lint]: Passing a random argument to `LinkTo` yields a false positive on `no-unknown-arguments-for-builtin-components`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2072",
        "text": "[ember-template-lint]: Add endLine/endColumn to rule result.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2085",
        "text": "[ember-template-lint]: Colocating component hbs file prevents cleanup",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2106",
        "text": "[ember-template-lint]: Can I disallow the Handlebars comment instructions ? ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2113",
        "text": "[ember-template-lint]: Proposal for new a11y check to disallow empty anchor elements",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2114",
        "text": "[ember-template-lint]: Proposal for new a11y check to disallow headings with no text content",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2117",
        "text": "[ember-template-lint]: no-duplicate-attributes rule should allow concatenated properties (class)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2136",
        "text": "[ember-template-lint]: `require-presentational-children` rule does not like SVG",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2139",
        "text": "[ember-template-lint]: no-empty-headings: False positives for curly contents",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2163",
        "text": "[ember-template-lint]: Satisfying \"argument-less-helper-paren-less-invocation\" added in Ember 3.27 results in parse errors",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2166",
        "text": "[ember-template-lint]: Proposal for new a11y check to disallow use of the autofocus attribute",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2173",
        "text": "[ember-template-lint]: 'eol-last': 'always' is not taking into account with version 3.8.0 while it works 3.7.0",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2183",
        "text": "[ember-template-lint]: Should we remove `no-whitespace-for-layout` and `no-whitespace-within-word` from the `stylistic` config?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2190",
        "text": "[ember-template-lint]: Nonsensical addition of role in require-valid-alt-text",
        "labels": [
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2198",
        "text": "[ember-template-lint]: Colocate all rule files?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2233",
        "text": "[ember-template-lint]: `no-curly-component-invocation-test` logs some violations with incorrect `isFixable` value",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2275",
        "text": "[ember-template-lint]: Proposal for new a11y check to disallow invalid ARIA attributes",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2286",
        "text": "[ember-template-lint]: Automatically exclude all helpers from `no-curly-component-invocation`",
        "labels": [
          "good first issue",
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2287",
        "text": "[ember-template-lint]: linter includes existing valid todos as errors when directly run against file path",
        "labels": [
          "bug",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2298",
        "text": "[ember-template-lint]: Flaky TODO tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2307",
        "text": "[ember-template-lint]: In 3.25, remove no-dynamic-subexpression-invocations from the recommended rule set",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2319",
        "text": "[ember-template-lint]: Plan v5 Release",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2320",
        "text": "[ember-template-lint]: v4 Migration suggests esm conversion is only required for rare cases, but a default config errors without importing any rules directly",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2329",
        "text": "[ember-template-lint]: Rule test harness check for duplicated test cases incorrectly flags those with unicode/non-unicode characters",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2330",
        "text": "[ember-template-lint]: no-unbalanced-curlies false positive",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2331",
        "text": "[ember-template-lint]: Last version of ember-temlate-lint doesn't work anymore. Fail with ERR_REQUIRE_ESM",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2333",
        "text": "[ember-template-lint]: separate rule violations with the same line, column and rule name cannot both create a TODO",
        "labels": [
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2336",
        "text": "[ember-template-lint]: ESM error in v4 consuming plugins in a Windows env",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2349",
        "text": "[ember-template-lint]: What about `require-button-type` with associated `role`?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2364",
        "text": "[ember-template-lint]: Proposal for new a11y check to enforce that elements with the aria-activedescendant\t attribute declare a tabindex of 0",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2385",
        "text": "[ember-template-lint]: [no-invalid-aria-attributes] Doesn't work at all?",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2394",
        "text": "[ember-template-lint]: [Question] htmlSafe vs triple curlies",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2396",
        "text": "[ember-template-lint]: `no-bare-strings` triggers for element attribute boolean values like \"true\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2405",
        "text": "[ember-template-lint]: Rule conflict between `no-invalid-aria-attributes` and `no-unnecessary-concat`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2411",
        "text": "[ember-template-lint]: no-unknown-arguments-for-builtin-components being shown incorrectly ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2412",
        "text": "[ember-template-lint]: Proposal to add new a11y rule restricting the use of the scope attribute to `th` elements",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2420",
        "text": "[ember-template-lint]: `no-whitespace-within-word` false positive with dashes & I",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2431",
        "text": "[ember-template-lint]: Executable flag '--version' does not echo correct version",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2432",
        "text": "[ember-template-lint]: Issues with todos when upgrading from v3.4.2 to v4.3.0",
        "labels": [
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2436",
        "text": "[ember-template-lint]: modifier-name-case will need to be updated for First-Class Component Templates",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2442",
        "text": "[ember-template-lint]: `require-context-role` false positive for table role",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2450",
        "text": "[ember-template-lint]: New rule: `no-array-prototype-extensions`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2451",
        "text": "[ember-template-lint]: `no-invalid-aria-attributes` fails when it is passed a valid if statement",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2453",
        "text": "[ember-template-lint]: ESM config w/ `.mjs` not loadable?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2464",
        "text": "[ember-template-lint]: Regression from `Handle dashes in no-whitespace-within-word rule` PR #2421",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2467",
        "text": "[ember-template-lint]: Can we use find-up when looking for the config file?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2477",
        "text": "[ember-template-lint]: Proposal to update `require-lang-attribute` rule with value validation",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2479",
        "text": "[ember-template-lint]: Error: Must use import to load ES Module",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2482",
        "text": "[ember-template-lint]: [Todo feature] Missing newline when generating `remove` lines in `.lint-todo`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2485",
        "text": "[ember-template-lint]: Proposal to expand `no-redundant-landmark-role` to lint against redundancy for all elements with ARIA role support",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2496",
        "text": "[ember-template-lint]: Proposal for new a11y check to enforce that media elements have captions",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2504",
        "text": "[ember-template-lint]: Proposal for new a11y check to disallow ARIA props on elements that do not support them",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2510",
        "text": "[ember-template-lint]: Proposal for new a11y check to disallow elements with ARIA attributes unsupported by its role",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2514",
        "text": "[ember-template-lint]: `no-unsupported-role-attributes` throws an error",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2522",
        "text": "[ember-template-lint]: Proposal for new a11y check to enforce that ARIA roles have required attributes",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2550",
        "text": "[ember-template-lint]: --version doesn't work -- prints the version of the package.json at your CWD",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2579",
        "text": "[ember-template-lint]: Should require-valid-alt-text rule require a role=\"presentation/none\" when the alt text is blank like alt=\"\"",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2588",
        "text": "[ember-template-lint]: <s> and <u> are not obsolete anymore (no-obsolete-elements)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2592",
        "text": "[ember-template-lint]: Usage of `unique-id` helper causes rule triggers",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2601",
        "text": "[ember-template-lint]: Check embedded templates by default",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2628",
        "text": "[ember-template-lint]: Valid menu/sub-menu pattern is reporting errors",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2637",
        "text": "[ember-template-lint]: require-context-role incorrectly requires elements to be direct children of their context element",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2644",
        "text": "[ember-template-lint]: no-negated-condition rule could detect `(not (not ...))`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2645",
        "text": "[ember-template-lint]: Change `maxHelpers` default for `simple-unless` rule?",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2647",
        "text": "[ember-template-lint]: `no-negated-condition` rule wrongly marks and autofix case when `not` have multiple parameters",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2655",
        "text": "[ember-template-lint]: `no-negated-condition` rule could detect and fix `(not (eq...` and others",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2656",
        "text": "[ember-template-lint]: `no-restricted-invocations` doesn't support modifiers",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2660",
        "text": "[ember-template-lint]: embedded templates not working properly ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2681",
        "text": "[ember-template-lint]: `--fix` is broken with `.gts` files",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2692",
        "text": "[ember-template-lint]: `--fix` for `attribute-order` breaks `@tagName=\"\"`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2693",
        "text": "[ember-template-lint]: `--fix` for `attribute-order` moves around comments",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2700",
        "text": "[ember-template-lint]: no-unknown-arguments-for-builtin-components: Argument \"@route\" or \"@query\" is required for <LinkTo /> component",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2710",
        "text": "[ember-template-lint]: Attribute Order Breaks For Link Components",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2712",
        "text": "[ember-template-lint]: Plan v6 Release",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2713",
        "text": "[ember-template-lint]: no-redundant-role: False positive for `role=list` on `<ul>`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2728",
        "text": "[ember-template-lint]: `no-obsolete-elements` should flag usages of param element ",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2743",
        "text": "[ember-template-lint]: is there a way to ignore?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2776",
        "text": "[ember-template-lint]: [Rule proposal] Disallow redundant curly braces",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2777",
        "text": "[ember-template-lint]: no-duplicate-id rule errors when using ember's built-in unique-id helper",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2785",
        "text": "[ember-template-lint]: `no-implicit-this` + strict mode false positives",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2798",
        "text": "[ember-template-lint]: `no-invalid-link-text` error with handlebars `aria-label`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2817",
        "text": "[ember-template-lint]: `<li role=\"presentation\">` should not cause `no-invalid-role`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2830",
        "text": "[ember-template-lint]: Should we start a Polaris config that folks can opt in to when using gjs/gts?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2832",
        "text": "[ember-template-lint]: Embedded templates incorrectly violate `no-trailing-spaces` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2863",
        "text": "[ember-template-lint]: New rule: `simple-modifier`",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2906",
        "text": "[ember-template-lint]: Block-indentation Reports Same Value for Start and End Location",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2912",
        "text": "[ember-template-lint]: Cannot read property `name` of undefined",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2916",
        "text": "[ember-template-lint]: attributes is not iterable error when using aria-query 5.2.1",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2939",
        "text": "[ember-template-lint]: Simple-unless Reports Same Value for Start and End Location",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2951",
        "text": "[ember-template-lint]: Incorrect no-redundant-role on img",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1115",
        "text": "[ember-template-lint]: Add configuration file support for overrides",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1116",
        "text": "[ember-template-lint]: no-invalid-interactive: add support for the tablist role",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1117",
        "text": "[ember-template-lint]: Add configuration file support for overrides ",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1120",
        "text": "[ember-template-lint]: Add new rule: `no-invalid-link-title`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1123",
        "text": "[ember-template-lint]: Fix issues introduced by ember-template-recast@4.0.1.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1124",
        "text": "[ember-template-lint]: Add `modifier-name-case` rule to `recommended` configuration",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1126",
        "text": "[ember-template-lint]: Add new rule `no-invalid-block-param-definition`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1132",
        "text": "[ember-template-lint]: --fix(require-button-type): Implement fixer",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1133",
        "text": "[ember-template-lint]: Don't mention `ember-cli-template-lint` in README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1134",
        "text": "[ember-template-lint]: Add `ignoredTags` option to `no-invalid-interactive` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1136",
        "text": "[ember-template-lint]: `no-curly-component-invocation`: update rule to ignore ember-cli-app-version usage",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1137",
        "text": "[ember-template-lint]: Prevent `no-unused-block-params` from flagging locals that are used within `{{template-lint-disable}}`ed content",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1138",
        "text": "[ember-template-lint]: Automatically discover `.template-lintrc.js` when running linter from a project subdirectory (e.g. a monorepo's package, with linting configuration in the project root).",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1140",
        "text": "[ember-template-lint]: Add markdownlint and fix violations",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1143",
        "text": "[ember-template-lint]: Fix linting failures in  no-invalid-block-param-definition documentation.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1144",
        "text": "[ember-template-lint]: Fix issues with block-indentation config format changes.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1152",
        "text": "[ember-template-lint]: Add failing test for resolving plugin.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1153",
        "text": "[ember-template-lint]: Ensure plugins are resolved relative to config file location.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1154",
        "text": "[ember-template-lint]: Fix CI badge in README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1158",
        "text": "[ember-template-lint]: Introduce rule visitor based fixing support.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1159",
        "text": "[ember-template-lint]: Rewrite documentation for `link-href-attributes` rule to explain motivation and migration",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1160",
        "text": "[ember-template-lint]: Add severity support (off, warn, error) to rule configuration (via both `.template-lintrc.js` and inline configuration).",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1163",
        "text": "[ember-template-lint]: Add CONTRIBUTING.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1165",
        "text": "[ember-template-lint]: Re-roll yarn.lock.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1167",
        "text": "[ember-template-lint]: Ensure accessing `this.editorConfig` in a rule instance does not error.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1169",
        "text": "[ember-template-lint]: Add support to `test.only` in the test harness.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1174",
        "text": "[ember-template-lint]: Add test harness features (naming test cases, snapshot support, etc).",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1175",
        "text": "[ember-template-lint]: Add TODOs to rule doc template",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1178",
        "text": "[ember-template-lint]: require-button-type: Implement `fix` mode",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1179",
        "text": "[ember-template-lint]: inline-link-to: Implement `fix` mode",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1183",
        "text": "[ember-template-lint]: --fix: Write output to fs",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1184",
        "text": "[ember-template-lint]: .template-lintrc.js: Resolve ember-template-lint-plugin-* packages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1185",
        "text": "[ember-template-lint]: Add message about running `--fix` to console output when fixable errors have ocurred.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1187",
        "text": "[ember-template-lint]: Adds new rule: no-duplicate-id",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1189",
        "text": "[ember-template-lint]: Ensure resolvable plugins work when the config is not resolved.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1190",
        "text": "[ember-template-lint]: Ensure BOM is preserved when using `--fix`.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1195",
        "text": "[ember-template-lint]: Add v2 migration guide",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1198",
        "text": "[ember-template-lint]: Fix ember-template-lint-plugin-* packages resolution",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1199",
        "text": "[ember-template-lint]: Revert \"Merge pull request #1184 from dcyriller/support-etl-prefix\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1200",
        "text": "[ember-template-lint]: Add `--ignore-pattern` and `--no-ignore-pattern` command line flags",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1202",
        "text": "[ember-template-lint]: Update contributing info in README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1204",
        "text": "[ember-template-lint]: chore: adds getCwd method",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1210",
        "text": "[ember-template-lint]: bugfix: flase-positive rule for invalid block param definition",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1220",
        "text": "[ember-template-lint]: Ensure each rule documentation file has the right title and an examples section",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1222",
        "text": "[ember-template-lint]: Add new rule: `no-unbalanced-curlies`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1229",
        "text": "[ember-template-lint]: Ensure template parsing errors are only reported once (not once per-rule)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1232",
        "text": "[ember-template-lint]: Add `.html` to supported file extensions",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1238",
        "text": "[ember-template-lint]: Add new rule: `require-form-method`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1249",
        "text": "[ember-template-lint]: Move rule setup tests to separate file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1250",
        "text": "[ember-template-lint]: Update each rule doc to mention what config enables the rule",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1251",
        "text": "[ember-template-lint]: Pass `env` from `ember-template-recast` to rules so they can use `env.syntax.builders.*` during `ember-template-lint **/*.hbs --fix`.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1257",
        "text": "[ember-template-lint]: Ensure GitHub Action annotations are not emitted for warnings.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1260",
        "text": "[ember-template-lint]: Expose `ember-template-recast` API on main entry point (e.g. `require('ember-template-lint').recast`)",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1263",
        "text": "[ember-template-lint]: Add `--rule` and `--no-config-path` command line options",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1264",
        "text": "[ember-template-lint]: Ensure `--json` argument can be used anywhere on the command line.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1266",
        "text": "[ember-template-lint]: Bump GH actions/checkout to v2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1269",
        "text": "[ember-template-lint]: Extract setup-env-var test helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1276",
        "text": "[ember-template-lint]: Reproduce two bugs w/ globby",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1290",
        "text": "[ember-template-lint]: failing test for require-valid-alt-text",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1297",
        "text": "[ember-template-lint]: Fix reading from stdin on Windows",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1303",
        "text": "[ember-template-lint]: Update ember-template-recast to remove extraneous whitespace in `--fix` for `inline-link-to` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1304",
        "text": "[ember-template-lint]: Tweak Installation section of `README.md` to clarify that `ember-template-lint` is installed by default",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1305",
        "text": "[ember-template-lint]: Fix example in no-invalid-role documentation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1306",
        "text": "[ember-template-lint]: Fix invalid URL in documentation reference for `no-invalid-link-title` rule",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1308",
        "text": "[ember-template-lint]: Add Node 14 as supported platform",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1313",
        "text": "[ember-template-lint]: Update documentation and examples for `no-positive-tabindex`",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1316",
        "text": "[ember-template-lint]: Implement `no-positional-data-test-selectors` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1317",
        "text": "[ember-template-lint]: Avoid glob matching when no-glob is present (e.g. globs have already been replaced by shell expansion)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1320",
        "text": "[ember-template-lint]: Add `catchNonexistentRoles` option (default false) to `no-invalid-role` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1321",
        "text": "[ember-template-lint]: Add new rule: `no-redundant-landmark-role`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1322",
        "text": "[ember-template-lint]: Add new rule: `no-nested-landmark`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1324",
        "text": "[ember-template-lint]: Ensure `require-valid-alt-text` can handle a dynamic `role` attribute ",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1327",
        "text": "[ember-template-lint]: Add new rule: [a11y] Ensure duplicate landmark elements have unique labels",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1332",
        "text": "[ember-template-lint]: feat: Add no-element-args rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1335",
        "text": "[ember-template-lint]: Add new rule: no-forbidden-elements",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1338",
        "text": "[ember-template-lint]: Clarify recommended fix for `no-negated-condition` rule",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1340",
        "text": "[ember-template-lint]: Add `--format` option to allow loading custom formatters",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1347",
        "text": "[ember-template-lint]: Add additional built-in helpers to `no-implicit-this` (e.g. `array`, `concat`, `query-params`, etc)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1353",
        "text": "[ember-template-lint]: Add new rule: `no-named-arguments-with-global-attribute-names`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1356",
        "text": "[ember-template-lint]: Add new rule: `no-yield-to-default`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1362",
        "text": "[ember-template-lint]: Handle `unless` in `no-positive-tabindex` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1365",
        "text": "[ember-template-lint]: Add link to partials RFC in `no-partial` rule doc",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1369",
        "text": "[ember-template-lint]: Update `no-restricted-invocations` rule to disallow empty config array",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1370",
        "text": "[ember-template-lint]: Update `no-restricted-invocations` rule to handle nested angle bracket component invocation",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1372",
        "text": "[ember-template-lint]: Allow specifying a custom error message in `no-restricted-invocations` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1381",
        "text": "[ember-template-lint]: Add support for `@id`, `MustacheStatement`, and `ConcatStatement` in `no-duplicate-id` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1382",
        "text": "[ember-template-lint]: Add support for `BlockStatement` with `elementId` in `no-duplicate-id` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1384",
        "text": "[ember-template-lint]: Add .markdownlintignore",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1386",
        "text": "[ember-template-lint]: Add new rule: `require-lang-attribute`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1387",
        "text": "[ember-template-lint]: Improve message for `no-implicit-this` to mention using angle bracket invocation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1388",
        "text": "[ember-template-lint]: Remove automatic `TextNode` unwrapping by `attributeValue` functions in `ast-node-info` helper",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1389",
        "text": "[ember-template-lint]: Rename `invocable-blacklist` rule to `no-restricted-invocations` (backwards-compatible)",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1390",
        "text": "[ember-template-lint]: Ensure rule lists have all rules in sorted order",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1392",
        "text": "[ember-template-lint]: Add configuration options for allowing components as table children in `table-groups` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1393",
        "text": "[ember-template-lint]: Fix table groups ordering enforcement when whitespace is present in `table-groups` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1394",
        "text": "[ember-template-lint]: Add autogenerated rule table for README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1399",
        "text": "[ember-template-lint]: Improve package.json `description` field",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1400",
        "text": "[ember-template-lint]: Refactor `no-restricted-invocations` rule to significantly improve performance",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1407",
        "text": "[ember-template-lint]: Ensure `plugins` config parsing is idempotent ",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1409",
        "text": "[ember-template-lint]: Add documentation about how to create a fixer for a rule",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1410",
        "text": "[ember-template-lint]: Minor cleanup to README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1411",
        "text": "[ember-template-lint]: Add 🔧 emoji to fixable rules in rules table in README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1413",
        "text": "[ember-template-lint]: Add fixable notice to the rule doc of fixable rules",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1419",
        "text": "[ember-template-lint]: Check `name` and `property` in `no-invalid-meta` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1426",
        "text": "[ember-template-lint]: Add v8-compile-cache to improve startup performance",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1428",
        "text": "[ember-template-lint]: Update require-lang-attribute per review",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1430",
        "text": "[ember-template-lint]: Add `.match` API via new `NodeMatcher` helper",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1431",
        "text": "[ember-template-lint]: Add `--no-inline-config` option.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1436",
        "text": "[ember-template-lint]: Add note about github actions printer",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1439",
        "text": "[ember-template-lint]: `require-input-label`: update rule to detect duplicate labels",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1443",
        "text": "[ember-template-lint]: Add new `a11y` configuration",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1449",
        "text": "[ember-template-lint]: Implement `no-nested-splattributes` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1450",
        "text": "[ember-template-lint]: Implement `no-redundant-fn` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1452",
        "text": "[ember-template-lint]: Drop support for Node 13",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1453",
        "text": "[ember-template-lint]: Fix misspelling in `--print-pending` help text.",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1454",
        "text": "[ember-template-lint]: Fix misspelling of `--print-pending`s help output",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1456",
        "text": "[ember-template-lint]: `no-arguments-for-html-elements`: Remove wrong examples from the documentation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1457",
        "text": "[ember-template-lint]: Implement `no-potential-path-strings` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1458",
        "text": "[ember-template-lint]: `no-arguments-for-html-elements`: Extract `no-block-params-for-html-elements` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1459",
        "text": "[ember-template-lint]: Implement `no-link-to-tagname` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1460",
        "text": "[ember-template-lint]: ast-node-info: Remove trivial `isElement()` helpers",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1461",
        "text": "[ember-template-lint]: `no-invalid-interactive`: Add `canvas` to the list of interactive tag names",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1462",
        "text": "[ember-template-lint]: `no-invalid-interactive`: Only warn about known disallowed DOM events in the `on` modifier",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1463",
        "text": "[ember-template-lint]: ast-node-info: Remove trivial `isNode()` helpers",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1464",
        "text": "[ember-template-lint]: `no-quoteless-attributes`: Adjust error message for component arguments",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1465",
        "text": "[ember-template-lint]: Add new rule `builtin-component-arguments`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1466",
        "text": "[ember-template-lint]: Cache `pending`/`ignore` config lookups to speed up linting of larger codebases",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1469",
        "text": "[ember-template-lint]: `no-link-to-tag-name`: Rename to `no-link-to-tagname`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1474",
        "text": "[ember-template-lint]: `link-rel-noopener`: add `--fix` support",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1476",
        "text": "[ember-template-lint]: [1/2] Rebase of `feature/no-duplicate-ids` branch onto post-`.match` `master`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1479",
        "text": "[ember-template-lint]: `no-implicit-this`: add codemod links to rule doc",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1480",
        "text": "[ember-template-lint]: Ensure all rule docs have a references section",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1481",
        "text": "[ember-template-lint]: `no-bare-strings`: export `DEFAULT_CONFIG`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1485",
        "text": "[ember-template-lint]: Replace whitelist/blacklist references",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1486",
        "text": "[ember-template-lint]: Revert \"Replace whitelist/blacklist references\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1489",
        "text": "[ember-template-lint]: Add `allowlist` & `denylist` alternatives to `whitelist` & `blacklist` configuration",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1490",
        "text": "[ember-template-lint]: remove deprecated `whitelist` & `blacklist` configurations",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1495",
        "text": "[ember-template-lint]: Ensure `overrides` config parsing is idempotent",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1497",
        "text": "[ember-template-lint]: Avoid validating text within attributes in `no-whitespace-within-word`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1504",
        "text": "[ember-template-lint]: Update documentation for `no-duplicate-attributes`",
        "labels": [
          "enhancement",
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1505",
        "text": "[ember-template-lint]: Add `no-duplicate-attributes` to `a11y` preset",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1509",
        "text": "[ember-template-lint]: Add `no-duplicate-id` to `a11y` preset",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1513",
        "text": "[ember-template-lint]: Fix `extends` overriding order",
        "labels": [
          "bug",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1514",
        "text": "[ember-template-lint]: Ensure `bad` test cases **always** have results.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1516",
        "text": "[ember-template-lint]: `no-whitespace-within-word` rule should ignore <style> elements",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1519",
        "text": "[ember-template-lint]: Add `as-indentation` option to `attribute-indentation` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1521",
        "text": "[ember-template-lint]: Add new rule `no-aria-hidden-body`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1525",
        "text": "[ember-template-lint]: Add new rule `require-each-key`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1531",
        "text": "[ember-template-lint]: Sort elements list alphabetically in `no-obsolete-elements` rule doc",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1532",
        "text": "[ember-template-lint]: Add `s` and `u` elements to `no-obsolete-elements` rule elements list",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1533",
        "text": "[ember-template-lint]: Add missing `keygen` element to `no-obsolete-elements` rule elements list",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1534",
        "text": "[ember-template-lint]: Enable `catchNonexistentRoles` by default on `no-invalid-role` rule",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1535",
        "text": "[ember-template-lint]: Remove support for deprecated rule names",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1536",
        "text": "[ember-template-lint]: Remove erroneous rules doc",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1540",
        "text": "[ember-template-lint]: `require-input-label` rule should ignore hidden inputs",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1541",
        "text": "[ember-template-lint]: Allow nested landmarks of different types in `no-nested-landmark` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1543",
        "text": "[ember-template-lint]: `no-invalid-block-param-definition` rule should ignore comments",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1548",
        "text": "[ember-template-lint]: Upgrade ember-template-recast to reduce memory pressure while linting",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1549",
        "text": "[ember-template-lint]: Add `<textarea>` and `<select>` support to `require-input-label` rule",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1550",
        "text": "[ember-template-lint]: Add new rule `no-duplicate-landmark-elements`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1552",
        "text": "[ember-template-lint]: Convert verify/verifyAndFix to async/await",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1553",
        "text": "[ember-template-lint]: Convert `Linter.prototype.verify` and `Linter.prototype.verifyAndFix` to be async.",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1554",
        "text": "[ember-template-lint]: Ensure globbing is only used when using a globlike pattern",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1556",
        "text": "[ember-template-lint]: Allow linting individual files with arbitrary extensions.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1560",
        "text": "[ember-template-lint]: Updated `is-interactive-element` helper and related rules",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1564",
        "text": "[ember-template-lint]: Add `--working-directory` option",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1566",
        "text": "[ember-template-lint]: Allow `itemprop` use in meta tags in `no-invalid-meta` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1586",
        "text": "[ember-template-lint]: Add `no-aria-hidden-body` and `table-groups` rules to `a11y` config",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1594",
        "text": "[ember-template-lint]: Implement autofixer for `no-curly-component-invocation`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1595",
        "text": "[ember-template-lint]: Allow passing a top-level `meta` property",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1596",
        "text": "[ember-template-lint]: Add new rule `no-model-argument-in-route-templates`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1605",
        "text": "[ember-template-lint]: Fix false positive in `no-invalid-link-title` when using a dynamic value surrounded by whitespace.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1606",
        "text": "[ember-template-lint]: Fix false positive with content within `{{#if}}`/`{{else}}` blocks in `no-duplicate-id` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1611",
        "text": "[ember-template-lint]: Implements new todo functionality (replaces pending)",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1620",
        "text": "[ember-template-lint]: Add new rule `no-down-event-binding`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1621",
        "text": "[ember-template-lint]: Add new rule `no-obscure-array-access`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1623",
        "text": "[ember-template-lint]: Add new rule `splat-attributes-only`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1630",
        "text": "[ember-template-lint]: Add element examples to `no-duplicate-attributes`",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1638",
        "text": "[ember-template-lint]: Add more rules to `stylistic` config",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1639",
        "text": "[ember-template-lint]: Promote `octane` rules to `recommended` config and delete `octane` config",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1642",
        "text": "[ember-template-lint]: Update `noImplicitThis` option default to true and `requireDash` option default to false in `no-curly-component-invocation` rule",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1643",
        "text": "[ember-template-lint]: Enable more `recommended` rules",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1647",
        "text": "[ember-template-lint]: Enable `no-model-argument-in-route-templates` as a `recommended` rule",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1652",
        "text": "[ember-template-lint]: Add new rule `no-mut-helper`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1653",
        "text": "[ember-template-lint]: Add autofixer for `no-redundant-landmark-role` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1654",
        "text": "[ember-template-lint]: #787 Rgoygov/no-obscure-array-access",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1655",
        "text": "[ember-template-lint]: Revert \"Enable `no-model-argument-in-route-templates` as a `recommended` rule\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1657",
        "text": "[ember-template-lint]: Add example script for counting lint violation disable directive comments",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1664",
        "text": "[ember-template-lint]: Reorganize and improve the README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1665",
        "text": "[ember-template-lint]: todos: Hide pending option from help output",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1666",
        "text": "[ember-template-lint]: Add documentation for TODOs",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1668",
        "text": "[ember-template-lint]: Remove explicit GitHub Actions reporter",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1671",
        "text": "[ember-template-lint]: Add rule: `no-this-in-template-only-components`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1672",
        "text": "[ember-template-lint]: Add new rule: `require-splattributes`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1675",
        "text": "[ember-template-lint]: todos: Adding ability to set days to decay to warn/error",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1676",
        "text": "[ember-template-lint]: Fix broken documentation links",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1678",
        "text": "[ember-template-lint]: Fix broken link to shell script",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1679",
        "text": "[ember-template-lint]: Updated `is-route-template` helper to add check for template components with absolute paths",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1683",
        "text": "[ember-template-lint]: todos: Update error message for resolved todos",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1687",
        "text": "[ember-template-lint]: Respect extends order and rules overrides",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1688",
        "text": "[ember-template-lint]: todos: Adds output feedback when creating TODOs",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1690",
        "text": "[ember-template-lint]: todos: Updates message when todo passes but todo file exists",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1692",
        "text": "[ember-template-lint]: Update README.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1693",
        "text": "[ember-template-lint]: Add link to Ember.js issue for no-model-argument-in-route-templates rule",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1694",
        "text": "[ember-template-lint]: Add `no-down-event-binding` to A11Y config",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1695",
        "text": "[ember-template-lint]: todos: Standardize casing for todos",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1697",
        "text": "[ember-template-lint]: Allow rule visitor to be an async function (remove `env` argument)",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1701",
        "text": "[ember-template-lint]: Update style emoji",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1706",
        "text": "[ember-template-lint]: Fixes todo creation messaging to include correct counts",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1710",
        "text": "[ember-template-lint]: Adds `octane` config back as an alias of `recommended`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1711",
        "text": "[ember-template-lint]: Add missing changes to 3.0.0-beta.1 CHANGELOG",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1714",
        "text": "[ember-template-lint]: Update recommended config to include 'no-down-event-binding'",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1715",
        "text": "[ember-template-lint]: Prevent todo removal when using `--update-todo` a subset of normal project configuration",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1716",
        "text": "[ember-template-lint]: Add `no-dynamic-subexpression-invocations`.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1717",
        "text": "[ember-template-lint]: Allow `meta` in `<head>` contexts",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1719",
        "text": "[ember-template-lint]: Fixes todo creation/removal when using scoped configurations.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1720",
        "text": "[ember-template-lint]: Allow comments in HTML files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1722",
        "text": "[ember-template-lint]: No invalid roles fatal error fix",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1725",
        "text": "[ember-template-lint]: Fixes markdown bugs in todo documentation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1726",
        "text": "[ember-template-lint]: Auto-writing todoConfig when one doesn't exist",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1727",
        "text": "[ember-template-lint]: Fix `no-dynamic-subexpression-invocations` handling of `{{1}}`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1729",
        "text": "[ember-template-lint]: Make `this.filePath` and `this.workingDir` available to plugins",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1731",
        "text": "[ember-template-lint]: Add `require-has-block-helper` lint rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1734",
        "text": "[ember-template-lint]: Add new rule: `no-unknown-arguments-for-builtin-components`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1736",
        "text": "[ember-template-lint]: Add fixer for require-has-block-helper rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1738",
        "text": "[ember-template-lint]: Removes duplicate main from `no-duplicate-landmarks` documentation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1739",
        "text": "[ember-template-lint]: Fixes issue where todos were deleted from a different engine",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1743",
        "text": "[ember-template-lint]: \"is-interactive-element\" should match to <summary>, not <details>",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1747",
        "text": "[ember-template-lint]: Avoid linting `.html` files by default",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1749",
        "text": "[ember-template-lint]: Fixes invalid link resulting in 404 for todos docs.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1755",
        "text": "[ember-template-lint]: Removing moduleId references in documentation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1756",
        "text": "[ember-template-lint]: Remove hasBlock/hasBlockParams references in docs",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1757",
        "text": "[ember-template-lint]: Enabling require-has-block-helper in recommended",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1759",
        "text": "[ember-template-lint]: Add new rule: `no-capital-arguments`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1760",
        "text": "[ember-template-lint]: chore: Deprecating moduleId and moduleName in Rule base class",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1767",
        "text": "[ember-template-lint]: New Rule: no-class-bindings",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1768",
        "text": "[ember-template-lint]: Add no-unknown-arguments-for-builtin-components to recommended",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1769",
        "text": "[ember-template-lint]: Add new rule: `no-class-bindings`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1770",
        "text": "[ember-template-lint]: Add simplified mechanism for rules to log warnings and errors",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1771",
        "text": "[ember-template-lint]: Add ability to pass `node` to `this.log`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1773",
        "text": "[ember-template-lint]: Add `--max-warnings` option",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1774",
        "text": "[ember-template-lint]: Add fixer for `no-class-bindings` rule.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1783",
        "text": "[ember-template-lint]: Updating new rule generator to use yeoman",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1785",
        "text": "[ember-template-lint]: Require Node >= 10.24",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1787",
        "text": "[ember-template-lint]: New rule: no-link-to-positional-params",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1788",
        "text": "[ember-template-lint]: Remove `moduleId` and `moduleName` from results",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1789",
        "text": "[ember-template-lint]: Adding no-link-to-positional-params",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1790",
        "text": "[ember-template-lint]: Remove non-strict variant of link-rel-noopener",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1791",
        "text": "[ember-template-lint]: Revert no-class-bindings fixer.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1793",
        "text": "[ember-template-lint]: BREAKING CHANGE: default link-rel-noopener config to `strict`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1798",
        "text": "[ember-template-lint]: Refactor major version upgrade focused configurations",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1801",
        "text": "[ember-template-lint]: docs: avoid mentioning reverted change about `no-model-argument-in-route-templates` in v3 CHANGELOG",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1805",
        "text": "[ember-template-lint]: Ensure `no-unknown-arguments-for-builtin-components` allows `@query` only `<LinkTo>`'s",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1806",
        "text": "[ember-template-lint]: Ensure `no-bare-strings` check's `placeholder` attribute for `<Input />` and `<Textarea />`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1807",
        "text": "[ember-template-lint]: Remove `deprecated-each-syntax` from `recommended` config",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1810",
        "text": "[ember-template-lint]: Add rules index generator",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1812",
        "text": "[ember-template-lint]: Adding SARIF formatter",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1816",
        "text": "[ember-template-lint]: docs: for disabling todos decay days",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1822",
        "text": "[ember-template-lint]: Prevent `no-duplicate-landmark-elements` false positive for non-landmark roles",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1823",
        "text": "[ember-template-lint]: Fix suggestions for deprecated events and argument names in `no-unknown-built-in-component-arguments`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1824",
        "text": "[ember-template-lint]: Add missing ARIA roles to `no-invalid-role`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1832",
        "text": "[ember-template-lint]: Add `--config` example to README.md.",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1841",
        "text": "[ember-template-lint]: Add new rule `no-with`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1850",
        "text": "[ember-template-lint]: Only catch exact matches of title and link text in `no-invalid-link-title` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1851",
        "text": "[ember-template-lint]: Fix false positive with slash symbol in `no-unbound` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1857",
        "text": "[ember-template-lint]: Adding ignore option to `no-passed-in-event-handlers`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1861",
        "text": "[ember-template-lint]: Fix false positive with local `log` in `no-log` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1862",
        "text": "[ember-template-lint]: Fix `require-has-block-helper` rule autofix when multiple parameters present",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1863",
        "text": "[ember-template-lint]: Fix `undefined` error message for `no-link-to-positional-params` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1864",
        "text": "[ember-template-lint]: Add `has-block-params` as built-in helper to `no-implicit-this` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1865",
        "text": "[ember-template-lint]: Make sure `scope.isLocal()` returns a boolean",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1874",
        "text": "[ember-template-lint]: Document the A11Y preset",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1881",
        "text": "[ember-template-lint]: Update `no-invalid-link-title` rule to check for link title being substring of link text",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1895",
        "text": "[ember-template-lint]: Updating stale todo message with more targeted --fix instructions",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1897",
        "text": "[ember-template-lint]: Allow words containing redundant words for `require-valid-alt-text` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1899",
        "text": "[ember-template-lint]: updated the invalid violation message for visual distinction",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1900",
        "text": "[ember-template-lint]: Fixed typo in README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1901",
        "text": "[ember-template-lint]: Fix invalid link in `docs/configuration.md`",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1903",
        "text": "[ember-template-lint]: Start testing under Node 16",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1904",
        "text": "[ember-template-lint]: Ensures we always emit output file even with empty results",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1906",
        "text": "[ember-template-lint]: Fix typo in TODO documentation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1907",
        "text": "[ember-template-lint]: Deprecate `--json` option in favor of `--format=json`.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1918",
        "text": "[ember-template-lint]: Update some wording in README.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1922",
        "text": "[ember-template-lint]: Allows SARIF output to always write to a file if outputFile is present",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1926",
        "text": "[ember-template-lint]: Support message placeholders for error messages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1927",
        "text": "[ember-template-lint]: Compatibility with node 16",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1931",
        "text": "[ember-template-lint]: Add new rule `no-action-on-submit-button`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1932",
        "text": "[ember-template-lint]: bumped version of todo-utils to 8.1.0 (minor)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1933",
        "text": "[ember-template-lint]: Adds `--clean-todo` option to provide separate functionality to cleanup stale and expired todos",
        "labels": [
          "bug",
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1934",
        "text": "[ember-template-lint]: Fix false positives in `deprecated-inline-view-helper` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1935",
        "text": "[ember-template-lint]: Add autofixer to `no-unknown-arguments-for-builtin-components` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1945",
        "text": "[ember-template-lint]: Fixes `--clean-todo` flag to actually do the cleaning",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1947",
        "text": "[ember-template-lint]: Moves expired todo removal under the `--clean-todo` flag",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1954",
        "text": "[ember-template-lint]: Improve columns for README rules table",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1955",
        "text": "[ember-template-lint]: Add new rule `no-valueless-arguments`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1972",
        "text": "[ember-template-lint]: Adding extra tests to no-invalid-role rule",
        "labels": [
          "enhancement",
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1973",
        "text": "[ember-template-lint]: Update require-valid-alt-text rule to require dynamic alt if src is dynamic",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1982",
        "text": "[ember-template-lint]: Add new rule `require-presentational-children`",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1985",
        "text": "[ember-template-lint]: Fix some broken links on `CONFIGURATION.md`",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1992",
        "text": "[ember-template-lint]: Resolved issue where test was looking for directories incorrectly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1993",
        "text": "[ember-template-lint]: feat(todos): Adds support for configuring todo decay days by rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1994",
        "text": "[ember-template-lint]: Fix `require-input-label` to allow inputs within a `<label>` to have an `id` attribute",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1997",
        "text": "[ember-template-lint]: Add `Requirements` section to README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2004",
        "text": "[ember-template-lint]: Add Node 16 to CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2013",
        "text": "[ember-template-lint]: Add `Textarea` support to `builtin-component-arguments` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2020",
        "text": "[ember-template-lint]: Add `--fix` support for `eol-last` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2024",
        "text": "[ember-template-lint]: Fix no-duplicate-id rule false positive with block param",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2030",
        "text": "[ember-template-lint]: Implement `no-route-action` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2031",
        "text": "[ember-template-lint]: Switch from github emojis to standard emojis",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2032",
        "text": "[ember-template-lint]: Fixes the SARIF formatter to correctly filter output by severity",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2033",
        "text": "[ember-template-lint]: Upgrades to latest todo-utils to include new fuzzy matching functionality",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2051",
        "text": "[ember-template-lint]: Bugfix: resolved issue with incorrect button type in form during template fix",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2052",
        "text": "[ember-template-lint]: Ensure `deprecated-inline-view-helper` allows named blocks named `\"view\"`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2053",
        "text": "[ember-template-lint]: Add `labelTags` option for custom label components to `require-input-label` rule",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2054",
        "text": "[ember-template-lint]: Rename and narrow rule `no-down-event-binding` to `no-pointer-down-event-binding`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2063",
        "text": "[ember-template-lint]: Update docs with .lint-todorc.js",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2064",
        "text": "[ember-template-lint]: Removed modifier support for `no-route-action` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2079",
        "text": "[ember-template-lint]: Adding `--print-config` option to CLI",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2080",
        "text": "[ember-template-lint]: Add `require-valid-named-block-naming-format` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2088",
        "text": "[ember-template-lint]: Bugfix: fixes fuzzy messages arguments suggestion",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2089",
        "text": "[ember-template-lint]: Update `no-bare-strings` rule to check the arguments to `{{page-title ...}}` helper",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2099",
        "text": "[ember-template-lint]: Add ember/lint keywords to package.json",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2104",
        "text": "[ember-template-lint]: Mention package.json keywords for plugin discoverability",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2115",
        "text": "[ember-template-lint]: Converting --clean-todo to a default, providing --no-clean-todo option",
        "labels": [
          "enhancement",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2116",
        "text": "[ember-template-lint]: Slight tweak to explanation in `no-negated-condition` doc",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2118",
        "text": "[ember-template-lint]: Add autofixer to `no-negated-condition` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2119",
        "text": "[ember-template-lint]: Stricter validation of rule doc notices",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2123",
        "text": "[ember-template-lint]: Add `npm-package-json-lint`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2124",
        "text": "[ember-template-lint]: Ensure markdownlint applies to all docs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2126",
        "text": "[ember-template-lint]: Add new rule `no-empty-headings`",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2127",
        "text": "[ember-template-lint]: Add `allowEmptyLinks` option (default `true`) to `no-invalid-link-text` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2137",
        "text": "[ember-template-lint]: Skip SVG elements in `require-presentational-children` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2140",
        "text": "[ember-template-lint]: Update `no-empty-headings` rule to only check for valid element & text nodes",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2143",
        "text": "[ember-template-lint]: Add autofixer to `quotes` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2149",
        "text": "[ember-template-lint]: make sure \"good\" templates can actually fail in test harness",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2151",
        "text": "[ember-template-lint]: Add `endLine` / `endColumn` to generated rule test results",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2153",
        "text": "[ember-template-lint]: Increase dependabot PR limit to 15",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2156",
        "text": "[ember-template-lint]: Move workflow examples out of README into separate doc",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2157",
        "text": "[ember-template-lint]: Ensure rules with options include a `Configuration` section in their rule doc",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2162",
        "text": "[ember-template-lint]: Ensure test harness setup in custom plugins is correct",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2164",
        "text": "[ember-template-lint]: Noops the console when using the SARIF formatter",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2165",
        "text": "[ember-template-lint]: Adding ruleId to deprecation message to track its origin",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2167",
        "text": "[ember-template-lint]: Slightly loosening requires for log method parameter requirements",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2168",
        "text": "[ember-template-lint]: Add new rule `no-autofocus-attribute`",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2172",
        "text": "[ember-template-lint]: Upgrade `ember-template-recast` to v6",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2174",
        "text": "[ember-template-lint]: Fix false negative with `always` setting and template ending with non-text in `eol-last` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2176",
        "text": "[ember-template-lint]: Require Node `^12.22.0 || ^14.17.0 || >=16.0.0`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2181",
        "text": "[ember-template-lint]: Add `/coverage` to .eslintignore",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2182",
        "text": "[ember-template-lint]: Breaking changes for v4",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2184",
        "text": "[ember-template-lint]: Remove `common-tags` devDependency",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2188",
        "text": "[ember-template-lint]: Remove rule `no-invalid-block-param-definition`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2191",
        "text": "[ember-template-lint]: Remove rule `deprecated-each-syntax`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2192",
        "text": "[ember-template-lint]: Rule Configs: Remove config `octane`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2193",
        "text": "[ember-template-lint]: Remove CLI option `--json`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2194",
        "text": "[ember-template-lint]: Update internal linters including ESLint 8",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2195",
        "text": "[ember-template-lint]: Update `no-invalid-link-text` rule to set `allowEmptyLinks` option default to `false`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2196",
        "text": "[ember-template-lint]: Resolve `no-unused-disable` lint errors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2197",
        "text": "[ember-template-lint]: Upgrade `yargs` dependency to v17",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2203",
        "text": "[ember-template-lint]: Update internal Node to 16.13.0 and yarn to 1.22.17 with volta",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2204",
        "text": "[ember-template-lint]: Recreate yarn.lock from scratch",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2207",
        "text": "[ember-template-lint]: Remove CLI option `--print-pending`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2208",
        "text": "[ember-template-lint]: Add `exports` to package.json to restrict access to private internals",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2209",
        "text": "[ember-template-lint]: Expose `generateRuleTests` as named export in public NodeJS API",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2210",
        "text": "[ember-template-lint]: Ensure `--print-pending` works with `--format=json`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2211",
        "text": "[ember-template-lint]: Rule Configs: Add additional `recommended` rules for v4",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2212",
        "text": "[ember-template-lint]: Upgrade ember-template-recast to 6.1.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2213",
        "text": "[ember-template-lint]: Change `no-bare-strings` rule options to augment instead of replace the default config ",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2214",
        "text": "[ember-template-lint]: Run linters in parallel",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2216",
        "text": "[ember-template-lint]: Testing: Disallow unexpected properties in rule test cases",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2217",
        "text": "[ember-template-lint]: Testing: Require auto-fixable test cases to assert the fixed template",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2227",
        "text": "[ember-template-lint]: Regenerate `yarn.lock` file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2228",
        "text": "[ember-template-lint]: Rule Reporting: When logging a rule violation, require passing the node or all loc properties",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2229",
        "text": "[ember-template-lint]: Add `only` to allowed test case properties",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2230",
        "text": "[ember-template-lint]: Testing: Only fixable test cases are allowed to assert `fixedTemplate`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2236",
        "text": "[ember-template-lint]: Config Files: Disallow unexpected properties at top-level of configuration file",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2237",
        "text": "[ember-template-lint]: Rule Configs: Remove config `2-x-recommended` and add `3-x-recommended` config",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2238",
        "text": "[ember-template-lint]: Config Files: Disallow extending an invalid configuration",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2239",
        "text": "[ember-template-lint]: Config Files: Disallow invalid plugin in configuration file",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2240",
        "text": "[ember-template-lint]: Testing: Disallow identical `template` and `fixedTemplate` in a test case",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2241",
        "text": "[ember-template-lint]: Update `no-bare-strings` rule options to augment instead of replace the default config ",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2242",
        "text": "[ember-template-lint]: Rule Reporting: When logging a rule violation, require passing `message`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2243",
        "text": "[ember-template-lint]: Add test for logging a violation without node and without all `loc` properties",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2244",
        "text": "[ember-template-lint]: Run all CI jobs simultaneously",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2245",
        "text": "[ember-template-lint]: Disallow specifying non-existent files on CLI",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2246",
        "text": "[ember-template-lint]: Fix link about configuration properties",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2252",
        "text": "[ember-template-lint]: Remove deprecated pending functionality",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2253",
        "text": "[ember-template-lint]: Update reference links for `no-autofocus-attribute` rule",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2255",
        "text": "[ember-template-lint]: Todos: Convert to single file storage",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2256",
        "text": "[ember-template-lint]: Rule Configs: Add `no-autofocus-attribute` to `recommended` config",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2261",
        "text": "[ember-template-lint]: Disallow unknown CLI options",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2262",
        "text": "[ember-template-lint]: Convert to ESM",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2269",
        "text": "[ember-template-lint]: Add `requireActionHelper` config option to `no-element-event-actions`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2276",
        "text": "[ember-template-lint]: Add new rule `no-invalid-aria-attributes`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2277",
        "text": "[ember-template-lint]: Updates @lint-todo/utils to latest version for read isolation",
        "labels": [
          "bug",
          "todos"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2278",
        "text": "[ember-template-lint]: Update `no-element-event-actions` rule to set `requireActionHelper` option default to `false`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2279",
        "text": "[ember-template-lint]: Testing: Disallow duplicate test cases",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2280",
        "text": "[ember-template-lint]: Remove outdated boolean config in `docs/configuration.md`",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2281",
        "text": "[ember-template-lint]: Add autofixer to `block-indentation` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2288",
        "text": "[ember-template-lint]: Remove `--ignore-engines` from yarn CI script",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2289",
        "text": "[ember-template-lint]: Use built-in `actions/setup-node` for CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2290",
        "text": "[ember-template-lint]: Use double quotes for markdownlint script",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2291",
        "text": "[ember-template-lint]: Fix broken markdown links",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2292",
        "text": "[ember-template-lint]: Update chalk to v5",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2293",
        "text": "[ember-template-lint]: Upgrade `find-up` to v6",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2294",
        "text": "[ember-template-lint]: Upgrade `get-stdin` to v9",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2296",
        "text": "[ember-template-lint]: Upgrade `globby` to v6",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2297",
        "text": "[ember-template-lint]: Add v4 migration guide",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2301",
        "text": "[ember-template-lint]: Fix false positives with non-serializable rule configs in duplicate test case check",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2302",
        "text": "[ember-template-lint]: Improve v4 migration guide",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2303",
        "text": "[ember-template-lint]: Update @lint-todos/utils to fix bug with non-normalized paths",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2304",
        "text": "[ember-template-lint]: Tweak ordering of items in v4 migration guide",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2308",
        "text": "[ember-template-lint]: Remove `no-dynamic-subexpression-invocations` rule from `recommended` config",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2315",
        "text": "[ember-template-lint]: Remove `no-model-argument-in-route-templates` rule from `recommended` config",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2316",
        "text": "[ember-template-lint]: Remove `no-mut-helper` rule from `recommended` config",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2318",
        "text": "[ember-template-lint]: Fix false negatives with `block-indentation` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2323",
        "text": "[ember-template-lint]: Update eslint-plugin-import-helpers to 1.2.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2332",
        "text": "[ember-template-lint]: Fix bug with newlines and cleanup `no-unbalanced-curlies` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2339",
        "text": "[ember-template-lint]: Convert path to URL before import of config/plugin for Windows support",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2348",
        "text": "[ember-template-lint]: Support the `modifier` helper in the `modifier-name-case` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2359",
        "text": "[ember-template-lint]: Fix monorepo support by allowing import to do what it's good at (and …",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2365",
        "text": "[ember-template-lint]: Add new rule `require-aria-activedescendant-tabindex`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2376",
        "text": "[ember-template-lint]: Add new rule `no-obscure-array-access`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2388",
        "text": "[ember-template-lint]: [no-obscure-array-access] Handle paths that contain digits",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2389",
        "text": "[ember-template-lint]: Fix string handling errors with `no-invalid-aria-attributes` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2408",
        "text": "[ember-template-lint]: New formatter: multi",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2413",
        "text": "[ember-template-lint]: Add new rule `no-scope-outside-table-headings`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2421",
        "text": "[ember-template-lint]: Handle dashes in `no-whitespace-within-word` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2433",
        "text": "[ember-template-lint]: Fix `require-presentational-children` rule to report violation on correct node",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2435",
        "text": "[ember-template-lint]: Add CLI option `--no-error-on-unmatched-pattern`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2449",
        "text": "[ember-template-lint]: Updates `require-context-role` rule to accept `table` as a valid parent `role` and `rowgroup`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2454",
        "text": "[ember-template-lint]: Add new rule `no-array-prototype-extensions`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2465",
        "text": "[ember-template-lint]: Better handling of dashes in `no-whitespace-within-word` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2466",
        "text": "[ember-template-lint]: Remove validation of mustache statements in `no-invalid-aria-attributes` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2468",
        "text": "[ember-template-lint]: Ensure configuration can be resolved from a parent directory when no `--config-path` override is present (e.g. within a monorepo with `.template-lintrc.js` in the monorepo root).",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2469",
        "text": "[ember-template-lint]: Add missing \"forbids\" sentence in `no-array-prototype-extensions` rule doc",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2474",
        "text": "[ember-template-lint]: Ensure `--compact-todo` functions properly ",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2478",
        "text": "[ember-template-lint]: Add `validateValues` option to `require-lang-attribute` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2483",
        "text": "[ember-template-lint]: Implement support for embedded templates",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2487",
        "text": "[ember-template-lint]: Add `checkAllHTMLElements` option to `no-redundant-landmark-role` rule to lint against all HTML elements with default ARIA roles",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2497",
        "text": "[ember-template-lint]: Add new rule `require-media-caption`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2501",
        "text": "[ember-template-lint]: Fix --version",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2507",
        "text": "[ember-template-lint]: Add new rule `no-aria-unsupported-elements`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2509",
        "text": "[ember-template-lint]: Update yargs to 17.5.1 to fix `--version`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2511",
        "text": "[ember-template-lint]: Add new rule `no-unsupported-role-attributes`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2513",
        "text": "[ember-template-lint]: Update overrides example",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2516",
        "text": "[ember-template-lint]: Fix crash in `no-unsupported-role-attributes` rule when an element has no implicit role",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2517",
        "text": "[ember-template-lint]: Fixes bug in `no-unsupported-role-attributes` that throws an error wh…en custom components with no roles are invoked",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2523",
        "text": "[ember-template-lint]: Add new rule `require-mandatory-role-attributes`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2527",
        "text": "[ember-template-lint]: Add route action name to error message in `no-route-action` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2533",
        "text": "[ember-template-lint]: Add `no-action` rule migration example",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2535",
        "text": "[ember-template-lint]: Clarify violation message for `no-dynamic-subexpression-invocations` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2540",
        "text": "[ember-template-lint]: Fix config documentation for `table-groups` rule",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2541",
        "text": "[ember-template-lint]: Fix helper used by several rules for dasherizing multi-level nested component names",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2554",
        "text": "[ember-template-lint]: Add new rule `no-at-ember-render-modifiers`",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2568",
        "text": "[ember-template-lint]: Add autofixer to `no-unnecessary-concat` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2569",
        "text": "[ember-template-lint]: Add autofixer to `require-valid-named-block-naming-format` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2573",
        "text": "[ember-template-lint]: Add autofixer to `modifier-name-case` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2574",
        "text": "[ember-template-lint]: Add autofixer to `no-unnecessary-component-helper` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2575",
        "text": "[ember-template-lint]: Add new rule `attribute-order`",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2581",
        "text": "[ember-template-lint]: Add autofixer to `no-html-comments` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2582",
        "text": "[ember-template-lint]: Add autofixer to `no-quoteless-attributes` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2583",
        "text": "[ember-template-lint]: Add autofixer to `self-closing-void-elements` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2584",
        "text": "[ember-template-lint]: Add autofixer to `linebreak-style` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2589",
        "text": "[ember-template-lint]: Remove `<s>` and `<u>` from `no-obsolete-elements`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2591",
        "text": "[ember-template-lint]: Add formatter for Kakoune editor",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2593",
        "text": "[ember-template-lint]: Add `unique-id` to allowed built-in helpers in `no-curly-component-invocation` and `no-implicit-this` rules",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2604",
        "text": "[ember-template-lint]: Fix `--version` to actually give the right value",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2606",
        "text": "[ember-template-lint]: Lint embedded templates by default",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2611",
        "text": "[ember-template-lint]: Tweak jest lint config",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2629",
        "text": "[ember-template-lint]: Add autofixer to `simple-unless` rule for simplest case",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2636",
        "text": "[ember-template-lint]: Add link to RFC for `no-array-prototype-extensions` rule",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2639",
        "text": "[ember-template-lint]: Add autofix for case with helpers to `simple-unless` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2643",
        "text": "[ember-template-lint]: Clarify default `maxHelpers` option value for `simple-unless` rule",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2648",
        "text": "[ember-template-lint]: Allow negation with multiple parameters in `no-negated-condition` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2653",
        "text": "[ember-template-lint]: Add `simplifyHelpers` option in `no-negated-condition` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2657",
        "text": "[ember-template-lint]: Include modifiers in `no-restricted-invocations` rule",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2664",
        "text": "[ember-template-lint]: update lockfile",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2668",
        "text": "[ember-template-lint]: v5 Preparation",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2669",
        "text": "[ember-template-lint]: Drop Node 12 and 17 support",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2670",
        "text": "[ember-template-lint]: v5 Release Preparation PR",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2671",
        "text": "[ember-template-lint]: Enabled additional `recommended` rules `no-aria-unsupported-elements`, `no-array-prototype-extensions`, `no-invalid-aria-attributes`, `no-obscure-array-access`, `no-scope-outside-table-headings`, `no-unsupported-role-attributes`, `require-aria-activedescendant-tabindex`, `require-mandatory-role-attributes`, `require-media-caption`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2672",
        "text": "[ember-template-lint]: Change `maxHelpers` option default to `1` in `simple-unless` rule",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2673",
        "text": "[ember-template-lint]: Change `simplifyHelpers` option default to `true` in `no-negated-condition` rule",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2674",
        "text": "[ember-template-lint]: Change `validateValues` option default to `true` in `require-lang-attribute` rule",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2675",
        "text": "[ember-template-lint]: Rename `no-redundant-landmark-role` rule to `no-redundant-role` and change `checkAllHTMLElements` option default to `true`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2677",
        "text": "[ember-template-lint]: Update eslint-plugin-unicorn to v44 and sort-package-json to v2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2679",
        "text": "[ember-template-lint]: Replace `3-x-recommended` config with `4-x-recommended`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2694",
        "text": "[ember-template-lint]: Use `npx` in stale todo command suggestion",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2695",
        "text": "[ember-template-lint]: Automate extracting/replacing bare strings",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2696",
        "text": "[ember-template-lint]: Ensure `--fix` works properly for `.gjs`/`.gts` files",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2697",
        "text": "[ember-template-lint]: fix: test cases to show that fixer does not work with gjs and gts files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2699",
        "text": "[ember-template-lint]: chore: cleanup based on feedback from rjackson",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2701",
        "text": "[ember-template-lint]: Fix autofixer for value-less attributes and comment order in `attribute-order` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2711",
        "text": "[ember-template-lint]: Refresh lockfile",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2714",
        "text": "[ember-template-lint]: Allow `role=list` on `<ul>` and `<ol>` in `no-redundant-role` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2722",
        "text": "[ember-template-lint]: Fix autofixer bug with `firstObject` inside a `MustacheStatement` in `no-array-prototype-extensions` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2725",
        "text": "[ember-template-lint]: Fix `--no-ignore-pattern`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2726",
        "text": "[ember-template-lint]: Allow passing only `@model` or `@models` for `<LinkTo>` in `no-unknown-arguments-for-builtin-components` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2727",
        "text": "[ember-template-lint]: Add note about `title` property limitations to `require-valid-alt-text` rule doc",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2729",
        "text": "[ember-template-lint]: Add `param` to obsolete list in `no-obsolete-elements` rule",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2730",
        "text": "[ember-template-lint]: Add autofixer to `no-duplicate-attributes` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2731",
        "text": "[ember-template-lint]: Allow nested `menuitem`s in `no-nested-interactive` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2732",
        "text": "[ember-template-lint]:  Link to \"skipping helpers\" part of the codemod doc in `no-curly-component-invocation` rule doc",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2746",
        "text": "[ember-template-lint]: Add autofixer to `no-multiple-empty-lines` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2753",
        "text": "[ember-template-lint]: Add autofixer to `no-trailing-spaces` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2754",
        "text": "[ember-template-lint]: Add options for different `html` / `hbs` quote styles in `quotes` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2759",
        "text": "[ember-template-lint]: Improve snapshot test documentation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2760",
        "text": "[ember-template-lint]: Document how to write rule test cases for fatal errors",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2765",
        "text": "[ember-template-lint]: Throw the more-helpful, original exception when encountering an ESM plugin/config loading error",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2778",
        "text": "[ember-template-lint]: Ignore `unique-id` helper in `no-duplicate-id` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2780",
        "text": "[ember-template-lint]: Ignore `{{(unique-id)}}` helper variation in `no-duplicate-id` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2784",
        "text": "[ember-template-lint]: Add a failing `no-implicit-this` + gjs test",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2792",
        "text": "[ember-template-lint]: Add new rule `no-unnecessary-curly-parens`",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2794",
        "text": "[ember-template-lint]: Add new rule `no-unnecessary-curly-literals`",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2800",
        "text": "[ember-template-lint]: no-unnecessary-curly-parens: allow parens around helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2802",
        "text": "[ember-template-lint]: Rename `no-unnecessary-curly-literals` rule to `no-unnecessary-curly-strings`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2812",
        "text": "[ember-template-lint]: Export additional helpers for plugin support",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2818",
        "text": "[ember-template-lint]: Add `additionalNonSemanticTags` option to `require-presentational-children` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2819",
        "text": "[ember-template-lint]: Allow intermediate presentation role before context in `require-context-role` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2820",
        "text": "[ember-template-lint]: Allow presentation role for `li` in `no-invalid-role` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2821",
        "text": "[ember-template-lint]: Add `svg`/`i` non-semantic tags list in `require-presentational-children` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2828",
        "text": "[ember-template-lint]: Remove `role` requirement for `img` tags in `require-valid-alt-text`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2831",
        "text": "[ember-template-lint]: Skip `block-indentation` rule in embedded templates",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2833",
        "text": "[ember-template-lint]: Fix incorrect violation with embedded templates in `no-trailing-spaces` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2838",
        "text": "[ember-template-lint]: Fix embedded templates handling in `block-indentation` rule ",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2843",
        "text": "[ember-template-lint]: Avoid crash with dynamic `aria-label` in `no-invalid-link-text` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2844",
        "text": "[ember-template-lint]: Disable `no-curly-component-invocation` and `no-implicit-this` rules for `gjs` / `gts` files",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2845",
        "text": "[ember-template-lint]: Recognize imports from `@glimmerx/component`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2846",
        "text": "[ember-template-lint]: Disable embedded templates handling for `eol-last` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2847",
        "text": "[ember-template-lint]: Refresh lockfile",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2848",
        "text": "[ember-template-lint]: Use renamed @release-it-plugins/lerna-changelog",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2853",
        "text": "[ember-template-lint]: Bump `ember-template-recast` to v6.1.4",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2887",
        "text": "[ember-template-lint]: Add new rule `simple-modifiers`",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2891",
        "text": "[ember-template-lint]: Fix override for gjs files in `recommended` config",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2892",
        "text": "[ember-template-lint]: Adds rule to the recommended config",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2894",
        "text": "[ember-template-lint]: Add autofixer to `no-trailing-spaces`  rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2895",
        "text": "[ember-template-lint]: Add autofixer to `no-unnecessary-curly-strings` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2907",
        "text": "[ember-template-lint]: Fix location reporting in `block-indentation` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2913",
        "text": "[ember-template-lint]: Add additional elements to `DOCUMENT_STRUCTURE_ROLES` for `no-invalid-role` rule",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2914",
        "text": "[ember-template-lint]: Fix `aria-query` related crash in `no-unsupported-role-attributes` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2917",
        "text": "[ember-template-lint]: Fix crash in `no-unsupported-role-attributes` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2940",
        "text": "[ember-template-lint]: Fixes location reporting in `simple-unless` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2954",
        "text": "[ember-template-lint]: Don't require redundant role for `<img alt=\"\" />` in `require-valid-alt-text` rule",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2955",
        "text": "[ember-template-lint]: Update @lint-todo/utils to 13.1.1",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2967",
        "text": "[ember-template-lint]: Update example markup for consistency and errors",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2970",
        "text": "[ember-template-lint]: Support auto-lookup of `.mjs` and `.cjs` config files",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2982",
        "text": "[ember-template-lint]: Disable `modifier-name-case` rule for gjs/gts",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2990",
        "text": "[ember-template-lint]: Add new rule `no-builtin-form-components`",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/3023",
        "text": "[ember-template-lint]: Drop support for Node 14, 16, 19",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/3027",
        "text": "[ember-template-lint]: Refresh lockfile",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/3029",
        "text": "[ember-template-lint]: Enable more `recommended` rules: `no-action-on-submit-button`, `no-at-ember-render-modifiers`, `no-builtin-form-components`, `no-unnecessary-curly-parens`, `no-unnecessary-curly-strings`, `simple-modifiers`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/3031",
        "text": "[ember-template-lint]: Replace `4-x-recommended` config with `5-x-recommended`",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/3032",
        "text": "[ember-template-lint]: Update some dev deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/3044",
        "text": "[ember-template-lint]: Refresh lockfile",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/3045",
        "text": "[ember-template-lint]: Update fuse.js to v7",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/issues/30",
        "text": "[ember-eslint-parser]: Parsing error: Cannot read properties of null (reading 'type')",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/issues/31",
        "text": "[ember-eslint-parser]: Parsing error: No Babel config file detected for [GJS files]",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/issues/39",
        "text": "[ember-eslint-parser]: no-use-before-define",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/issues/45",
        "text": "[ember-eslint-parser]: Error unclosed element template when closing tag not followed by a new line",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/issues/57",
        "text": "[ember-eslint-parser]: `@typescript-eslint/parser` options is missing `extraFileExtensions`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/issues/58",
        "text": "[ember-eslint-parser]: Always use TypeScript parser",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/issues/65",
        "text": "[ember-eslint-parser]: Support `@typescript-eslint/parser` v7?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/issues/75",
        "text": "[ember-eslint-parser]: Parse error when template contains `${`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/1",
        "text": "[ember-eslint-parser]: Move parser and add boilerplate",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/10",
        "text": "[ember-eslint-parser]: Add the noop preprocessor-to-exports",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/11",
        "text": "[ember-eslint-parser]: Add light README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/13",
        "text": "[ember-eslint-parser]: Run eslint-plugin-ember's tests with every change",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/14",
        "text": "[ember-eslint-parser]: Resolve \"Parsing error: Cannot read properties of null\"",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/15",
        "text": "[ember-eslint-parser]: fix named block",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/17",
        "text": "[ember-eslint-parser]: Use pnpm for eslint-plugin-ember testing",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/18",
        "text": "[ember-eslint-parser]: Fix: 'this' is undefined",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/20",
        "text": "[ember-eslint-parser]: fix rust utf8 ranges vs js utf16 ranges",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/21",
        "text": "[ember-eslint-parser]: Fix Incorrectly missing scope",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/22",
        "text": "[ember-eslint-parser]: `<@argument>` Parsing error: Cannot read properties of null (reading 'index')",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/24",
        "text": "[ember-eslint-parser]: allow SVG child Elements without reference",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/32",
        "text": "[ember-eslint-parser]: Add GJS test project",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/33",
        "text": "[ember-eslint-parser]: fix parsing error when array destructure",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/36",
        "text": "[ember-eslint-parser]: fix node ranges and remove empty nodes",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/37",
        "text": "[ember-eslint-parser]: update glimmer",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/40",
        "text": "[ember-eslint-parser]: fix missing ranges",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/43",
        "text": "[ember-eslint-parser]: fix bad removal of text nodes",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/46",
        "text": "[ember-eslint-parser]: fix bad byteToCharIndex",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/49",
        "text": "[ember-eslint-parser]: fix typed linting",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/50",
        "text": "[ember-eslint-parser]: do not add extra keys to the VisitorKeys map",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/55",
        "text": "[ember-eslint-parser]: fix location info",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/59",
        "text": "[ember-eslint-parser]: add extraFileExtensions by default",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/6",
        "text": "[ember-eslint-parser]: always notify if not correctly setup",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/60",
        "text": "[ember-eslint-parser]: use typescript parser by default",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/63",
        "text": "[ember-eslint-parser]: TypeScript: Support imports without extensions",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/66",
        "text": "[ember-eslint-parser]: bump ts deps",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/7",
        "text": "[ember-eslint-parser]: Fix requires of the transforms module",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/74",
        "text": "[ember-eslint-parser]: update glimmer",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/76",
        "text": "[ember-eslint-parser]: fix parsing issue",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/81",
        "text": "[ember-eslint-parser]: remove unnecessary code",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/82",
        "text": "[ember-eslint-parser]: fix ts peer deps",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/pull/84",
        "text": "[ember-eslint-parser]: add vars to scope manager declaredVariables",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/113",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] `prettier . --write` does not run on .gjs/.gts files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/131",
        "text": "[prettier-plugin-ember-template-tag]: Consider disable minification?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/149",
        "text": "[prettier-plugin-ember-template-tag]: Replace ember-template-imports with content-tag",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/154",
        "text": "[prettier-plugin-ember-template-tag]: Remove handling of \"preprocessed\" template tags when it is no longer necessary for eslint-plugin-ember compat",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/173",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Unexpected token error on route files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/191",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] 2.0.0 Errors when components contain multi-byte characters (e.g. emoji) 💩 (not always, though)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/192",
        "text": "[prettier-plugin-ember-template-tag]: RFC: `<template>` in `CallExpression` argument position",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/193",
        "text": "[prettier-plugin-ember-template-tag]: RFC: Short templates in the top-level-of-a-class position",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/20",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] doesn't work with eslint<->prettier integration?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/222",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Incorrect behavior when template contains a",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/228",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] An apostrophe in a comment breaks formatting",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/238",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Emoji in JS code breaking plugin",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/255",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] 2.0.1 negative range error",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/40",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] VSCode Integration Not Working",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/43",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] With invalid hbs, prettier will transform `<template>` in source code",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/47",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Regressions in 0.3.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/49",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] In v0.3.2, with invalid hbs, a newline is added before the closing <template> tag",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/61",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Prettier v3 Support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/62",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Breaks @trivago/prettier-plugin-sort-imports",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/81",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Invalid formatting of `render` function in tests when running prettier via eslint-plugin-ember + eslint-plugin-prettier",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/90",
        "text": "[prettier-plugin-ember-template-tag]: Usage of only-allow",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/10",
        "text": "[prettier-plugin-ember-template-tag]: Set up release-it",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/103",
        "text": "[prettier-plugin-ember-template-tag]: Remove npx only-allow pnpm preinstall hook and devDep",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/11",
        "text": "[prettier-plugin-ember-template-tag]: Fix GITHUB_AUTH error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/12",
        "text": "[prettier-plugin-ember-template-tag]: Update readme, contribution guidelines, release instructions, examples",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/125",
        "text": "[prettier-plugin-ember-template-tag]: Add more detail to languages array (possibly simplifying VSCode setup!)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/13",
        "text": "[prettier-plugin-ember-template-tag]: Create CODE_OF_CONDUCT.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/14",
        "text": "[prettier-plugin-ember-template-tag]: Update docs again",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/15",
        "text": "[prettier-plugin-ember-template-tag]: Fix yarn install instructions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/152",
        "text": "[prettier-plugin-ember-template-tag]: Drop Node 16",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/153",
        "text": "[prettier-plugin-ember-template-tag]: Replace ember-template-imports with content-tag",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/162",
        "text": "[prettier-plugin-ember-template-tag]: content tag",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/178",
        "text": "[prettier-plugin-ember-template-tag]: Clean up content-tag implementation",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/186",
        "text": "[prettier-plugin-ember-template-tag]: Upgrade vite",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/188",
        "text": "[prettier-plugin-ember-template-tag]: Add test for ember-route-template routes",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/19",
        "text": "[prettier-plugin-ember-template-tag]: Add VSCode integration docs",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/194",
        "text": "[prettier-plugin-ember-template-tag]: Fix formatting issues #191, #192, #193",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/195",
        "text": "[prettier-plugin-ember-template-tag]: More content-tag cleanup",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/2",
        "text": "[prettier-plugin-ember-template-tag]: Ambiguous suffix handling",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/208",
        "text": "[prettier-plugin-ember-template-tag]: Switch to type: module",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/212",
        "text": "[prettier-plugin-ember-template-tag]: Fix bug where preceding {} was slurping up template",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/220",
        "text": "[prettier-plugin-ember-template-tag]: test: failing test for multi-byte char before template",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/24",
        "text": "[prettier-plugin-ember-template-tag]: Use @glimmer/syntax getTemplateLocals",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/253",
        "text": "[prettier-plugin-ember-template-tag]: Fix errors when components contain multi-byte characters",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/258",
        "text": "[prettier-plugin-ember-template-tag]: chore: Add test for negative range error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/259",
        "text": "[prettier-plugin-ember-template-tag]: Fix RangeError in files with multiple forward slashes",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/27",
        "text": "[prettier-plugin-ember-template-tag]: Remove `export default` by default. Add `templateExportDefault` option to add it back.",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/28",
        "text": "[prettier-plugin-ember-template-tag]: Fix bug where preprocess caused syntax errors in component classes",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/3",
        "text": "[prettier-plugin-ember-template-tag]: Use babel/traverse in parser to simplify printer logic",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/30",
        "text": "[prettier-plugin-ember-template-tag]: Don't convert back to <template> if text is pre-preprocessed",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/32",
        "text": "[prettier-plugin-ember-template-tag]: Move @glimmer/syntax to dependencies",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/33",
        "text": "[prettier-plugin-ember-template-tag]: HOTFIX block level error message",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/35",
        "text": "[prettier-plugin-ember-template-tag]: Print template tags on separate lines for \"default\" templates",
        "labels": [
          "documentation",
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/36",
        "text": "[prettier-plugin-ember-template-tag]: Fix bug where parsing template on newline caused syntax error",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/37",
        "text": "[prettier-plugin-ember-template-tag]: Resquish line before replacing previousLine",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/4",
        "text": "[prettier-plugin-ember-template-tag]: Upgrade dependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/41",
        "text": "[prettier-plugin-ember-template-tag]: Fix local releases",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/45",
        "text": "[prettier-plugin-ember-template-tag]: Switch from npm-run-all to concurrently",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/46",
        "text": "[prettier-plugin-ember-template-tag]: No-op for invalid hbs (Fixes #43)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/5",
        "text": "[prettier-plugin-ember-template-tag]: Better prettier-ignore handling",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/51",
        "text": "[prettier-plugin-ember-template-tag]: bug: showcase buildError issue",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/52",
        "text": "[prettier-plugin-ember-template-tag]: Experiment w/ allowing component class templates to collapse onto one line",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/54",
        "text": "[prettier-plugin-ember-template-tag]: Improve documentation of prettier plugin config",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/55",
        "text": "[prettier-plugin-ember-template-tag]: README improvements",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/57",
        "text": "[prettier-plugin-ember-template-tag]: Drop Node 14",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/58",
        "text": "[prettier-plugin-ember-template-tag]: Update Node-14-specific code",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/6",
        "text": "[prettier-plugin-ember-template-tag]: Include semicolons when template used as expression",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/60",
        "text": "[prettier-plugin-ember-template-tag]: Create examples workspace",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/65",
        "text": "[prettier-plugin-ember-template-tag]: Fix prettier 3",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/67",
        "text": "[prettier-plugin-ember-template-tag]: Upgrade typescript and @typescript-eslint packages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/7",
        "text": "[prettier-plugin-ember-template-tag]: Upgrade dependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/78",
        "text": "[prettier-plugin-ember-template-tag]: Upgrade to Prettier 3 (Fixes #61); Breaks compatibility with Prettier 2",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/8",
        "text": "[prettier-plugin-ember-template-tag]: Setup linters",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/9",
        "text": "[prettier-plugin-ember-template-tag]: Setup CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/91",
        "text": "[prettier-plugin-ember-template-tag]: Fix only-allow usage from npx to devDep",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/92",
        "text": "[prettier-plugin-ember-template-tag]: Remove `npx only-allow pnpm` preinstall hook",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/93",
        "text": "[prettier-plugin-ember-template-tag]: Add `only-allow` to `devDependencies` so it does not require network",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1009",
        "text": "[eslint-plugin-ember]: `no-get` rule should be able to autofix even for strings containing invalid JS variable names",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1078",
        "text": "[eslint-plugin-ember]: New Rule: No this.element in tests",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1093",
        "text": "[eslint-plugin-ember]: Good practice to remove computed properties",
        "labels": [
          "Question"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1108",
        "text": "[eslint-plugin-ember]: Question about recommended way to access a controller from a route given `no-controller-access-in-routes` rule",
        "labels": [
          "Question"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1116",
        "text": "[eslint-plugin-ember]: `avoid-leaking-state-in-ember-objects` false positives in mixins",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1118",
        "text": "[eslint-plugin-ember]: [BUG] require-computed-macros can autofix to self-referential macros",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1122",
        "text": "[eslint-plugin-ember]: New Rule: `no-simple-alias`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1123",
        "text": "[eslint-plugin-ember]: New Rule: `no-controller-model-reads`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1124",
        "text": "[eslint-plugin-ember]: New Rule: no-self-referencing-properties",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1156",
        "text": "[eslint-plugin-ember]: [ember/no-side-effects] False-positive with an assignment in a lambda",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1218",
        "text": "[eslint-plugin-ember]: `ember/no-test-import-export` incorrectly errors on files that are not tests",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1219",
        "text": "[eslint-plugin-ember]: `ember/no-computed-properties-in-native-classes` triggers on non-native class",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1220",
        "text": "[eslint-plugin-ember]: New Rule: `require-normalized-service-injections`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1223",
        "text": "[eslint-plugin-ember]: New Rule: `no-missing-external-imports`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1224",
        "text": "[eslint-plugin-ember]: Not recommended: require-fetch-import",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1238",
        "text": "[eslint-plugin-ember]: `no-side-effects` prevents caching",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1258",
        "text": "[eslint-plugin-ember]: False positive for `no-unused-services` when component is passed to function expressions",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1262",
        "text": "[eslint-plugin-ember]: `no-empty-glimmer-component-classes` reports violation for glimmer component when `this` reference in template",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1267",
        "text": "[eslint-plugin-ember]: `no-computed-properties-in-native-classes` fails with multiple class definitions",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1317",
        "text": "[eslint-plugin-ember]: `require-computed-property-dependencies`: false positive for spread array of keys",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1322",
        "text": "[eslint-plugin-ember]: New Rule: `no-receivers-on-reflect`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1337",
        "text": "[eslint-plugin-ember]: New Rule: Requiring hbs`` literals",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1359",
        "text": "[eslint-plugin-ember]: ember/jquery-ember-run throws error when event contains a colon",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1381",
        "text": "[eslint-plugin-ember]: New rule request: no async in getters",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1382",
        "text": "[eslint-plugin-ember]: New rule: prohibit tracking in getters",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1391",
        "text": "[eslint-plugin-ember]: `no-assignment-of-untracked-properties-used-in-tracking-contexts` Breaks Code",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1413",
        "text": "[eslint-plugin-ember]: Add lint for protecting people from accidental infinite loops / infinite revalidation errors",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1437",
        "text": "[eslint-plugin-ember]: [V2 Addons] Lint against importing test-support",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1453",
        "text": "[eslint-plugin-ember]: `ember/no-ember-testing-in-module-scope` catches assigning `Ember.testing = ...` too",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1488",
        "text": "[eslint-plugin-ember]: `ember/no-empty-glimmer-component-classes` probably shouldn't activate on `declare class`",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1510",
        "text": "[eslint-plugin-ember]: New rule: Lint against modifier which does not use the element",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1520",
        "text": "[eslint-plugin-ember]: False positives for `ember/use-ember-get-and-set`",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1540",
        "text": "[eslint-plugin-ember]: should any form of transition be an error if occurring from the application route",
        "labels": [
          "Enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1556",
        "text": "[eslint-plugin-ember]: Rules that need autofixers",
        "labels": [
          "Enhancement",
          "Help Wanted"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1608",
        "text": "[eslint-plugin-ember]: `require-computed-macros` auto fixes to deprecated code",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1660",
        "text": "[eslint-plugin-ember]: ember/no-assignment-of-untracked-properties-used-in-tracking-contexts applied on `@attr`",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1685",
        "text": "[eslint-plugin-ember]: Updating ember-template-imports breaks test in gjs-gts-processor-test.js",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1698",
        "text": "[eslint-plugin-ember]: `no-test-import-export` false-positive with `@glint/type-test`",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1699",
        "text": "[eslint-plugin-ember]: New Rule: no-decorators-before-export",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1721",
        "text": "[eslint-plugin-ember]: Lint package.json requirements with eslint-plugin-json-files",
        "labels": [
          "Enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1729",
        "text": "[eslint-plugin-ember]: ember/no-deprecated-router-transition-methods breaks when route uses a mixin",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1758",
        "text": "[eslint-plugin-ember]: New rule: `require-router-refresh-route-name`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1776",
        "text": "[eslint-plugin-ember]: Linting Ember Data relationship inverses",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1784",
        "text": "[eslint-plugin-ember]: Ensure `super()` called with args in hooks",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1807",
        "text": "[eslint-plugin-ember]: False positive `no-array-prototype-extensions` for emberArray combined with `this`",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1820",
        "text": "[eslint-plugin-ember]: Lint against precompileTemplate (&co)",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1845",
        "text": "[eslint-plugin-ember]: New rule: no-setupTest-from-ember-qunit",
        "labels": [
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1864",
        "text": "[eslint-plugin-ember]: ember/no-assignment-of-untracked-properties-used-in-tracking-contexts with tracked-built-ins",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1872",
        "text": "[eslint-plugin-ember]: Handle `@inject.service()` in `no-restricted-service-injections` rule and other service injection detections",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1877",
        "text": "[eslint-plugin-ember]: avoid-leaking-state-in-ember-objects should rule apply to service variable as well?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1889",
        "text": "[eslint-plugin-ember]: False negative for jquery-ember-run for many jquery element references ",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1895",
        "text": "[eslint-plugin-ember]: Provide a way to enable `gjs`/`gts`/`<template>` tag processing without extending `plugin:ember/recommended`",
        "labels": [
          "Enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1896",
        "text": "[eslint-plugin-ember]: <template> tag + eslint-plugin-sort-class-members (and possibly other plugins)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1925",
        "text": "[eslint-plugin-ember]: New lint: potential bug with assigning a value to a tracked property",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1927",
        "text": "[eslint-plugin-ember]: new lint: do not use 'this' in tests in gjs/gts files",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1932",
        "text": "[eslint-plugin-ember]: New lint: prevent usage of `Input` and `Textarea` (the ember default components)",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1950",
        "text": "[eslint-plugin-ember]: Drop Recommended Rules for Deprecated Ember 3.x Features",
        "labels": [
          "Breaking"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1961",
        "text": "[eslint-plugin-ember]: New rule proposal: require-components-imports-pascal-case",
        "labels": [
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/1983",
        "text": "[eslint-plugin-ember]: config files in readme should not encourage top level config. overrides only.",
        "labels": [
          "Documentation"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2030",
        "text": "[eslint-plugin-ember]: \"service\" import not treated the same as \"inject as service\"",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2035",
        "text": "[eslint-plugin-ember]: no-unused-expressions",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2060",
        "text": "[eslint-plugin-ember]: Plan v13 Release",
        "labels": [
          "Breaking"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2078",
        "text": "[eslint-plugin-ember]: ember/template-no-let-reference",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2079",
        "text": "[eslint-plugin-ember]: ember/no-runloop",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2080",
        "text": "[eslint-plugin-ember]: New rule: prevent assignment of existing properties on a service (important for tests)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2110",
        "text": "[eslint-plugin-ember]: Should we provide a config that disables some rules from `@typescript-eslint/eslint-plugin`?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2118",
        "text": "[eslint-plugin-ember]: no-unused-vars firing incorrectly on args inside template-tag",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2133",
        "text": "[eslint-plugin-ember]: Lint against shadowed keywords",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/2136",
        "text": "[eslint-plugin-ember]: eslint v9 support",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/686",
        "text": "[eslint-plugin-ember]: New Rule: `prefer-read-only-computed-macro`",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/687",
        "text": "[eslint-plugin-ember]: Detect arbitrary function calls with potential side effects in `no-side-effects` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/753",
        "text": "[eslint-plugin-ember]: New Rule: Avoid `.send` API",
        "labels": [
          "Enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/754",
        "text": "[eslint-plugin-ember]: `require-computed-macros` rule autofixer can lose comments",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/782",
        "text": "[eslint-plugin-ember]: Bug: require-computed-property-dependencies incorrectly flags a key w/ nesting after brace expansion",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/948",
        "text": "[eslint-plugin-ember]: no-assignment-of-untracked-properties-used-in-tracking-contexts causing false positives in constructor",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/949",
        "text": "[eslint-plugin-ember]: ember/no-test-module-for catches too many things",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/977",
        "text": "[eslint-plugin-ember]: ember/no-assignment-of-untracked-properties-used-in-tracking-contexts should not be fixable",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/issues/981",
        "text": "[eslint-plugin-ember]: no-deeply-nested-dependent-keys-with-each: false positive",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1004",
        "text": "[eslint-plugin-ember]: fix: ignore mirage directory for avoid-leaking-state-in-ember-objects",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1121",
        "text": "[eslint-plugin-ember]: Do not autofix self-referential computed properties in `require-computed-macros` rule",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1472",
        "text": "[eslint-plugin-ember]: chore: Set permissions for GitHub actions",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1700",
        "text": "[eslint-plugin-ember]: Add new rule `no-decorators-before-export`",
        "labels": [
          "Enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1836",
        "text": "[eslint-plugin-ember]: Add `requireArgs` option in `require-super-in-lifecycle-hooks` rule",
        "labels": [
          "Enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/1838",
        "text": "[eslint-plugin-ember]: failing test for #1835",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2072",
        "text": "[eslint-plugin-ember]: A failing test for no-deprecated-router-transition-methods (multiple classes)",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/eslint-plugin-ember/pull/2073",
        "text": "[eslint-plugin-ember]: A failing test for no-deprecated-router-transition-methods (legacy class, decorators)",
        "labels": [
          "Bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1119",
        "text": "[ember-template-lint]: update test suite for new rule creation",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1127",
        "text": "[ember-template-lint]: Rule to disallow some arg names that were meant for attribute bindings",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1131",
        "text": "[ember-template-lint]: [no-bare-strings] Automatically allow all HTML entities",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1186",
        "text": "[ember-template-lint]: Prefix plugin rules with plugin name",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1214",
        "text": "[ember-template-lint]: FileMatch issues",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1215",
        "text": "[ember-template-lint]: Export isInteractiveElement",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1226",
        "text": "[ember-template-lint]: Add TAP printer",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1255",
        "text": "[ember-template-lint]: -:-  error  Configuration stack out of sync with AST!  undefined",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1261",
        "text": "[ember-template-lint]: Rule request: no-slotless-content-for-slotted-elements",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1272",
        "text": "[ember-template-lint]: Rule request: Ensure duplicate landmark elements have unique labels",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1307",
        "text": "[ember-template-lint]: Global install should defer to project local",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1334",
        "text": "[ember-template-lint]: Rule request: no-arguments-for-named-blocks",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1351",
        "text": "[ember-template-lint]: Rule-request: no yielding block params to else/inverse block",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1359",
        "text": "[ember-template-lint]: Rule request: `require-valid-form-groups` (or similar)",
        "labels": [
          "enhancement",
          "a11y",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1361",
        "text": "[ember-template-lint]: Linter should throw warning / error when changing {{outlet}} to new component syntax",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1364",
        "text": "[ember-template-lint]: [Feature Request] Exposing ember's built-in public template helpers",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1371",
        "text": "[ember-template-lint]: Allow rules to specify and validate their options using JSON Schema ",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1391",
        "text": "[ember-template-lint]: Rule request [no-unknown-html-attributes]",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1403",
        "text": "[ember-template-lint]: `table-groups` rule does handle enforcing order correctly when control flow helpers are used",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1438",
        "text": "[ember-template-lint]: [rule] no-dynamic-component-invocation",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1441",
        "text": "[ember-template-lint]: consider allowing strings in comments for rule suppressions",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1445",
        "text": "[ember-template-lint]: no-attrs-in-components rule has false-negative result for Octane co-located templates",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1475",
        "text": "[ember-template-lint]: Transition events triggering `no-invalid-interactive`",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1478",
        "text": "[ember-template-lint]: [link-rel-noopener] Add support for trusted domains",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1488",
        "text": "[ember-template-lint]: Disallow component helper except in let",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1494",
        "text": "[ember-template-lint]: Rule request: Linting for “scope” in table headers",
        "labels": [
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1503",
        "text": "[ember-template-lint]: Some confusions with `no-inline-styles`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1507",
        "text": "[ember-template-lint]: New rule request: SVG support",
        "labels": [
          "enhancement",
          "a11y",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1508",
        "text": "[ember-template-lint]: Update `no-invalid-interactive` for additional use cases",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1515",
        "text": "[ember-template-lint]: Testing infra: alias `focus` to `only`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1522",
        "text": "[ember-template-lint]: New rule request: require-accessible-name",
        "labels": [
          "enhancement",
          "a11y",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1523",
        "text": "[ember-template-lint]: Make attribute-indentation rule \"fixable\"",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1555",
        "text": "[ember-template-lint]: Request: update `require-valid-alt-text`",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1558",
        "text": "[ember-template-lint]: Enhance `no-invalid-role` to include tagNames",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1585",
        "text": "[ember-template-lint]: New rule: no-this-in-route-templates",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1597",
        "text": "[ember-template-lint]: [Documentation] - deploy rule documentation to GH pages",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1607",
        "text": "[ember-template-lint]: Feature request: allow branching for \"fix\" functionality (suggestions)",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1618",
        "text": "[ember-template-lint]: Add `--fix` option to `no-action` rule, if action is an function (not a string)",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1619",
        "text": "[ember-template-lint]: Add `--fix` option to `no-action-modifiers` rule, if action is an function (not a string)",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1625",
        "text": "[ember-template-lint]: no-invalid-interactive triggers on <summary> tag",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1632",
        "text": "[ember-template-lint]: Feature request - Require arguments on a new line after a certain number of arguments",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1648",
        "text": "[ember-template-lint]: [no-model-argument-in-route-templates] Does not work when template-lint is invoked with an absolute path",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1686",
        "text": "[ember-template-lint]: Feature request: provide way to set up decayDays in linting config",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1703",
        "text": "[ember-template-lint]: Bug: Don't propagate Glimmer parse error to output",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1728",
        "text": "[ember-template-lint]: no-this-in-template-only-components - does not support absolute filePath's",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1733",
        "text": "[ember-template-lint]: add CodeDescription from language-server protocol to diagnostic messages",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1741",
        "text": "[ember-template-lint]: Expose meta data to rules for the Ember version being used",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1742",
        "text": "[ember-template-lint]: New Rule Suggestion / RFC: div-that-could-be-semantic-element",
        "labels": [
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1761",
        "text": "[ember-template-lint]: `require-input-label` fails when label is a sibling element",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1799",
        "text": "[ember-template-lint]: `no-duplicate-landmark-elements` should not flag elements as duplicate across different conditional branches",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1803",
        "text": "[ember-template-lint]: Add support for ignoring files",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1814",
        "text": "[ember-template-lint]: --fix to stdout",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1815",
        "text": "[ember-template-lint]: daemon version",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1817",
        "text": "[ember-template-lint]: Create auto generated `ember-template-lint --help` output documentation page",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1833",
        "text": "[ember-template-lint]: Add test to ensure valid SARIF log is generated.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1838",
        "text": "[ember-template-lint]: Add sync alternative to verify method to support usage inside eslint-plugin-hbs",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1840",
        "text": "[ember-template-lint]: Request: show todo count",
        "labels": [
          "enhancement",
          "todos"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1849",
        "text": "[ember-template-lint]: [Discussion] Provide max-len for block-indentation as well.",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1855",
        "text": "[ember-template-lint]: Request: add ability to see number of days for todos",
        "labels": [
          "enhancement",
          "todos"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1860",
        "text": "[ember-template-lint]: [Discussion] Any pointers to run template lint in parallel ?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1870",
        "text": "[ember-template-lint]: New rule: `forbidden-component-arguments`",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1871",
        "text": "[ember-template-lint]: Bug: Configuration stack out of sync with AST!",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1883",
        "text": "[ember-template-lint]: Is `link-rel-noopener` still a recommended rule?",
        "labels": [
          "question"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1886",
        "text": "[ember-template-lint]: [no-bare-strings] Detection of constant string in page-title helper",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1923",
        "text": "[ember-template-lint]: Extend no-forbidden-elements APIs",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1925",
        "text": "[ember-template-lint]: Support message placeholders for error messages",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1948",
        "text": "[ember-template-lint]: Todos not generating",
        "labels": [
          "bug",
          "todos"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1953",
        "text": "[ember-template-lint]: Improve semantic html rules",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1968",
        "text": "[ember-template-lint]: [no-passed-in-event-handlers] is incorrect?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/1984",
        "text": "[ember-template-lint]: Ability to summarize rule data",
        "labels": [
          "todos"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2005",
        "text": "[ember-template-lint]: Auditing existing rules with custom message for placeholders",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2028",
        "text": "[ember-template-lint]: Remove `keydown` linting in rule: no-down-event-binding",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2034",
        "text": "[ember-template-lint]: Add `--fix` option to pass in specific rule to fix",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2035",
        "text": "[ember-template-lint]: Freezes on a default addon",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2042",
        "text": "[ember-template-lint]: Violation of `simple-unless` allowlist doesn't get added to TODOs when using `--update-todo`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2043",
        "text": "[ember-template-lint]: Request to add rule to ban `tagName` and `classNames` attributes to components",
        "labels": [
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2061",
        "text": "[ember-template-lint]: Prevent spaces between conditional classes",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2098",
        "text": "[ember-template-lint]: Support `--fix` on attribute-indentation",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2120",
        "text": "[ember-template-lint]: feat: bundle web-worker (nodeless) version of linter",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2125",
        "text": "[ember-template-lint]: Update `labelTags` option on `require-input-label` to handle mustache component invocation",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2138",
        "text": "[ember-template-lint]: Add method for verifying template syntax to test helpers",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2141",
        "text": "[ember-template-lint]: require-input-label: \"Multiple labels\" false positive",
        "labels": [
          "bug",
          "a11y"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2142",
        "text": "[ember-template-lint]: feature: \"init\" option, to be able to get default setup, using \"npx ember-template-lint --init\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2144",
        "text": "[ember-template-lint]: feature request: accept AST for linting",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2169",
        "text": "[ember-template-lint]: Propose a11y lint: no-invalid-attribute-values",
        "labels": [
          "enhancement",
          "a11y"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2205",
        "text": "[ember-template-lint]: Annotate todo warnings with expiration date",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2206",
        "text": "[ember-template-lint]: Annotate expired todos",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2232",
        "text": "[ember-template-lint]: `eol-last` rule doesn't autofix when config = `editorconfig`",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2259",
        "text": "[ember-template-lint]: Don't treat header tags as landmarks unless they're children of the body tag",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2305",
        "text": "[ember-template-lint]: `no-bare-strings` false-negative",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2321",
        "text": "[ember-template-lint]: `no-this-in-template-only-components` triggers for route templates",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2322",
        "text": "[ember-template-lint]: `no-whitespace-within-word` rule fails for Czech language",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2334",
        "text": "[ember-template-lint]: `require-presentational-children` requires `role=\"presentation\"` on component invocations",
        "labels": [
          "a11y"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2337",
        "text": "[ember-template-lint]: `no-unused-block-params` triggers for yielded components",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2338",
        "text": "[ember-template-lint]: no-curly-component-invocation adding @'s for native attributes when used with --fix",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2340",
        "text": "[ember-template-lint]: linebreak-style: \"system\" getting overridden by .editorconfig \"LF\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2358",
        "text": "[ember-template-lint]: Advertise IDE/VSCode extensions in README?",
        "labels": [
          "documentation"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2375",
        "text": "[ember-template-lint]: Rule request: [embroider-ready]",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2377",
        "text": "[ember-template-lint]: Using absolute paths causes .lint-todo to be ignored",
        "labels": [
          "bug",
          "todos"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2386",
        "text": "[ember-template-lint]: Enhancement: Add summary to list of things that should trigger no-nested-interactive rule.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2387",
        "text": "[ember-template-lint]: [no-passed-in-event-handlers] False-negative with classic components",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2397",
        "text": "[ember-template-lint]: `no-invalid-interactive` | How to handle a listener to trap interactions on role=\"dialog\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2398",
        "text": "[ember-template-lint]: document how to configure `table-groups` and `no-bare-strings` correctly",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2399",
        "text": "[ember-template-lint]: `table-groups` should accept configuration for components to treat as `table` tags",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2400",
        "text": "[ember-template-lint]: `table-groups` configuration should allow for PascalCase and `::` component names",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2414",
        "text": "[ember-template-lint]: no-positive-tabindex support null",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2418",
        "text": "[ember-template-lint]: New rule: `no-missing-route-params-for-links`",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2447",
        "text": "[ember-template-lint]: attribute-indentation: setting 'indentation' value does not change expected indentation for 'as' lines when 'as-indentation' is set to 'attribute'",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2448",
        "text": "[ember-template-lint]: Content inside <pre> should be ignored",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2462",
        "text": "[ember-template-lint]: require-context-role considers named block as parent element",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2470",
        "text": "[ember-template-lint]: `has-block` fails silently",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2486",
        "text": "[ember-template-lint]: Fails silently with missing config file",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2488",
        "text": "[ember-template-lint]: Github Lint/Build Annotations Are Not Associated in Subdirectory Ember Projects",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2498",
        "text": "[ember-template-lint]: Inconsistent Ignore (Executable & IDE Tools) for htmlbars tests",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2512",
        "text": "[ember-template-lint]: Linter exited successfully after an error",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2534",
        "text": "[ember-template-lint]: ignore no-duplicate-landmark-elements lint rule for elements displayed conditionally ",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2542",
        "text": "[ember-template-lint]: Should not fail when no hbs files match",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2570",
        "text": "[ember-template-lint]: `require-valid-named-block-naming-format` rule should also lint the calling side",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2571",
        "text": "[ember-template-lint]: Rules that need autofixers",
        "labels": [
          "enhancement",
          "good first issue"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2590",
        "text": "[ember-template-lint]: no-unused-block-params triggers for modifier helper & let",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2654",
        "text": "[ember-template-lint]: `require-presentational-children` fails for named blocks",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2663",
        "text": "[ember-template-lint]: Rule request: no-forbidden-keywords / no-forbidden-property-names / no-restricted-syntax",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2666",
        "text": "[ember-template-lint]: Report which WCAG success criteria relate to a11y rules",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2667",
        "text": "[ember-template-lint]: Parse error when applying a helper/modifier conditionally",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2715",
        "text": "[ember-template-lint]: [5.0.0] Started complaining about templates in TypeScript files",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2717",
        "text": "[ember-template-lint]: [Rule proposal] Disallow redundant whitespace-removal tags",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2724",
        "text": "[ember-template-lint]: no-array-prototype-extensions fix is unsafe",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2740",
        "text": "[ember-template-lint]: `no-shadowed-elements` returning false positive for `col` within `colgroup`",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2741",
        "text": "[ember-template-lint]: Consider rewriting ember-template-lint as an ESLint language plugin",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2742",
        "text": "[ember-template-lint]: Is ember-template-lint designed to operate only on .hbs files?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2752",
        "text": "[ember-template-lint]: Can a plugin specify overrides?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2758",
        "text": "[ember-template-lint]: Silent failure when specifying multiple directories with `--no-error-on-unmatched-pattern`",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2786",
        "text": "[ember-template-lint]: gjs/gts w/ Input component erroneously reports errors about `builtin-component-arguments`",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2787",
        "text": "[ember-template-lint]: Simple-unless not Allowing Unless Inside an Else Statement",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2791",
        "text": "[ember-template-lint]: `no-invalid-interactive` recommendation can break navigation shortcuts for SR users",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2799",
        "text": "[ember-template-lint]: `attribute-indentation` fails",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2801",
        "text": "[ember-template-lint]: Improve README organization",
        "labels": [
          "documentation"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2826",
        "text": "[ember-template-lint]: embedded templates indented incorrectly",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2827",
        "text": "[ember-template-lint]: embedded templates using single quotes instead of double quotes",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2829",
        "text": "[ember-template-lint]: Incorrect no-redundant-role warning on input",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2868",
        "text": "[ember-template-lint]: Is there a way to have the codemod format only the component that's being fixed and not change the format of unrelated components?",
        "labels": [
          "question"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2878",
        "text": "[ember-template-lint]: ember-template-lint doesn't support plugins exposed using an exports field in package.json",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2879",
        "text": "[ember-template-lint]: Add `--cache` so that ember-template-lint can be fast on large projects",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2893",
        "text": "[ember-template-lint]: template-lint \"no-partial\" trips up when partial is passed as param",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2899",
        "text": "[ember-template-lint]: false positive on no-whitespace-for-layout",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2908",
        "text": "[ember-template-lint]: Performance regression in versions 5.8+",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2924",
        "text": "[ember-template-lint]: no-obscure-array-access fix is incorrect with modifier usage",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2925",
        "text": "[ember-template-lint]: Idea for a new rule: No target=\"_blank\" for LinkTo",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2926",
        "text": "[ember-template-lint]: no-obscure-array-access fix can duplicate lines",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2963",
        "text": "[ember-template-lint]: Improve builtin-component-arguments rule to lint against \"radio\" inputs",
        "labels": [
          "enhancement",
          "good first issue"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2968",
        "text": "[ember-template-lint]: ARIA-compliant disabled link communication raises errors on default config",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2969",
        "text": "[ember-template-lint]: allow no-invalid-link-text to be configured for custom link component names",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2976",
        "text": "[ember-template-lint]: Drop Recommended Rules for Deprecated Ember 3.x Features",
        "labels": [
          "breaking"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2977",
        "text": "[ember-template-lint]: New rule: no-jsx-attributes",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2985",
        "text": "[ember-template-lint]: New rule: No chaining `this` to itself",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2989",
        "text": "[ember-template-lint]: [no-action-on-submit-button] Do not handle `<form method=\"dialog\">`",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/2998",
        "text": "[ember-template-lint]: Autofix of block-indentation crash",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/3006",
        "text": "[ember-template-lint]: require-input-label false positive ",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/3013",
        "text": "[ember-template-lint]: Revamped gjs/gts support",
        "labels": [
          "breaking"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/3014",
        "text": "[ember-template-lint]: [gjs]: no-unknown-arguments-for-builtin-components incorrectly assumes an `<Input>` is the ember `<Input>`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/3015",
        "text": "[ember-template-lint]: [gjs]: require-input-label incorrectly assumes an `<Input>` is the ember `<Input>`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/3022",
        "text": "[ember-template-lint]: Migrate off Jest",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/3042",
        "text": "[ember-template-lint]: no-black-params-for-html-elements failes with dot-separated angle bracket invocation",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/3046",
        "text": "[ember-template-lint]: Plan v7 Release",
        "labels": [
          "breaking"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/3047",
        "text": "[ember-template-lint]: overrides do not apply to gts",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/3053",
        "text": "[ember-template-lint]: Running `--fix` when enabling `attribute-order` rule hangs process",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/3054",
        "text": "[ember-template-lint]: Bug: autofix of `attribute-order` removes empty string attribute/argument values",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/issues/3057",
        "text": "[ember-template-lint]: Contradictions from no-potential-path-strings and no-unnecessary-curly-strings",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1446",
        "text": "[ember-template-lint]: no-attrs-in-components rule supports octane component template co-location",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1559",
        "text": "[ember-template-lint]: Update `require-valid-alt-text` rule to require same value types",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1707",
        "text": "[ember-template-lint]: no-this-in-template-only-components: improve app structure detection",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1924",
        "text": "[ember-template-lint]: Extend no-forbidden-elements APIs.",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/1936",
        "text": "[ember-template-lint]: no-unknown-arguments-for-builtin-components: allow `@indeterminate`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2070",
        "text": "[ember-template-lint]: Implement meta objects for rules",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2086",
        "text": "[ember-template-lint]: Support message placeholders for error messages",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2271",
        "text": "[ember-template-lint]: Add autofixer to `attribute-indentation` rule",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2335",
        "text": "[ember-template-lint]: partial-fix: default pods paths to false for `no-this-in-template-only-components`",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2366",
        "text": "[ember-template-lint]: check for svg to extend the supportedExtensions",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2379",
        "text": "[ember-template-lint]: Crash in block indentation auto-fixer",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2422",
        "text": "[ember-template-lint]: Add `&times` to `no-bare-strings` default allow list",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2423",
        "text": "[ember-template-lint]: feat:  adds `allowHTMLCharacters` configuration property for `no-bare-strings` rule",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2515",
        "text": "[ember-template-lint]: Clean up `moduleId`, add ability to specify `ignore` via file path with extension",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2572",
        "text": "[ember-template-lint]: Add failing tests for missing component structures in `no-this-in-template-only-components`",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2923",
        "text": "[ember-template-lint]: Create failing no-obscure-array-access-test",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-template-lint/ember-template-lint/pull/2978",
        "text": "[ember-template-lint]: Add new rule `no-jsx-attributes`",
        "labels": [
          "enhancement",
          "New Rule"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/issues/29",
        "text": "[ember-eslint-parser]: Document what to do with custom-elements and other not-defined HTML tags (no-undef)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/issues/56",
        "text": "[ember-eslint-parser]: Cleanup transforms.js once content-tag has a transform API built in",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-tooling/ember-eslint-parser/issues/78",
        "text": "[ember-eslint-parser]: `jsdoc/require-jsdoc` crashes ESLint when there is an un-exported class with a `<template>` tag ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/1",
        "text": "[prettier-plugin-ember-template-tag]: RFC: Semicolon constraints and opinions",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/16",
        "text": "[prettier-plugin-ember-template-tag]: [Feature] Configuration Options",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/218",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Required semicolons incorrectly removed",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/38",
        "text": "[prettier-plugin-ember-template-tag]: VSCode instructions did not work",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/42",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] New line added in comment block (and maybe generally when dealing with embedded formats with syntax errors)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/53",
        "text": "[prettier-plugin-ember-template-tag]: [Bug] Does not work with VSCode `formatOnPaste` config",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/issues/84",
        "text": "[prettier-plugin-ember-template-tag]: plugin is parsing JS comments and throws errors",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/187",
        "text": "[prettier-plugin-ember-template-tag]: Add optional peer-dependency on eslint-plugin-ember v12.0.0",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/219",
        "text": "[prettier-plugin-ember-template-tag]: test: required semicolon test case snapshot",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/221",
        "text": "[prettier-plugin-ember-template-tag]: test: Failing test for unicode character issue",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/gitKrystan/prettier-plugin-ember-template-tag/pull/59",
        "text": "[prettier-plugin-ember-template-tag]: Enable lib-check in tsconfig",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/prettier/prettier/pull/15087",
        "text": "[prettier]: Handle <style> and <pre> tags in Handlebars/Glimmer",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "vite": {
    "issues": [
      {
        "href": "https://github.com/emberjs/ember.js/pull/20620",
        "text": "[ember.js]: [CLEANUP canary] Remove final eager consumption of AMD loader",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1018",
        "text": "[embroider]: Contextual modifiers and helpers not supported?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1020",
        "text": "[embroider]: Cannot import from `@glimmer/tracking/primitives/cache`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1022",
        "text": "[embroider]: @embroider/addon-dev should provide a command to link v2 addons w/ watched rebuilds",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1024",
        "text": "[embroider]: `@embroider/router ember-release` job fails due to ember-auto-import v1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1026",
        "text": "[embroider]: Build dies when using incorrect helper/component in template",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1028",
        "text": "[embroider]: `@embroider/router` addon blueprint isn't compatible with Ember 4",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1032",
        "text": "[embroider]: Could not find module `luxon` imported from `(require)`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1037",
        "text": "[embroider]: 'loose' mode configuration must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled).",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1038",
        "text": "[embroider]: Ember 4.1+ || Error while processing route: ember window.Ember is undefined -- related: can't access lexical declaration '__WEBPACK_DEFAULT_EXPORT__' before initialization",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1040",
        "text": "[embroider]: How do you debug the macros?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1041",
        "text": "[embroider]: 0.48.0 breaks in apps that use ember-cli-babel's includePolyfill",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1051",
        "text": "[embroider]: Wrong version check in dependencySatisfies ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1054",
        "text": "[embroider]: How do I tell webpack/embroider to ignore the public folder?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1057",
        "text": "[embroider]: dependencySatisfies + macroCondition ignores ember-source >= 4.0.0Z",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1060",
        "text": "[embroider]: Bug Report - Embroider chunk loading is causing Fastboot to throw an error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1061",
        "text": "[embroider]: ensureSafeComponent can be a no-op for classes on newer embers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1062",
        "text": "[embroider]: What is the resolution for these types of errors: <addon> is trying to import <peerDep> from within its app tree. This is unsafe, because <addon> can't control which dependencies are resolvable from the app",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1065",
        "text": "[embroider]: Expecting 'OPEN_SEXPR', 'ID', 'STRING', 'NUMBER', 'BOOLEAN', 'UNDEFINED', 'NULL', 'DATA', got 'INVALID'",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1067",
        "text": "[embroider]: in a yarn-monorepo, `dependencySatisfies` is always true when referencing packages in the monorepo",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1072",
        "text": "[embroider]: `unable to resolve package {addon-name}` when using HFTNB syntax to reference components in the same addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1073",
        "text": "[embroider]: Uncaught SyntaxError: Cannot use import statement outside a module with ember-novnc-shim/novnc",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1077",
        "text": "[embroider]: @babel/template placeholder build error resurrection",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1078",
        "text": "[embroider]: Uncaught (in promise) Error: Could not find module `../@ember/test-helpers/index.js` imported from `(require)`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1082",
        "text": "[embroider]: Non-serializable objects in macro config should be a build error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1086",
        "text": "[embroider]: built-in cached decorator causes \"decorator is not a function\" error.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1091",
        "text": "[embroider]: Cannot find peerDependency (miragejs) with importSync ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1092",
        "text": "[embroider]: addon-main cannot be found if mapped outside of root library directory",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1094",
        "text": "[embroider]: [addon-dev] Allow TS files in publicEntrypoints / appReexports",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1095",
        "text": "[embroider]: Provide a sample rollup config for typescript",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1097",
        "text": "[embroider]: For `@embroider/addon-dev`, should we also have swc plugins for for the colocation and template compilation stuff?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1108",
        "text": "[embroider]: this.parent.registerV2Addon is not a function for nested v2 addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1111",
        "text": "[embroider]: v2 addon + embroider/macros results in build-time error from consuming (classic) app",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1112",
        "text": "[embroider]: ember-cli shares broccoli trees across builders",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1113",
        "text": "[embroider]: v2 addons :: optionalPeerDependencies ~= peerDependenciesMeta",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1116",
        "text": "[embroider]: All ember-source modules missing from a build",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1118",
        "text": "[embroider]: Non dynamic component in template considered unsafe unless called with <this.component />",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1121",
        "text": "[embroider]: V2 Addons: cannot import template-only components",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1127",
        "text": "[embroider]: V2 addons: initializers are duplicated or ran in the wrong context? ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1132",
        "text": "[embroider]: `Build Error (PackagerRunner) in node_modules\\@glimmer\\tracking\\index.js`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1136",
        "text": "[embroider]: Updating @embroider/util cause build error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1138",
        "text": "[embroider]: Support importSync with static config value",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1153",
        "text": "[embroider]: [Embroider 1.4] Module not found: Error: Can't resolve '../../page-object'",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1158",
        "text": "[embroider]: fastbootDependencies are not respected (causing failure with in-repo addons)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1162",
        "text": "[embroider]: Should `/app/config/environment.js` be an exception when defining `staticAppPaths: ['config']`?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1166",
        "text": "[embroider]: \"Class extends value #<Object> is not a constructor\" Only on certain browsers.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1175",
        "text": "[embroider]: v2 addon files not resolvable when brought into app through v1 addon",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1179",
        "text": "[embroider]: Unable to import from a v1 addon in a v2 addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1182",
        "text": "[embroider]: Typescript Support for v2 Addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1184",
        "text": "[embroider]: Feat: v2 equivalent of isDevelopingAddon => true for mono-repo dependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1185",
        "text": "[embroider]: The Readme for @embroider/macros isn't getting deployed to npm properly",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1192",
        "text": "[embroider]: service injection can't be found in Embroider Optimized ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1193",
        "text": "[embroider]: using ember-element-helper in addons and building with embroider-optimized",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1197",
        "text": "[embroider]: Template-only component resolution fails if only referenced in JS",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1198",
        "text": "[embroider]: V2 addon.hbs() doesn't compile hbs files into the associated JS/TS file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1204",
        "text": "[embroider]: Ember build fail with this message EMFILE: too many open files, watch",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1206",
        "text": "[embroider]: Tree passed to preprocessors for app and addon is not scoped with moduleName",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1211",
        "text": "[embroider]: live reload broken (duplicate scripts like vendor.js appear)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1212",
        "text": "[embroider]: Add rollup plugin that verifies and fixes the package.json (or other files)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1217",
        "text": "[embroider]: Make keepAssets also edit the packageJson like appReexports does",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1235",
        "text": "[embroider]: Webpack 5 'path' fallback broken when using @embroider/webpack",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1243",
        "text": "[embroider]: Absolute path to package is presented in the build output assets",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1249",
        "text": "[embroider]: \"Unsafe dynamic component\" error when using local template-only component with `{{component ...}}` helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1261",
        "text": "[embroider]: @embroider/compat v1.9.0 breaks TypeScript components when staticComponents: true",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1264",
        "text": "[embroider]: for v2 addons, can we remove the addon-shim?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1268",
        "text": "[embroider]: Missing helper: unique-id with embroider-optimized",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1269",
        "text": "[embroider]: eyeglass-restyle errors out with \"null must be a Sass value\" in compat build",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1274",
        "text": "[embroider]: bug: `getOwnConfig` compilation output not compatible with V2 publish",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1275",
        "text": "[embroider]: docs: Clarify whether macros are usable by V2 Addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1279",
        "text": "[embroider]: build fails when rootURL='' as default and rootURL set to '/' for test environment",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1287",
        "text": "[embroider]: Embroider 1.9.0 breaks all `this` context in component templates",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1293",
        "text": "[embroider]: Certain component, helper, and modifier imports fail to resolve with v2.0.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1296",
        "text": "[embroider]: Helpers fail to resolve from .hbs.js file with embroider 2.x and static helpers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1300",
        "text": "[embroider]: Builds failing with template imports not found",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1304",
        "text": "[embroider]: `Unexpected token` error caused by dynamically inserted `import` statement",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1315",
        "text": "[embroider]: Editing CSS files causes whole page to reload",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1316",
        "text": "[embroider]: Failing to statically import addon modifiers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1320",
        "text": "[embroider]: {{div}} divide helper from ember-math-helpers breaks with 2.x with use of <div> tags",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1322",
        "text": "[embroider]: can't locate @ember-data/record-data/-private referred to in module rules",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1325",
        "text": "[embroider]: Cannot read properties of undefined (reading 'registerV2Addon')",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1326",
        "text": "[embroider]: `Missing component` error with pods + component placed on route folder",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1332",
        "text": "[embroider]: `dependencySatisfies` fails due to empty `package.json`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1333",
        "text": "[embroider]:  How to get CSS related assets fingerprinted by Embroider ?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1336",
        "text": "[embroider]: Errors with embroider and ember-table / ensure-safe-component / TypeScript",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1341",
        "text": "[embroider]: Error importing component classes (TypeScript)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1356",
        "text": "[embroider]: Can't get build with `ensureSafeComponent`-call (addon with typescript)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1366",
        "text": "[embroider]: CI failing due to network/resources issues",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1371",
        "text": "[embroider]: Recursively resolving v2 addons breaks the build",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1378",
        "text": "[embroider]: Error with ember-private-api.js and __loader",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1380",
        "text": "[embroider]: @embroider/test-setup v2 causes assertion for HTML encoded char to fail",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1382",
        "text": "[embroider]: `{{ensure-safe-component}}` not working with template tags",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1387",
        "text": "[embroider]: Incorrect `rootElement` when running tests on localhost:4200/tests when `storeConfigInMeta: false`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1397",
        "text": "[embroider]: Uncaught error thrown while using require('moment')",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1420",
        "text": "[embroider]: rollup-app-reexports writes package.json even if not needed",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1434",
        "text": "[embroider]: Build error following update to 3.0.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1441",
        "text": "[embroider]: Rebuilds fail when app is using WebpackBundleAnalyzer & probably others",
        "labels": [
          "bug",
          "has reproduction"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1452",
        "text": "[embroider]: @embroider/macros v1.11 fails the build in no-glint addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1457",
        "text": "[embroider]: Need to state compatible Ember versions with Embroider",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1465",
        "text": "[embroider]: Investigate test flakiness of rollup --watch tests on windows in CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1487",
        "text": "[embroider]: `externals: [\"@glimmer/validator\"]` does not work in apps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1498",
        "text": "[embroider]: addon owned service with staticAddonTrees breaks DI",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1501",
        "text": "[embroider]: Build fails with \"Can't resolve ...@embroider/macros...\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1506",
        "text": "[embroider]: Embroider optimized fails with Ember Data 4.12.x",
        "labels": [
          "bug",
          "has reproduction"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1514",
        "text": "[embroider]: Attempted to resolve `did-insert`, which was expected to be a modifier, but nothing was found",
        "labels": [
          "bug",
          "has reproduction"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1523",
        "text": "[embroider]: `EMBROIDER_CONCAT_STATS` breaks the build",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1530",
        "text": "[embroider]: `importSync()` vs commonjs packages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1532",
        "text": "[embroider]: @embroider/webpack building forever",
        "labels": [
          "has reproduction"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1533",
        "text": "[embroider]: Route splitting on pods found under `./app/routes/`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1539",
        "text": "[embroider]: I had an idea aroun how eventual Vite usage could look",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1545",
        "text": "[embroider]: Should `loader.js` be marked as external and indirected to the global?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1551",
        "text": "[embroider]: package publish needs to set --access=public",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1553",
        "text": "[embroider]: Seeing Typescript issues when using master",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1570",
        "text": "[embroider]: Vite 🙃: Uncaught SyntaxError: ambiguous indirect export: has",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1573",
        "text": "[embroider]: @embroider/macros/runtime.js: @babel/template placeholder \"SAMPLE_FEATURE_FLAG\": Expected string substitutionError: @babel/template placeholder \"SAMPLE_FEATURE_FLAG\": Expected string substitution",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1575",
        "text": "[embroider]: Ember inspector breaks when `staticEmberSource` is enabled",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1576",
        "text": "[embroider]: [@embroider/webpack] user-provided module rules (loaders) not working with 3.1 embroider apps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1581",
        "text": "[embroider]: Should we run `addonPostProcessTree` on `extraPublicTrees`?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1599",
        "text": "[embroider]: `Error: \"EmberObject.create no longer supports..\"` - only during `embroider-safe` scenario on `Ember 4.12` addon (v1)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1602",
        "text": "[embroider]: [Addon V2] Dependencies conflict between the addon and the test-app with the same package version for both (ember-source)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1606",
        "text": "[embroider]: Error: `importSync` cannot find component with relative path (embroider v3 / Ember 4.12)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1610",
        "text": "[embroider]: [perf] Avoid fastboot regex cost in app not using fastboot?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1615",
        "text": "[embroider]: `Could not find module rsvp imported from fetch`: embroider-optimized scenario on Ember 4.12 addon (v1)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1618",
        "text": "[embroider]: esbuild resolver should delegate dependency optimization to Vite",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1621",
        "text": "[embroider]: maybe have optimizeDeps come from embroider i.e. don't add @embroider/macros but we add it in our function",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1651",
        "text": "[embroider]: Implement and properly test reverse-exports package",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1659",
        "text": "[embroider]: Latest release breaks the build",
        "labels": [
          "has reproduction"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1660",
        "text": "[embroider]: Rebuild issues with core 3.4.0 and compat 3.3.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1669",
        "text": "[embroider]: Regression in rebuild times introduced in `@embroider/compat@3.3.1` and `@embroider/core@3.4.1`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1675",
        "text": "[embroider]: type=module is somehow incompatible with babel",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1694",
        "text": "[embroider]: `macroCondition` macros aren't removed from templates during the build phase",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1733",
        "text": "[embroider]: V2 addons more vulnerable to a reliable release process? Installing forks or PRs require a build step",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1746",
        "text": "[embroider]: Addons are not being rebuilt with livereload",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1750",
        "text": "[embroider]: mirage/config.ts isn't found",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1754",
        "text": "[embroider]: docs: inconsistency between `addon-author-guide.md` and ember-welcome-page",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1755",
        "text": "[embroider]: [addon-dev] Add `exclude` option for appReexports and publicEntryPoints",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1761",
        "text": "[embroider]: [type=module] Library cannot import from `@ember/*`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1764",
        "text": "[embroider]: [Feature request] source map generation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1776",
        "text": "[embroider]: Add an option for hbs files to be considered route templates and compiled as such",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1789",
        "text": "[embroider]: Peer checking does not agree with are-my-node-modules-messed-up",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1804",
        "text": "[embroider]: Allow macros config to not have a runtime implementation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1809",
        "text": "[embroider]: FastBoot + Embroider + browser-only library issue",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1814",
        "text": "[embroider]: Libraries cannot import virtrual files generated from unplugin",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1831",
        "text": "[embroider]: [main + v3]: Resolver does not allow plugins which have virtual modules that import their own (library's) virtual modules",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1841",
        "text": "[embroider]: \"Scenario embroider-optimized: FAIL\" seen when using index components in tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1843",
        "text": "[embroider]: [main + v3, webpack]: Resolver is not compatible with virtual files which import from the app",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/385",
        "text": "[embroider]: this.app.testIndex is not a function",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/386",
        "text": "[embroider]: ModuleNotFoundError: Module not found: Error: Can't resolve 'qunit-dom'",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/389",
        "text": "[embroider]: ReferenceError: emberAutoImportDynamic is not defined -- using emberfire",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/391",
        "text": "[embroider]: Imports not on default object with embroider",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/395",
        "text": "[embroider]: could not find app javascript in index.html",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/396",
        "text": "[embroider]: Error when using ember-data@3.16 with staticAddonTrees enabled",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/403",
        "text": "[embroider]: Double template transform in nested addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/405",
        "text": "[embroider]: Transpiling Stage 3 Features",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/406",
        "text": "[embroider]: Support nullish coalescing inside macroCondition",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/408",
        "text": "[embroider]: Always provide the `runningTests` variable",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/409",
        "text": "[embroider]: Tracking issue for fastboot manifest handling",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/410",
        "text": "[embroider]: appTrees merge order can differ from stock ember-cli",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/412",
        "text": "[embroider]: appTrees need to merge into the nearest engine",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/413",
        "text": "[embroider]: Error: Could not find module `json5` imported from `(require)`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/414",
        "text": "[embroider]: Webpack Bundle Analyzer stats server is started even when only building the app",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/422",
        "text": "[embroider]: Does this compile standalone glimmer components?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/428",
        "text": "[embroider]: Support in-repo addons inside addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/430",
        "text": "[embroider]: Include tests from engines in the main app's test suite",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/436",
        "text": "[embroider]: Nullish coalescing operator is breaking the build",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/437",
        "text": "[embroider]: 'original is not a function' with embroider's router",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/438",
        "text": "[embroider]: production build tries to include unimported file?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/439",
        "text": "[embroider]: Can't find component when staticComponents is true and component is normal AngleBracket invocation?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/442",
        "text": "[embroider]: Cannot find module for ember-fullcalendar",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/446",
        "text": "[embroider]: Unable to use ember-cli-postcss + postcss-import",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/448",
        "text": "[embroider]: Build failure related to treeForFastboot in v0.16",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/449",
        "text": "[embroider]: build failure when an addon returns undefined from treeForFastboot",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/450",
        "text": "[embroider]: Don't rely on babel-loader's peerDep to get the correct @babel/core version",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/453",
        "text": "[embroider]: Duplicate plugin/preset detected",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/456",
        "text": "[embroider]: Should Embroider passthrough script attributes?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/459",
        "text": "[embroider]: Unable to resolve [sub]package X from /tmp/.../direct-dependency",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/467",
        "text": "[embroider]: Lazy asset chunk loading fails with CDN'd assets",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/470",
        "text": "[embroider]: Components don't seem to be split into route bundles",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/471",
        "text": "[embroider]: Cannot identify a component in rule snippet",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/474",
        "text": "[embroider]: How to use macros to exclude files/folders from build",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/476",
        "text": "[embroider]: Build error with @embroider/macros and static helpers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/479",
        "text": "[embroider]: Test paths are not importable from other tests?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/480",
        "text": "[embroider]: Models are not importable from helpers?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/481",
        "text": "[embroider]: can't find dependency of ember-intl? intl-messageformat-parser",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/482",
        "text": "[embroider]: App + embroider doesn't ever finish building on codesandbox? ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/487",
        "text": "[embroider]: Dynamic Component Hole Discussion",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/488",
        "text": "[embroider]: Sample ember app with embroider",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/489",
        "text": "[embroider]: Fastboot error with Embroider",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/490",
        "text": "[embroider]: app.import({ outputFile, using })",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/497",
        "text": "[embroider]: dependencySatisfies hbs and js implementations differ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/500",
        "text": "[embroider]: Incompatible with ember-cli-node-assets",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/504",
        "text": "[embroider]: Configure @babel/plugin-transform-runtime by default",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/509",
        "text": "[embroider]: Installing addon with latest @embroider/macros as dependency fails",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/516",
        "text": "[embroider]: Dummy app public area not delivered to dist",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/518",
        "text": "[embroider]: Error in compat mode in addon: Cannot read property 'pkg' of undefined",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/528",
        "text": "[embroider]: Addons using ember-cli-typescript@4 do not get their TypeScript transpiled",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/530",
        "text": "[embroider]: Avoiding `Testem.hookIntoTestFramework()` invocation with `ember-qunit@5.0.0-beta.3`+",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/532",
        "text": "[embroider]: Using Embroider while developing an addon does not rebuild",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/539",
        "text": "[embroider]: Interoperability issue of embroider and loader.js",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/543",
        "text": "[embroider]: adjust-imports babel plugin doesn't handle importSync",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/544",
        "text": "[embroider]: Unresolvable dynamic imports should be runtime errors, not static errors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/545",
        "text": "[embroider]: Movable package cache should tolerate missing deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/559",
        "text": "[embroider]: MacroCondition throws when used as a class field initializer",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/563",
        "text": "[embroider]: Cannot find module './vendor/ceibo/index.js'",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/568",
        "text": "[embroider]: Support for disabled in-repo addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/569",
        "text": "[embroider]: Support direct `this._super` calls in treeFor",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/585",
        "text": "[embroider]: Thoughts on release automation?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/589",
        "text": "[embroider]: Tree-shaking for code in /app not working",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/592",
        "text": "[embroider]: Multiple versions of `@embroider/macros` may conflict at runtime in classic builds",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/596",
        "text": "[embroider]: Error in compat build with ember-cli-imgix due to babel-plugin-inline-package-json",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/602",
        "text": "[embroider]: Support pods layout for route-based code splitting",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/603",
        "text": "[embroider]: Add `staticModifiers` flag (to support shaking unused modifiers and route splitting)",
        "labels": [
          "good first issue"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/616",
        "text": "[embroider]: Util Types",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/626",
        "text": "[embroider]: Infinite rebuilding for `ember s` in this repo's addon packages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/642",
        "text": "[embroider]: Running official Sentry SDK for ember breaks build",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/643",
        "text": "[embroider]: Build cannot find package.json via SmooshPackageJSON (embroider:core:smoosh-package-json)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/644",
        "text": "[embroider]: Build fails with ember engines + embroider in a monorepo configuration",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/654",
        "text": "[embroider]: Sourcemaps created by 'source-map-hidden' are included in index.html",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/660",
        "text": "[embroider]: Incompatible with ember-electron",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/662",
        "text": "[embroider]: Webpack resolve alias doesn't work",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/664",
        "text": "[embroider]: Embroider (v0.35) + Fastboot SSR exception - \"document is not defined\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/665",
        "text": "[embroider]: Terser outputting error as a string instead of throwing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/671",
        "text": "[embroider]: `@embroider/macros` is not parallelizable",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/672",
        "text": "[embroider]: File not found with an addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/675",
        "text": "[embroider]: pods application/route.js not generated if using ember-simple-auth \"3.1.0\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/676",
        "text": "[embroider]: Error on Windows",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/677",
        "text": "[embroider]: Error when trying to run tests: unsupported module was defined",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/679",
        "text": "[embroider]: Embroider does not play well with ember-holy-futuristic-template-namespacing-batman addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/680",
        "text": "[embroider]: macroMaybeModifier needed?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/681",
        "text": "[embroider]: Ember serve fails on windows with embroider 0.32+",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/683",
        "text": "[embroider]: ReferenceError: emberAutoImportDynamic is not defined",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/684",
        "text": "[embroider]: importSync in classic build + ember-auto-import",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/689",
        "text": "[embroider]: Should Embroider link hoisted transitive dependencies?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/691",
        "text": "[embroider]: typescript within addon /tests folder seems not working",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/698",
        "text": "[embroider]: Link attributes are wiped in index.html",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/701",
        "text": "[embroider]: Macros fail with latest ember-cli-htmlbars",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/718",
        "text": "[embroider]: Rebuild not working with ember-intl (translation file changes will be ignored)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/722",
        "text": "[embroider]: Module not found: Can't resolve '../../../../file'  Any option to include in-repo addons of an app ?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/725",
        "text": "[embroider]: Regression: Build Error: Don't know how to insertURL for sourcemaps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/727",
        "text": "[embroider]: Actionable warning for Your build is slower because some babel plugins are non-serializable?",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/729",
        "text": "[embroider]: Tailwind JIT does not work with Embroider (default embroider settings)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/730",
        "text": "[embroider]: Small node package, is-buffer, causes build to break?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/731",
        "text": "[embroider]: QUnit transpilation issue when using targets that include IE11",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/738",
        "text": "[embroider]: Unexpected deprecations when running against Ember 3.27+",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/745",
        "text": "[embroider]: Test suite breaks on newer ember-engines",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/750",
        "text": "[embroider]: Incompatibility with Node 10 introduced in #748",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/757",
        "text": "[embroider]: build error no such file or directory, open '.app/styles/app.scss'",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/760",
        "text": "[embroider]: How do you tell webpack to load fonts?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/761",
        "text": "[embroider]: Bump 1.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/764",
        "text": "[embroider]: [@embroider/util] Invalid dependency on broccoli-funnel",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/777",
        "text": "[embroider]: XState doesn't work with either embroider-safe or embroider-optimized scenarios?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/779",
        "text": "[embroider]: Use of deprecated Ember global in `compat-adapters`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/780",
        "text": "[embroider]: `ember test` fails to run tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/781",
        "text": "[embroider]: Webpack is using the Ember global in compiled templates",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/786",
        "text": "[embroider]: fail to resolve 3rd-party libs after upgrade embroider to v0.40",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/787",
        "text": "[embroider]: Can’t resolve `@ember/-internals/bootstrap` when modules polyfill is disabled",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/788",
        "text": "[embroider]: [Discussion] Does embroider do dependency pre-bundling like ViteJS does ?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/794",
        "text": "[embroider]: cannot resolve @glimmer/tracking with embroider 0.40.0 and ember-source 3.27-beta",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/798",
        "text": "[embroider]: Build error: \"don't know how to insertURL /assets/undefined\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/799",
        "text": "[embroider]: Addon tests frequently fail when running multi-process",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/805",
        "text": "[embroider]: Could not find module `ember-testing` imported from `@ember/test/index`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/806",
        "text": "[embroider]: Update test-setup instructions due to 0.40.0 breaking change",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/809",
        "text": "[embroider]: Addon tests fail with scenario ember-release (3.27+)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/811",
        "text": "[embroider]: Runtime error in production build using ember-concurrency with staticAddonTrees",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/813",
        "text": "[embroider]: Syntax error caused ember-cli to crash (maybe?)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/814",
        "text": "[embroider]: Document EMBROIDER_REBUILD_ADDONS",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/815",
        "text": "[embroider]: `{{component \"link-to\"}}` + staticComponents error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/817",
        "text": "[embroider]: Incorrect monorepo package resolution? @glimmer/syntax -> @glimmer/util, but in ember-source, except not found",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/819",
        "text": "[embroider]: `@types/loader-utils` results in type issues",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/821",
        "text": "[embroider]: 0.41.0 broke using font awesome? Cannot read property default of undefined",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/823",
        "text": "[embroider]: Could not find module ember-get-config imported from (require)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/826",
        "text": "[embroider]: Issue with @ember-data/debug/setup.js",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/827",
        "text": "[embroider]: Embroider safe tests hang for all addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/829",
        "text": "[embroider]: [Question] Tree shaking services",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/833",
        "text": "[embroider]: Tracking Issue [Test Failures]",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/834",
        "text": "[embroider]: Could not find module in in-repo addon with swiper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/835",
        "text": "[embroider]: unable to resolve babel plugin @babel/plugin-proposal-nullish-coalescing-operator",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/849",
        "text": "[embroider]: Incorrect resolve attached to `ember-source`. ModuleNotFoundError.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/850",
        "text": "[embroider]: Missing util types",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/855",
        "text": "[embroider]: $TMPDIR/embroider ->  $TMPDIR/$USER/embroider",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/857",
        "text": "[embroider]: Issue with ember-engines v0.8.5+ and ember-source < 3.24",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/867",
        "text": "[embroider]: Scenario-tester ergonomic issue",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/871",
        "text": "[embroider]: $TMPDIR/embroider/externals discussion",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/879",
        "text": "[embroider]: Freshly bootstrapped app does not run",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/883",
        "text": "[embroider]: Numeric-like strings as macro config lead to error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/884",
        "text": "[embroider]: Full compat() builds fine, but fails to run because not resolvind modules",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/885",
        "text": "[embroider]: Overwriting addon macro config not working",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/889",
        "text": "[embroider]: Bug: No TypeScript support (without ember-cli-typescript)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/891",
        "text": "[embroider]: New scenario tests running extraneous checks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/892",
        "text": "[embroider]: How is the support to Ember Engines?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/894",
        "text": "[embroider]: Local helpers not resolved in tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/898",
        "text": "[embroider]: RegExp are incorrectly parsed/evaluated when using `getOwnConfig` from `@embroider/macros` ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/901",
        "text": "[embroider]: CI Failing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/906",
        "text": "[embroider]: `@embroider/macros` uses previously cached macro condition",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/908",
        "text": "[embroider]: PreprocessCss receiving different inputs that break ember-cli-eyeglass",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/916",
        "text": "[embroider]: Can't find stylesheet to import",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/921",
        "text": "[embroider]: Passing optional component arguments through does not work",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/926",
        "text": "[embroider]: CI is broken due to beta/canary dropping the `Ember` global",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/927",
        "text": "[embroider]: Test Failures suggest potential incompatibilities with ember-cli 3.18+",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/931",
        "text": "[embroider]: How to replace `treeForPublic`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/932",
        "text": "[embroider]: ember-canary packages/utils appears to be failing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/945",
        "text": "[embroider]: Tree shaking in embroider build with `importSync` and `macroCondition` not working properly",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/946",
        "text": "[embroider]: Current incompatibly with ember-data",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/956",
        "text": "[embroider]: Component templates missing from compat build output",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/968",
        "text": "[embroider]: Production builds produce incorrect browser runtimes for fastboot assets ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/969",
        "text": "[embroider]: Addons with components/services not registered in global namespace tests fail under embroider-optimized",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/972",
        "text": "[embroider]: Watching additional file extensions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/973",
        "text": "[embroider]: Clarification on splitAtRoutes expectations?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/979",
        "text": "[embroider]: How do I enable private methods?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/983",
        "text": "[embroider]: dynamic import does not allow data:text URLs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/987",
        "text": "[embroider]: Colocated components within folders do not render",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/993",
        "text": "[embroider]: How to generate an assetMap in apps?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/999",
        "text": "[embroider]: How is it intended that we import CSS?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1001",
        "text": "[embroider]: Create addon-dev package",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1002",
        "text": "[embroider]: addon-dev needs a prepare script",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1003",
        "text": "[embroider]: addon-dev: list published files explicitly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1005",
        "text": "[embroider]: Remove command documentation from `addon-shim` package",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1007",
        "text": "[embroider]: Fix exclusion of the hbs file of the pod components when `podModulePrefix === ''`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1008",
        "text": "[embroider]: Support @ syntax in helpers",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1009",
        "text": "[embroider]: Apply compileStyles to custom treeForAddonStyles",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1010",
        "text": "[embroider]: template compilation improvements",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1011",
        "text": "[embroider]: Minor typo fix",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1012",
        "text": "[embroider]: Update sample-rollup.config.js",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1015",
        "text": "[embroider]: Address misleading warnings from rollup about externals",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1017",
        "text": "[embroider]: Ensure components + helpers can work from `this` paths with `staticComponents = true` & `staticHelpers = true`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1019",
        "text": "[embroider]: Bump ember-cli-babel to latest in util",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1021",
        "text": "[embroider]: Add `staticModifiers` option",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1023",
        "text": "[embroider]: Add nodeReslove, because otherwise, sibling files cannot be imported?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1025",
        "text": "[embroider]: [@embroider/router] update ember-auto-import to v2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1029",
        "text": "[embroider]: Don't resolve built-in components when used with the component helper",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1030",
        "text": "[embroider]: fix the ember-get-config compat adapter",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1031",
        "text": "[embroider]: Add `isTesting` and `isDevelopingApp` to readme",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1034",
        "text": "[embroider]: [DOC] Update macroCondition template helper example",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1035",
        "text": "[embroider]: Optimize ember-cli-babel handling",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1039",
        "text": "[embroider]: Reproduce issue https://github.com/embroider-build/embroider/issues/1038",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1042",
        "text": "[embroider]: Fix ember-cli-babel optimization",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1043",
        "text": "[embroider]: Make extraImports lazy",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1045",
        "text": "[embroider]: Append styles imported in JS to end of `document.head`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1048",
        "text": "[embroider]: Fix imported CSS with FastBoot",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1050",
        "text": "[embroider]: Update sample-rollup-config",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1052",
        "text": "[embroider]: restore tree caching via `cacheKeyForTree`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1053",
        "text": "[embroider]: resolve failed macro condition in ember-private-api",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1055",
        "text": "[embroider]: Accept custom `css-loader` and `style-loader` config in `@embroider/webpack`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1059",
        "text": "[embroider]: cleanup test copy-paste errors",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1064",
        "text": "[embroider]: Fix unsafe reuse of broccoli trees in OneShot",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1068",
        "text": "[embroider]: Widen the node_modules exclude pattern when copying v2 addons",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1069",
        "text": "[embroider]: Make addon-shim a non-ember-addon",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1070",
        "text": "[embroider]: Ensure `dependencySatisfies` only considers actual dependencies (includes a fix for invalid results within monorepo scenarios)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1071",
        "text": "[embroider]: Always unroll `each()` macro",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1074",
        "text": "[embroider]: Ensure `babelFilter` config comes from fully qualified `@embroider/core` path in Stage 2",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1075",
        "text": "[embroider]: native v2 addons can always import from NPM",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1076",
        "text": "[embroider]: add non-es6-compat to importSync",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1081",
        "text": "[embroider]: fix importSync scope collision",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1083",
        "text": "[embroider]: Throw error when setting non-serializable macro config",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1084",
        "text": "[embroider]: Ensure OneShot tmp dir cleanup",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1085",
        "text": "[embroider]: Updates for LTS 3.28 including ember-data",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1088",
        "text": "[embroider]: Support \"cache\" from @glimmer/tracking",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1096",
        "text": "[embroider]: Add section on package requirements to importSync documentation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1098",
        "text": "[embroider]: Improve performance of emitting stats during incremental build",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1099",
        "text": "[embroider]: Add typecsript sample rollup config + exploration of different plugins' side-effects",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1100",
        "text": "[embroider]: Fix cacheKeyForTree & OneShot incompatibility",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1102",
        "text": "[embroider]: Optimize addonCacheKey computation",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1104",
        "text": "[embroider]: [Addon Dev] allow all of rollup's OutputOptions to be passed to addon.output()",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1106",
        "text": "[embroider]: Addon Dev - Allow ts,gts,gjs files as publicEntrypoints",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1107",
        "text": "[embroider]: Creating v2 addon guide",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1109",
        "text": "[embroider]: fastboot chunk preloading fix",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1110",
        "text": "[embroider]: fix small typo in addon author guides",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1115",
        "text": "[embroider]: Use broccoli memoization by default",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1117",
        "text": "[embroider]: Revert \"Fix cacheKeyForTree & OneShot incompatibility\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1119",
        "text": "[embroider]: Reuse the `loc` of the macroMaybeAttrs hashes for the created attributes",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1120",
        "text": "[embroider]: Add support for the `helper` helper",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1122",
        "text": "[embroider]: small nitpicking edits in doc",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1124",
        "text": "[embroider]: improving ember-data compatibility & test coverage",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1126",
        "text": "[embroider]: Fix importing of template-only components in V2 addons",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1130",
        "text": "[embroider]: Only apply `ember-power-select` compat adapter when using `ember-power-select < 5.0.1`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1133",
        "text": "[embroider]: Fix typo in V2 addon local development documentation",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1135",
        "text": "[embroider]: Fix `@cached` decorator export from fake `@glimmer/tracking` module",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1137",
        "text": "[embroider]: Update `Status` section in main README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1140",
        "text": "[embroider]: Fastboot lazy css support",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1143",
        "text": "[embroider]: Update number of steps for porting addon to V2 guide",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1145",
        "text": "[embroider]: Ensure addon `app` trees are merged in the correct order",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1146",
        "text": "[embroider]: Use MiniCssExtractPlugin for FastBoot builds",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1147",
        "text": "[embroider]: ensure addon app-js trees are merged in the correct order",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1148",
        "text": "[embroider]: Fix `package.json` example in V2 porting guide",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1149",
        "text": "[embroider]: Update externals stubs atomically",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1150",
        "text": "[embroider]: Make the helper keyword handling less strict",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1151",
        "text": "[embroider]: Add support for the modifier keyword",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1152",
        "text": "[embroider]: improve test suite compat",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1154",
        "text": "[embroider]: Add `modifier` to the list of built-ins",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1155",
        "text": "[embroider]: Turn ensureSafeComponent into a no-op for class values on Ember 3.25+",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1156",
        "text": "[embroider]: fix exception in macros babel plugin",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1159",
        "text": "[embroider]: README typo: \"none-test code\"",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1161",
        "text": "[embroider]: Remove outdated core and compat options",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1164",
        "text": "[embroider]: Update `master` to `main` in links",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1168",
        "text": "[embroider]: Add message to clarify error for non-serializable configs",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1170",
        "text": "[embroider]: Ensure self-references within a dummy apps work for `@` resolution.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1171",
        "text": "[embroider]: FIX: rollup-hbs-plugin add resolveId hook",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1173",
        "text": "[embroider]: FIX Typos in CONTRIBUTING.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1177",
        "text": "[embroider]: Write files plugin",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1189",
        "text": "[embroider]: Fix thread-load JOBS handling/documentation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1190",
        "text": "[embroider]: Fix thread-load JOBS handling/documentation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1191",
        "text": "[embroider]: Fix thread-load JOBS handling/documentation",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1194",
        "text": "[embroider]: Align webpack's outputPath with the whole app",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1199",
        "text": "[embroider]: Add babel plugin for preprocessing templates with ast transforms",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1201",
        "text": "[embroider]: Small Update PORTING-ADDONS-TO-V2.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1202",
        "text": "[embroider]: Accept optional `mapFilename` config for `rollup-app-reexports`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1205",
        "text": "[embroider]: Fix preprocessors tree by wrapping with moduleName",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1209",
        "text": "[embroider]: fix default css chunk naming",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1210",
        "text": "[embroider]: fastboot should not try to load through publicAssetURL",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1213",
        "text": "[embroider]: Prevent redundant toTree wrapping for macros",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1214",
        "text": "[embroider]: fix: reset HTMLEntrypoint state after build (fix #1211)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1215",
        "text": "[embroider]: Strip extension from reexport of `rollup-app-reexports`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1219",
        "text": "[embroider]: Fix duplicate HTML content on rebuilds",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1223",
        "text": "[embroider]: Stabilize extensions for addon-dev's publicEntrypoints.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1224",
        "text": "[embroider]: Don't apply the `ember-get-config` compat adapter when >= v2.1.0",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1225",
        "text": "[embroider]: docs: Add lazy loaded engines EmbroiderRouter details to README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1227",
        "text": "[embroider]: add-dev: HBS files were not watched for rebuilds",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1229",
        "text": "[embroider]: Run the `clean` plugin of `addon-dev` as late as possible",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1230",
        "text": "[embroider]: Detect addons with customized treeForMethod names",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1231",
        "text": "[embroider]: Followup to \"Detect addons with customized treeForMethod names\"",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1233",
        "text": "[embroider]: Default hoistTransitiveImports to false",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1234",
        "text": "[embroider]: Add sourcemap: true to rollup output defaults",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1236",
        "text": "[embroider]: Support TypeScript without ember-cli-typescript",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1238",
        "text": "[embroider]: Upgrade yarn and use volta.extends for all the things",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1239",
        "text": "[embroider]: add unique-id to builtInHelpers list",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1241",
        "text": "[embroider]: add unique-id to builtInHelpers list",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1244",
        "text": "[embroider]: Do not include absolute path into the vendor files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1245",
        "text": "[embroider]: Do not use absolute path in vendor files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1246",
        "text": "[embroider]: Dropping support for older ember's",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1247",
        "text": "[embroider]: fix a rebuild crash in dummy apps on windows",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1248",
        "text": "[embroider]: Use consistent separator on windows",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1250",
        "text": "[embroider]: upgrading some github actions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1252",
        "text": "[embroider]: extend existing EmberENV for ember-inspector",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1256",
        "text": "[embroider]: Fix an order bug in linkNonCopiedDeps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1259",
        "text": "[embroider]: Setup Changeset",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1260",
        "text": "[embroider]: Update changset for test-setup",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1265",
        "text": "[embroider]: add inter-package version safety check",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1267",
        "text": "[embroider]: add @babel/core to app templates",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1270",
        "text": "[embroider]: remove forced optional-chaining and nullish-coalescing-operator babel plugins",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1271",
        "text": "[embroider]: drop vendored template compiler",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1273",
        "text": "[embroider]: Don't generate .js component stubs for .ts components",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1277",
        "text": "[embroider]: defend against infinite loop on broken babel config",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1278",
        "text": "[embroider]: allow v2 addons to use app tree fallback resolution",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1281",
        "text": "[embroider]: enable ember-engine tests for 4.x versions as support has landed",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1282",
        "text": "[embroider]: Addon-shim was missing dependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1283",
        "text": "[embroider]: add some steps to show how to work with tests scenarios",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1285",
        "text": "[embroider]: handle special case where rootURL is empty string",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1288",
        "text": "[embroider]: Drop unused optional peer",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1289",
        "text": "[embroider]: compat is supposed to access shared-internals through core",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1291",
        "text": "[embroider]: Porting @embroider/router to v2 addon format",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1292",
        "text": "[embroider]: CI needs to check types in our typescript-app scenario",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1294",
        "text": "[embroider]: Update compat to check for both `*.hbs` & `*.hbs.js`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1295",
        "text": "[embroider]: Update compat to check for both *.hbs & *.hbs.js",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1298",
        "text": "[embroider]: removing old unused test dependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1299",
        "text": "[embroider]: Detect babel-plugin-ember-template-complation when other plugins are …",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1301",
        "text": "[embroider]: Make `ensureSafeComponent` usable with Glint",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1302",
        "text": "[embroider]: for embroider server running on windows, index.js can be ejected from …",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1307",
        "text": "[embroider]: add .hbs.js to the list of resolvable extensions by webpack",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1308",
        "text": "[embroider]: Resolver transform fixes",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1310",
        "text": "[embroider]: fix type errors due to upstream changes",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1313",
        "text": "[embroider]: Update for upstream type changes",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1314",
        "text": "[embroider]: Try to avoid rate limits in CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1317",
        "text": "[embroider]: fix css livereload",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1318",
        "text": "[embroider]: hash current env into the temp workspace dir path",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1321",
        "text": "[embroider]: Upgrade resolver tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1327",
        "text": "[embroider]: Fix Nested V2 Addons",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1328",
        "text": "[embroider]: test-setup: use caret version modifier for Embroider dependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1331",
        "text": "[embroider]: Move resolving into dedicated plugins",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1334",
        "text": "[embroider]: Allow `ember-cli-babel` >= v8 for apps and addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1335",
        "text": "[embroider]: workaround upstream node breakage",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1339",
        "text": "[embroider]: Layer template resolver on top of module resolver",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1340",
        "text": "[embroider]: Static helpers and static modifiers transform fixes",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1342",
        "text": "[embroider]: restore original ts extension priority",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1343",
        "text": "[embroider]: Fix `@babel/core` version check to support `ember-cli-babel` v8",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1346",
        "text": "[embroider]: Bugfix: inconsistent handling of webpack virtual modules",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1347",
        "text": "[embroider]: fix resolver bugs around package rules",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1348",
        "text": "[embroider]: Move docs into a docs folder",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1349",
        "text": "[embroider]: Add a document about pnpm monorepo error",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1352",
        "text": "[embroider]: reinstate logic around parsing of invokes packageRules",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1354",
        "text": "[embroider]: Add glint helper types for more macros",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1355",
        "text": "[embroider]: Refactor self-resolution",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1359",
        "text": "[embroider]: Ignore resolve requests that start with !",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1360",
        "text": "[embroider]: Backfill Changelog Entries per-PR",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1361",
        "text": "[embroider]: Enter unstable prerelease mode",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1362",
        "text": "[embroider]: clarify which package rules apply inside vs outside a component",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1363",
        "text": "[embroider]: Simplified template resolution",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1365",
        "text": "[embroider]: Prevent HTML-escaping of module specifiers",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1367",
        "text": "[embroider]: Improve types of `ensure-safe-component` helper",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1368",
        "text": "[embroider]: Add support for keeping public assets and ember-addon.public-assets meta in sync",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1369",
        "text": "[embroider]: Add semverRange <=4.11.0 for ember-data",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1372",
        "text": "[embroider]: restore component invokes rules support",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1373",
        "text": "[embroider]: app tree resolving",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1376",
        "text": "[embroider]: legacy addon resolving",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1379",
        "text": "[embroider]: don't confuse webpack requests with packageNames",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1381",
        "text": "[embroider]: add tests for helper name collisions with html elements or js keywords",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1383",
        "text": "[embroider]: Rename strict flag to strictMode",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1384",
        "text": "[embroider]: Include prettier and .editorconfig settings in C.I.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1386",
        "text": "[embroider]: Fix `Maximum call stack size exceeded` error",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1391",
        "text": "[embroider]: only rehome a request if it would resolve in a different package",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1394",
        "text": "[embroider]: Add @ember/owner to emberVirtualPackages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1396",
        "text": "[embroider]: Add @ember/owner to emberVirtualPackages",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1403",
        "text": "[embroider]: Remove deprecated dependency @types/source-map",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1412",
        "text": "[embroider]: WriteV1Config: fix /tests support",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1413",
        "text": "[embroider]: Fix @embroider/addon-dev keepAssets resolve priority",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1414",
        "text": "[embroider]: Adjust macros and util types",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1415",
        "text": "[embroider]: fix casing in docs links",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1416",
        "text": "[embroider]: Upgrade changeset-recover to support label-based changelog management",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1419",
        "text": "[embroider]: Test against ember preview types",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1423",
        "text": "[embroider]: Do not write package.json when there are no changes (affects `addon.appReexports()` and `addon.publicAssets()`)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1424",
        "text": "[embroider]: Fix CI by upgrading ts-node",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1427",
        "text": "[embroider]: Use optional peer deps in @embroider/test-setup",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1428",
        "text": "[embroider]: Add compat adapter for @ember/test-waiters",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1429",
        "text": "[embroider]: Ember 5 compat",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1435",
        "text": "[embroider]: Eliminate node_modules rewriting",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1436",
        "text": "[embroider]: prevent double ^ when using embroider test-setup",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1438",
        "text": "[embroider]: Prepare a release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1443",
        "text": "[embroider]: linkto routable engine path in host app",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1446",
        "text": "[embroider]: Revert \"Run the clean plugin of addon-dev as late as possible\"",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1447",
        "text": "[embroider]: fix keepAssets corrupting image files",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1448",
        "text": "[embroider]: Add the ability to customise rollup-plugin-clean's config",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1449",
        "text": "[embroider]: [bugfix] Set output.experimentalMinChunkSize to 0, to counter a change in rollup@3.22.0",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1450",
        "text": "[embroider]: [bugfix] Ensured that normalizeFileExt ignores .css.d.ts files",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1451",
        "text": "[embroider]: Use `typeof` in `EmbroiderUtilRegistry`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1458",
        "text": "[embroider]: Add compatible Ember version to README.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1460",
        "text": "[embroider]: expanding EmptyPackage contents",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1461",
        "text": "[embroider]: release prep",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1463",
        "text": "[embroider]: fix resolution of files with .hbs extensions",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1468",
        "text": "[embroider]: macroCondition: do branch elimination if no runtime impl. is involved",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1470",
        "text": "[embroider]: Prepping release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1474",
        "text": "[embroider]: cache bust index html on arbitrary dom changes",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1478",
        "text": "[embroider]: Don't over-serialize options into `resolver.json`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1481",
        "text": "[embroider]: Properly serialize options",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1484",
        "text": "[embroider]: preparing release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1488",
        "text": "[embroider]: fix this.import from node_modules in v1 addons",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1490",
        "text": "[embroider]: preparing patch 3.1.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1493",
        "text": "[embroider]: Fix rewritten-package-cache when app has symlink to node_modules",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1495",
        "text": "[embroider]: Eagerly virtualize emberVirtualPackages",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1497",
        "text": "[embroider]: preparing release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1499",
        "text": "[embroider]: add staticAddonServices:false default option to control if addon serv…",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1503",
        "text": "[embroider]: less aggressive realpathSync",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1504",
        "text": "[embroider]: fix inter-package relative imports in addon's app-js",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1505",
        "text": "[embroider]: release prep",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1507",
        "text": "[embroider]: fix(macros-readme): fix isTesting, isDevelopingApp typos",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1509",
        "text": "[embroider]: All addons may need emberVirtualPeerDep handling",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1513",
        "text": "[embroider]: Add `@glimmer/reference` as a virtual package",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1516",
        "text": "[embroider]: Move @embroider/macros from emberVirtualPackages to emberVirtualPeerDeps",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1517",
        "text": "[embroider]: improve templates moduleName",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1518",
        "text": "[embroider]: add a basic implementation of the gjs rollup plugin",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1519",
        "text": "[embroider]: pinning babel to avoid upstream bug",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1520",
        "text": "[embroider]: use transform babel plugins instead of proposal",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1521",
        "text": "[embroider]: New option: staticEmberSource",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1524",
        "text": "[embroider]: Fix the `EMBROIDER_CONCAT_STATS` build error",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1528",
        "text": "[embroider]: Restore older node support",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1529",
        "text": "[embroider]: Preparing release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1531",
        "text": "[embroider]: Include named exports in CJS shims when using `importSync`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1534",
        "text": "[embroider]: Fixes case when podModulePrefix is set to `my-app/routes`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1536",
        "text": "[embroider]: Generate per-package implicit-modules imports",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1541",
        "text": "[embroider]: Create peer-dependency-resolution-issues.md",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1542",
        "text": "[embroider]: Refuse to accept v1 addons as invalid peerDeps",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1543",
        "text": "[embroider]: compat adapter to add re-export observer-manager service",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1544",
        "text": "[embroider]: Bugfix: contextual staticHelpers in subexpression position",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1547",
        "text": "[embroider]: Rehome moved requests to real on-disk files",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1548",
        "text": "[embroider]: optional ES-module compatibility setting",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1550",
        "text": "[embroider]: Initial test of vite integration",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1556",
        "text": "[embroider]: support packages that use modules",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1558",
        "text": "[embroider]: Simplification of gjs and hbs handling in addon-dev",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1559",
        "text": "[embroider]: Fix link to `dependenciesMeta.*.injected`",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1560",
        "text": "[embroider]: Fix rewritten package cache encapsulation",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1563",
        "text": "[embroider]: Add semverRange <=4.11.0 for ember-data debug",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1566",
        "text": "[embroider]: preparing a release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1568",
        "text": "[embroider]: plan release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1577",
        "text": "[embroider]: Add Embroider Initiative sponsors to the readme",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1578",
        "text": "[embroider]: Update babel-loader to 9",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1580",
        "text": "[embroider]: stop ember-composable-helpers searching for babel configs",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1582",
        "text": "[embroider]: ember-source compat adapter should not use an app-provided babel config if one is present",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1587",
        "text": "[embroider]: Add a v2 addon \"nested layout\" component test",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1588",
        "text": "[embroider]: Update macros README with v2 addon instructions",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1593",
        "text": "[embroider]: [draft] Add strict mode to app scenarios",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1597",
        "text": "[embroider]: Fix HTML content failing to update",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1600",
        "text": "[embroider]: Fix relative import path of assets for non-entrypoint modules",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1603",
        "text": "[embroider]: Add some action items to the peer errors when node_modules is messed up",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1604",
        "text": "[embroider]: add staticEmberSource to the readme example",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1605",
        "text": "[embroider]: Ensure custom HTML attributes are passed-through",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1607",
        "text": "[embroider]: Add v2 addon FAQs",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1608",
        "text": "[embroider]: performance: cache realpathSync access in package-cache.get",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1609",
        "text": "[embroider]: Fix WrappedPackage caching for app",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1611",
        "text": "[embroider]: performance: avoid paying decodeFastbootSwitch regex cost unless needed",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1612",
        "text": "[embroider]: performance: cache existsSync results in PackageCache.ownerOfFile",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1613",
        "text": "[embroider]: More v2 addon FAQs",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1616",
        "text": "[embroider]: prepare release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1617",
        "text": "[embroider]: Docs: refine `v2-faq.md` and fix a few typos",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1620",
        "text": "[embroider]: Fix synthesized template-only components crash",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1622",
        "text": "[embroider]: use realpath of engine's route when building resolver.json",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1623",
        "text": "[embroider]: Implement the optimizeDeps() helper",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1628",
        "text": "[embroider]: prepare a release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1630",
        "text": "[embroider]: Bump minimum content-tag version.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1632",
        "text": "[embroider]: Fix co-located components regressions",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1633",
        "text": "[embroider]: Perf: cache macros lockfile lookup and read operations",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1640",
        "text": "[embroider]: Support route templates in addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1641",
        "text": "[embroider]: Allow to pass additional config to addonV1Shim",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1642",
        "text": "[embroider]: Allow for more flexible addon-dev appReexports",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1644",
        "text": "[embroider]: Perf: Only require.resolve the babel plugin cache busting file once",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1646",
        "text": "[embroider]: docs: fix typo of publicAssetURL",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1648",
        "text": "[embroider]: use package paths instead of relative paths for app tree resolving",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1650",
        "text": "[embroider]: Add Esbuild resolver",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1652",
        "text": "[embroider]: create new @embroider/reverse-exports package",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1653",
        "text": "[embroider]: Refactor embroider-implicit-modules export pojo",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1655",
        "text": "[embroider]: fix node version for @embroider/util",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1661",
        "text": "[embroider]: Fix html clearing on rebuild",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1664",
        "text": "[embroider]: reorder extension precedence when searching app-js and fastboot-js trees",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1670",
        "text": "[embroider]: Fix looping for unchanged files",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1671",
        "text": "[embroider]: Prepare a release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1673",
        "text": "[embroider]: allow apps to disable the decorator transforms",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1676",
        "text": "[embroider]: fix single asterisk replacement in reverse-exports",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1677",
        "text": "[embroider]: Support postcss-loader through postcssLoaderOptions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1679",
        "text": "[embroider]: [vite entry point] add gjs + gts extension for resolvable extensions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1680",
        "text": "[embroider]: [vite] use transform instead of load for gjs & hbs files",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1684",
        "text": "[embroider]: Workaround typescript regression in router package",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1686",
        "text": "[embroider]: Resolver bugfixes",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1688",
        "text": "[embroider]: Fix branch elimination for `macroDependencySatisfies`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1692",
        "text": "[embroider]: force importSync to always be eager",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1693",
        "text": "[embroider]: Add broccoli-side-watch package",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1695",
        "text": "[embroider]: vite dev/test/build from app",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1696",
        "text": "[embroider]: Use rollup's `addWatchFile` API to mark dependencies",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1702",
        "text": "[embroider]: reduce duplication in resolver config",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1704",
        "text": "[embroider]: add correct extensions to optimizeDeps() config",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1706",
        "text": "[embroider]: Support engine's lazyLoading boolean config",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1707",
        "text": "[embroider]: improved resolver logging",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1710",
        "text": "[embroider]: Merge stable into main",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1713",
        "text": "[embroider]: esbuild: fix babel config location",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1717",
        "text": "[embroider]: Always load ember-testing package eagerly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1727",
        "text": "[embroider]: use meta tag to set global EmberENV",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1729",
        "text": "[embroider]: remove missing import from vite index",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1731",
        "text": "[embroider]: Vite fixes",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1735",
        "text": "[embroider]: docs: Update addon-author-guide.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1736",
        "text": "[embroider]: vite find assets & build copy assets",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1738",
        "text": "[embroider]: fix vite on windows",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1739",
        "text": "[embroider]: support ts, gts and gjs in vite",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1743",
        "text": "[embroider]: Don't rely on htmlbars internals",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1744",
        "text": "[embroider]: control ember build through vite",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1756",
        "text": "[embroider]: Allow route templates to be used in v2 addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1758",
        "text": "[embroider]: Make template-colocation-plugin idempotent",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1760",
        "text": "[embroider]: Add exclude option to appReexports and publicEntrypoints rollup plugins",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1762",
        "text": "[embroider]: Fix incorrect ownerOfFile at root of filesystem",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1763",
        "text": "[embroider]: Add new watches API",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1765",
        "text": "[embroider]: Docs(addon-author-guide)/ remove the out-of-date part about alternative to monorepos",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1768",
        "text": "[embroider]: docs(porting addons to v2): change the recommended package manager to pnpm",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1772",
        "text": "[embroider]: Docs porting addons to v2 co location",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1775",
        "text": "[embroider]: Docs(peer deps resolution issues): mentions pnpm-dedupe and add links",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1777",
        "text": "[embroider]: Backport #1642 to stable:  Allow for more flexible addon-dev appReexports",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1784",
        "text": "[embroider]: Bump content-tag and add inline_source_map option for rollup and vite",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1785",
        "text": "[embroider]: Backport #1760 to stable: Add exclude option to appReexports and publicEntrypoints rollup plugins",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1786",
        "text": "[embroider]: Bump content-tag and add inline_source_map option for rollup and vite",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1787",
        "text": "[embroider]: Fix source map option not being passed to plugin",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1788",
        "text": "[embroider]: Fix source map option not being passed to plugin",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1790",
        "text": "[embroider]: Update @embroider/macros README.md real-world examples",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1791",
        "text": "[embroider]: docs(porting-addons-to-v2): Explain no-unpublished-required issue",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1794",
        "text": "[embroider]: Refactor the resolve function to be the only public api to module-resolver",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1795",
        "text": "[embroider]: fix vite build",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1801",
        "text": "[embroider]: Module resolver: virtualize vendor.js",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1802",
        "text": "[embroider]: fix vite auto reload on windows",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1805",
        "text": "[embroider]: Module resolver: virtualize vendor.css",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1807",
        "text": "[embroider]: Module resolver: virtualize test-support.js",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1808",
        "text": "[embroider]: fix vite ts",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1810",
        "text": "[embroider]: fix: component template candidates should only resolve hbs files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1811",
        "text": "[embroider]: Module Resolver: Virtual test-support.css",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1813",
        "text": "[embroider]: vite: fix hbs loading for virtual pair components",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1815",
        "text": "[embroider]: Make macro configs static",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1816",
        "text": "[embroider]: Remove silent option from ember build in compatPrebuild",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1819",
        "text": "[embroider]: Add a new prebuild function with strict defaults",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1823",
        "text": "[embroider]: Make macro configs static",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1827",
        "text": "[embroider]: fix extension resolving for esbuild",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1832",
        "text": "[embroider]: Update to `ember-cli-babel` v8",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1834",
        "text": "[embroider]: add vite@5 to the peer deps of @embroider/vite",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1836",
        "text": "[embroider]: Replace content-for using a Vite plugin",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1837",
        "text": "[embroider]: merge default options and the prebuild options provided in ember-cli-build",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1838",
        "text": "[embroider]: make sure @embroider/macros doesn't try to load a babel config",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1845",
        "text": "[embroider]: support import sync with dynamic expression",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1846",
        "text": "[embroider]: Prevent query-params added by vite to be passed to core logic",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1852",
        "text": "[embroider]: vite fix hbs loader for v1 addons",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1853",
        "text": "[embroider]: add vite compat styles resolver",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1856",
        "text": "[embroider]: Compile Hbs route templates correctly",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1858",
        "text": "[embroider]: Add support for `{{unless}}` to the `macroCondition` macro",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1863",
        "text": "[embroider]: add isLazy to resolver config and streamline Engine interface",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1867",
        "text": "[embroider]: add a namespace option for public-assets plugin",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1868",
        "text": "[embroider]: Adjusting `@embroider/webpack` to use `@babel/preset-env` to avoid critical security audit",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1874",
        "text": "[embroider]: with namespace in publicAssets don't include path",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1884",
        "text": "[embroider]: don't use babel-plugin-module-resolver@5.0.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1885",
        "text": "[embroider]: Fix pre support in portable babel launcher",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/387",
        "text": "[embroider]: special-case \"template.hbs\" as a forbidden template-only component",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/388",
        "text": "[embroider]: ember-cli 3.16 compatibility",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/390",
        "text": "[embroider]: Use our own dynamic import implementation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/393",
        "text": "[embroider]: minor cleanup",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/394",
        "text": "[embroider]: progress on engines",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/398",
        "text": "[embroider]: More macros system implementation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/399",
        "text": "[embroider]: Finish porting qunit to jest",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/400",
        "text": "[embroider]: babel upgrade",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/401",
        "text": "[embroider]: Template resolver for addons in stage 1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/404",
        "text": "[embroider]: Update Handlebars Macros according to RFC",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/415",
        "text": "[embroider]: [WIP] Standardize addon ordering",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/416",
        "text": "[embroider]: Add missing `moduleExists` run-time macro export + exports tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/417",
        "text": "[embroider]: Fix macroCondition when if-param is a subexpression",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/418",
        "text": "[embroider]: [WIP] Ensure correct addon ordering by introducing orderIdx",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/419",
        "text": "[embroider]: support nullish coalescing inside macroCondition",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/420",
        "text": "[embroider]: Refactoring stage-2 tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/421",
        "text": "[embroider]: provide the `runningTests` variable",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/423",
        "text": "[embroider]: Add info about disabling webpack bundle analyzer result browser",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/424",
        "text": "[embroider]: [wip] Update to node 12 and all other packages to latest",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/425",
        "text": "[embroider]: Move to github actions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/426",
        "text": "[embroider]: Fixing README badge",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/427",
        "text": "[embroider]: Run on pull requests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/429",
        "text": "[embroider]: Support in-repo addons within other addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/431",
        "text": "[embroider]: Enable tests to run from the browser with ember s command",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/432",
        "text": "[embroider]: Engines compatibility",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/433",
        "text": "[embroider]: Node 12",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/434",
        "text": "[embroider]: Lazy loading engine JS",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/435",
        "text": "[embroider]: Lazy loading engine CSS",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/440",
        "text": "[embroider]: Enable embroider's router to be backwards compatible with ember-engines",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/441",
        "text": "[embroider]: Add support for namespaced (aka index.{hbs,js,ts}) components",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/443",
        "text": "[embroider]: addon rebuild improvements",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/444",
        "text": "[embroider]: Support addons with fastboot-only trees",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/445",
        "text": "[embroider]: Support nested in-repo addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/447",
        "text": "[embroider]: Refactored in-repo-addon support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/451",
        "text": "[embroider]: Addons can return undefined from treeForFastboot",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/452",
        "text": "[embroider]: transpile syntax that webpack doesn't support yet",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/454",
        "text": "[embroider]: Invalidate in-repo-addons based on ember-cli's logic",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/455",
        "text": "[embroider]: Add data-fastboot-ignore for scripts we are not aware of",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/457",
        "text": "[embroider]: updates to match the new v5 fastboot schema",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/458",
        "text": "[embroider]: fix spurious testem error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/460",
        "text": "[embroider]: preload webpack's lazy chunks in fastboot",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/461",
        "text": "[embroider]: make engine configs fastboot-friendly",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/462",
        "text": "[embroider]: [wip] workaround for outputReady path",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/464",
        "text": "[embroider]: make sure every package has pinned node version",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/465",
        "text": "[embroider]: Build variants",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/466",
        "text": "[embroider]: update babel preset-env and ember-cli-babel",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/469",
        "text": "[embroider]: remove addon package publishing warning",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/472",
        "text": "[embroider]: Identify component in snippet rule when ast type is \"Template\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/475",
        "text": "[embroider]: fix renamed-modules when used with languages that transpile to js",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/477",
        "text": "[embroider]: Use volta extends for monorepo support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/478",
        "text": "[embroider]: moduleName must include the extension in precompile options",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/483",
        "text": "[embroider]: Prepend addon's babel plugin and presets to fix ordering issue",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/485",
        "text": "[embroider]: more robust customized tree detection",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/486",
        "text": "[embroider]: allow custom treeForAddonStyles",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/492",
        "text": "[embroider]: Remove compat adapter for ember-window-mock",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/493",
        "text": "[embroider]: working on adding isTesting and isDeveloping macros",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/494",
        "text": "[embroider]: WIP: App import + using + outputFile",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/499",
        "text": "[embroider]: fix stock tree detection in addons with customized main",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/502",
        "text": "[embroider]: avoid interactions with patched require",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/503",
        "text": "[embroider]: expose macros babel install",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/505",
        "text": "[embroider]: patch bug in template-compiler",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/506",
        "text": "[embroider]: Add in-element to built-in helpers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/507",
        "text": "[embroider]: Use runtime loader for tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/508",
        "text": "[embroider]: failing test: Build error if project depends on an addon that depends on another addon which uses @embroider/macros",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/511",
        "text": "[embroider]: Use renamed package for the template meta moduleName",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/512",
        "text": "[embroider]: Use renamed-packages for module name definitions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/513",
        "text": "[embroider]: Add ember-exam compat adapter",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/514",
        "text": "[embroider]: support {{component \"x\"}} snippet",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/521",
        "text": "[embroider]: Support static apps using @embroider/macros",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/523",
        "text": "[embroider]: Avoid duplicate macros plugin",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/524",
        "text": "[embroider]: package.json: Add missing `repository` fields",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/525",
        "text": "[embroider]: avoid duplicating nullish-coalescing and optional-chaining plugins",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/526",
        "text": "[embroider]: Fix broken style-loader dependency",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/529",
        "text": "[embroider]: Fix for addons using ember-cli-typescript 4x",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/531",
        "text": "[embroider]: Avoid `Testem.hookIntoTestFramework` unless `QUnit` or `Mocha` are defined.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/534",
        "text": "[embroider]: Update TypeScript to latest 4.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/535",
        "text": "[embroider]: Update ESLint dependencies and rules",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/536",
        "text": "[embroider]: Add compatibility for ember-element-helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/538",
        "text": "[embroider]: fix: check if addon has enableTypeScriptTransform set",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/540",
        "text": "[embroider]: Fix loader.js issue by disabling makeDefaultExport option",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/541",
        "text": "[embroider]: Rebuild the addon that owns a dummy app",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/546",
        "text": "[embroider]: Handle case where peerDep is unresolvable",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/547",
        "text": "[embroider]: Handle dynamic import or importSync of missing module",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/549",
        "text": "[embroider]: saving a helpful debug utility",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/550",
        "text": "[embroider]: Add ember-try changes to addon author guide",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/551",
        "text": "[embroider]: taking updates to babel",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/552",
        "text": "[embroider]: fix self import in treeForApp",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/553",
        "text": "[embroider]: don't include d.ts files when crawling the app tree",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/554",
        "text": "[embroider]: Update @embroider/macros examples in the readme",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/555",
        "text": "[embroider]: Add compatAdapter for ember-cli-addon-docs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/556",
        "text": "[embroider]: updating linters to get some newer typescript syntax support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/557",
        "text": "[embroider]: adding test-setup package",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/560",
        "text": "[embroider]: Fix runtime getConfig",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/564",
        "text": "[embroider]: allow forcing of embroider or classic from test setup",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/565",
        "text": "[embroider]: guard against stringly broccoli trees",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/566",
        "text": "[embroider]: adding support for addons that use treeFor() to suppress various trees",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/570",
        "text": "[embroider]: Use the namespace over the default for extra imports",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/571",
        "text": "[embroider]: ensureSafeComponent helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/572",
        "text": "[embroider]: Support direct _super call in treeFor hook",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/573",
        "text": "[embroider]: Add Fastboot smoke tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/574",
        "text": "[embroider]: Fix missing hostWhitelist in FastBoot's package.json manifest",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/575",
        "text": "[embroider]: Test suite cleanup",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/576",
        "text": "[embroider]: Timestamp changelog",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/579",
        "text": "[embroider]: Update Babel related dependencies.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/580",
        "text": "[embroider]: Remove babel-core dependency from @embroider/compat.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/581",
        "text": "[embroider]: Update to jsdom@16",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/582",
        "text": "[embroider]: Explicitly declare Node version support: 10, 12, 14+.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/583",
        "text": "[embroider]: Update to released version of fixturify-project.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/584",
        "text": "[embroider]: Fix issues with dependencySatisifies with prereleases.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/586",
        "text": "[embroider]: [WIP] Allow staticOptions via packageRules",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/587",
        "text": "[embroider]: Pin dependencies added through @embroider/test-setup",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/588",
        "text": "[embroider]: Passthrough HTML attributes",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/590",
        "text": "[embroider]: audit command",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/591",
        "text": "[embroider]: Support CSS from lazy engines",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/593",
        "text": "[embroider]: support component helper invocation with an @ in the name",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/594",
        "text": "[embroider]: fix unnecessary inclusion of co-located templates",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/597",
        "text": "[embroider]: Continuing to extend and improve audit",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/598",
        "text": "[embroider]: Add types for @embroider/router",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/600",
        "text": "[embroider]: fix snippet resolving",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/601",
        "text": "[embroider]: introducing new `invokes` rule for components",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/604",
        "text": "[embroider]: Renaming addon package to util",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/605",
        "text": "[embroider]: Support pods layout for route-based code splitting",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/606",
        "text": "[embroider]: adding test coverage for route splitting",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/607",
        "text": "[embroider]: fix caching bug",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/608",
        "text": "[embroider]: trust ensure-safe-component",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/610",
        "text": "[embroider]: allow files in app tree to resolve both app and addon deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/611",
        "text": "[embroider]: update addon author guide",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/614",
        "text": "[embroider]: adding @babel/plugin-transform-runtime by default",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/615",
        "text": "[embroider]: updating usage of private API for canary compat",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/617",
        "text": "[embroider]: fixing a regression with ast transforms",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/618",
        "text": "[embroider]: allow REUSE_WORKSPACE with in repo addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/619",
        "text": "[embroider]: Adding CSSO for css minification",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/620",
        "text": "[embroider]: follow upstream ember change as it enters beta",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/621",
        "text": "[embroider]: Fingerprint scripts and styles in production",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/623",
        "text": "[embroider]: adding test coverage for ensure-safe-component stability",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/624",
        "text": "[embroider]: Fix ensureSafeComponent to not reuse registered component across owners",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/625",
        "text": "[embroider]: Switching to broccoli-node-api types",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/628",
        "text": "[embroider]: Refactor plugin portability",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/629",
        "text": "[embroider]: adding pluginHints to help with babel parallelization",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/630",
        "text": "[embroider]: make it easier to resolve pluginHints",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/631",
        "text": "[embroider]: allowUnsafeDynamicComponents flag",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/632",
        "text": "[embroider]: eslint update",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/633",
        "text": "[embroider]: add types for @embroider/util",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/634",
        "text": "[embroider]: apply rules to colocated templates",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/635",
        "text": "[embroider]: move node-only types out of macros default entrypoint",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/636",
        "text": "[embroider]: Adding rules for some common deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/637",
        "text": "[embroider]: new staticAppPaths options",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/638",
        "text": "[embroider]: we depend on the upstream router types",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/639",
        "text": "[embroider]: Handle disabled in-repo addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/645",
        "text": "[embroider]: Conditionally import lazy engine css",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/647",
        "text": "[embroider]: some dep upgrades",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/652",
        "text": "[embroider]: webpack 5",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/653",
        "text": "[embroider]: allow publicAssetURL to differ from rootURL",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/655",
        "text": "[embroider]: update for compat with latest canary",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/656",
        "text": "[embroider]: split hbs-loader into its own package",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/657",
        "text": "[embroider]: updating to follow canary",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/658",
        "text": "[embroider]: implement insertRuntimeErrors option for inline hbs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/659",
        "text": "[embroider]: Fix disabled or blacklisted in-repo addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/663",
        "text": "[embroider]: Do not try to import package.json files that do not exist",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/666",
        "text": "[embroider]: Update to Terser@5.5.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/669",
        "text": "[embroider]: Add `this` param to `ensureSafeComponent` import example",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/670",
        "text": "[embroider]: bugfixes for production webpack-handled css",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/674",
        "text": "[embroider]: adjust paths seen by css preprocessors",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/686",
        "text": "[embroider]: Prevent accidental duplication of babel plugin during rebuilds",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/687",
        "text": "[embroider]: Strip `main` field from v1 addons' `package.json` once they are rewritten as V2",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/690",
        "text": "[embroider]: Exclude 'babel-plugin-compact-reexports' during Stage 1 build",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/694",
        "text": "[embroider]: Run importSync transform later, so ember-auto-import can support importSync",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/696",
        "text": "[embroider]: Resolve the template compiler from ember-source instead of project root",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/700",
        "text": "[embroider]: TemplateCompiler fixes / improvements (avoid monkey patch for Ember 3.27+)",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/702",
        "text": "[embroider]: Handle case where node_modules are symlinked",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/705",
        "text": "[embroider]: Avoid patching the template compiler on Ember 3.26.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/709",
        "text": "[embroider]: Fix the path to the on-disk styles file for in-repo engines",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/710",
        "text": "[embroider]: Fix case where `autoRun` is `false` but no other addon set content into the `{{content-for 'app-boot'}}`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/712",
        "text": "[embroider]: Allow macroCondition inside modifier",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/713",
        "text": "[embroider]: Avoid monkey patching template compiler for 3.24.3 and 3.25.2+.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/715",
        "text": "[embroider]: support EMBROIDER_REBUILD_ADDONS for pure v2 addons",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/716",
        "text": "[embroider]: Add documentation about publicAssetURL to README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/720",
        "text": "[embroider]: Improve error message when module cannot be found in webpack",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/721",
        "text": "[embroider]: easier stage2-only config",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/726",
        "text": "[embroider]: Respect fingerprinting options during stage 3",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/728",
        "text": "[embroider]: Remove 'peerDependencies' from 'dependencyKeys' to align with ember-cli",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/732",
        "text": "[embroider]: v2 addon shim",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/734",
        "text": "[embroider]: Do not try to insert source maps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/735",
        "text": "[embroider]: fixing a typo in peerDep range in hbs-loader",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/736",
        "text": "[embroider]: silence warning about babel formatting while patching template compiler",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/737",
        "text": "[embroider]: reduce deps in macros and util packages",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/740",
        "text": "[embroider]: Use \"real modules\" for ember-source when possible (3.27+)",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/741",
        "text": "[embroider]: Work on reducing deprecations in Ember 3.27+",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/742",
        "text": "[embroider]: Improving Windows support",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/747",
        "text": "[embroider]: Add better support for skipping Stage 1 transforms that are not needed",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/748",
        "text": "[embroider]: Supporting more build environments",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/749",
        "text": "[embroider]: exposing some features for browser-based build tools",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/751",
        "text": "[embroider]: Fix node 10 support",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/753",
        "text": "[embroider]: Readme: Add splitAtRoutes to options",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/754",
        "text": "[embroider]: compatibility with ember-cli-htmlbars serialization",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/759",
        "text": "[embroider]: Add Prototype Vite Packager",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/762",
        "text": "[embroider]: Dep upgrade",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/763",
        "text": "[embroider]: Add Compat Adapter for `@html-next/vertical-collection`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/766",
        "text": "[embroider]: Update to broccoli-funnel@3.0.5",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/770",
        "text": "[embroider]: Add compat adapter for `ember-get-config`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/772",
        "text": "[embroider]: Allow compat adapter's to expose shouldApplyAdapter",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/773",
        "text": "[embroider]: Updates to addon shim",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/782",
        "text": "[embroider]: docs: for setting publicAssetUrl in non-production environments",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/784",
        "text": "[embroider]: Remove usage of the Ember global",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/785",
        "text": "[embroider]: Improve semver checks for the modules polyfill",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/789",
        "text": "[embroider]: Update README for webpack install requirement",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/791",
        "text": "[embroider]: Better error message with webpack v4 installed",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/792",
        "text": "[embroider]: Install `webpack` alongside `@embroider/webpack` when using `@embroider/test-setup`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/793",
        "text": "[embroider]: Fix test setup to include webpack",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/795",
        "text": "[embroider]: Allow `thread-loader` configuration",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/796",
        "text": "[embroider]: Allow customization of Webpack's babel loader options",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/797",
        "text": "[embroider]: Use configPath to locate the configuration file, instead of assuming a fixed path",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/802",
        "text": "[embroider]: Upgrade broccoli-funnel",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/804",
        "text": "[embroider]: Fix installation instructions in @embroider/addon-shim",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/807",
        "text": "[embroider]: Add repository entry for the @embroider/util package",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/812",
        "text": "[embroider]: Update thread-loader to get RegExp serialization",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/828",
        "text": "[embroider]: Update addon-shim to use ember-auto-import v2 final",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/831",
        "text": "[embroider]: Replace loader-utils with built-in webpack 5 functionality",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/836",
        "text": "[embroider]: [WIP] Bump ember-cli",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/839",
        "text": "[embroider]: Fix Babel-Loader Caching for ember-template-compiler",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/841",
        "text": "[embroider]: Ensure babel transpilation cache is invalided when changing versions of babel plugins or AST transforms",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/845",
        "text": "[embroider]: Adding addon template for future test migrations",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/848",
        "text": "[embroider]: Update dependencies (packages/util, packages/router)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/851",
        "text": "[embroider]: Fix missing exports in @embroider/core `package.json`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/852",
        "text": "[embroider]: Drop support for Node 10, 11, 13, and 15.",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/853",
        "text": "[embroider]: Better error message when an asset cannot be found in entry file",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/860",
        "text": "[embroider]: Ensure all errors are reported when an error occurs in webpack",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/863",
        "text": "[embroider]: Restore typings for `@embroider/util`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/865",
        "text": "[embroider]: Enable parallelization of @embroider/macros in non-Embroider builds",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/868",
        "text": "[embroider]: Fix issue with thread-loader + babel-loader performance",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/870",
        "text": "[embroider]: Ensure tmpdir usage internally is always the realpath",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/872",
        "text": "[embroider]: Template compiler plugin not removed due to bad path comparison on Windows",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/873",
        "text": "[embroider]: [Discussion] Experiment with improving debugging of workers.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/875",
        "text": "[embroider]: Improve Webpack logging output",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/877",
        "text": "[embroider]: [BREAKING] Respect JOBS count if present",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/880",
        "text": "[embroider]: Fix compatibility with ember-data@3.27+",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/881",
        "text": "[embroider]: Fix race condition finding the owning package of a given file when using multiple workers",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/886",
        "text": "[embroider]: `undefined` does not serialize with broccoli-babel-transpiler",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/887",
        "text": "[embroider]: Ensure app macro configs have precedence over addon configs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/888",
        "text": "[embroider]: Expose sourceOfConfig to macro config mergers",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/890",
        "text": "[embroider]: Drop support for apps that use babel 6",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/893",
        "text": "[embroider]: Support strict mode templates",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/896",
        "text": "[embroider]: Only run ember test during scenario testing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/897",
        "text": "[embroider]: Test Support: Get Packager from Dependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/899",
        "text": "[embroider]: support inert TemplateLiteral in hbs plugin",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/900",
        "text": "[embroider]: Only patch `ember-cli-deprecation-workflow` releases before `2.0.0`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/903",
        "text": "[embroider]: Upgrade ember-qunit to address ember-canary compatibility issue curre…",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/904",
        "text": "[embroider]: Fix ember-test-selectors custom adapter for 6.x",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/905",
        "text": "[embroider]: Fix ember-test-selectors compat adapter for v6",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/907",
        "text": "[embroider]: Deflate AdjustImportsOptions",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/910",
        "text": "[embroider]: Fix arguments to `preprocessCss` (to match classic build)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/912",
        "text": "[embroider]: Use `require` for retrieving the adjust imports info",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/913",
        "text": "[embroider]: Ensure `dependencySatisfies` invalidates when installed packages change",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/914",
        "text": "[embroider]: Remove transitive `loader-utils` dependency from `@embroider/webpack`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/915",
        "text": "[embroider]: Reduce memory pressure from compat layer by disabling Heimdall node gathering during OneShotPlugin",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/918",
        "text": "[embroider]: Add `needsCache` and `persistentOutput` to internal broccoli-plugins.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/920",
        "text": "[embroider]: Ember internal deps experiment",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/923",
        "text": "[embroider]: Add documentation how to use safe components in tests",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/924",
        "text": "[embroider]: Fix caching of template AST plugins (follow caching protocol of ember-cli-htmlbars)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/928",
        "text": "[embroider]: Update custom package rules for ember-basic-dropdown",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/929",
        "text": "[embroider]: Use @ember/test-waiters in @embroider/router",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/930",
        "text": "[embroider]: add note on route splitting with pods in readme",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/934",
        "text": "[embroider]: Ensure style compilation works properly with ember-cli >= 3.18",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/939",
        "text": "[embroider]: Bump ember-source",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/941",
        "text": "[embroider]: Add support for ember-cli addon proxy (bundle caching)",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/943",
        "text": "[embroider]: Convert macro-sample-addon to test scenarios infra",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/947",
        "text": "[embroider]: tolerate missing rootURL on asset references",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/948",
        "text": "[embroider]: Disable compat adapter for ember-inflector >= 4.0.0 (since it is not needed)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/953",
        "text": "[embroider]: fixes: Local helpers not resolved in tests #894",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/957",
        "text": "[embroider]: [Experiment] Skip yarn —frozen-lockfile if we had a cache hit.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/958",
        "text": "[embroider]: Add allowEmpty to `__COMPILED_STYLES__` funnel",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/959",
        "text": "[embroider]: Upgrade ember-auto-import to latest in `@embroider/addon-shim`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/962",
        "text": "[embroider]: bump ember-maybe-import-regenerator",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/963",
        "text": "[embroider]: Remove ember-cli-htmlbars-inline-precompile when using ember-cli-html…",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/966",
        "text": "[embroider]: only bump scenario-tester (continue isolating issues)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/970",
        "text": "[embroider]: bump ember-data",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/971",
        "text": "[embroider]: Gh-actions caching improvements",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/974",
        "text": "[embroider]: Production fastboot builds were incorrectly getting server code in the browser",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/978",
        "text": "[embroider]: backing out ember real-modules mode",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/981",
        "text": "[embroider]: Add utility commands to ease development of V2 addons",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/985",
        "text": "[embroider]: Fix an erroneous assertion in v2 addons",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/990",
        "text": "[embroider]: Invalidate @embroider/macro's babel cache when addon version's change without mutating lock file (e.g. linking)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/rfcs/issues/940",
        "text": "[rfcs]: Replacing `moduleName` in template meta",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1004",
        "text": "[embroider]: Webpack crashes with Babel transpiled ES6 modules",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1013",
        "text": "[embroider]: Using `fastboot` configuration in classic build",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1014",
        "text": "[embroider]: Publishing v2 addons with `@embroider/addon-dev` should allow to ship untransformed decorator code",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1016",
        "text": "[embroider]: How do we _not_ transpile away class properties?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1033",
        "text": "[embroider]: Embroider-native support for Sass",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1036",
        "text": "[embroider]: unable to resolve babel plugin @babel/plugin-proposal-private-methods from /tmp/embroider/41c7ff/tests/dummy",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1047",
        "text": "[embroider]: `publicAssetURL` with `http` breaks FastBoot app start",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1049",
        "text": "[embroider]: How to lazy load CSS with FastBoot",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1056",
        "text": "[embroider]: Potential issue with mismatched @ember/test-waiters in dep graph",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1058",
        "text": "[embroider]: Macros: Unable to re-create `setOwnConfig` object in `included()` hook",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1063",
        "text": "[embroider]: `each()` macro doesn't unroll in development builds",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1066",
        "text": "[embroider]: @embroider/macros' dependencySatisfies does not understand canary versions",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1079",
        "text": "[embroider]: static service injection analysis",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1087",
        "text": "[embroider]: Pods components are included in main chunk when using splitAtRoutes",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1089",
        "text": "[embroider]: Investigate custom watch mode for js bundling pipeline",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1090",
        "text": "[embroider]: Default to watching dependencing in development?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1093",
        "text": "[embroider]: [Bug] Not allowed to remove app.css",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1114",
        "text": "[embroider]: How do you target older versions of dependencies with `@embroider/macros`' `dependencySatisfies`?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1129",
        "text": "[embroider]: `@embroider/macros` mess up engine routes for `<LinkTo/>` component ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1139",
        "text": "[embroider]: Should assets referenced in templates be fingerprinted during production builds?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1142",
        "text": "[embroider]: Question/proposal: `{{importSync}}`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1157",
        "text": "[embroider]: Not possible to emit chunks that don't contain \"assets\" in their path",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1163",
        "text": "[embroider]: Addon `.scss` files in `/app/styles` folder are copied to project's `dist` folder",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1165",
        "text": "[embroider]: broccoliBuilderErrorStack: Error: Cannot find module './vendor/ember-cli/vendor-prefix.js",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1169",
        "text": "[embroider]: `dependencySatisfies(\"ember-source\", ...)` is \"broken\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1172",
        "text": "[embroider]: Workers and `importScript`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1176",
        "text": "[embroider]: hbs-loader incompatible with components named `Link`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1178",
        "text": "[embroider]: Bug in `@embroider/macros` getOwnConfig reporting the wrong rootElement",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1180",
        "text": "[embroider]: Engine public folder getting included into a js chunk",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1181",
        "text": "[embroider]: Unclear path to v2 format adoption for engines",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1183",
        "text": "[embroider]: V1 Addons which use the preprocessTree seem to break apps using embroider",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1195",
        "text": "[embroider]: Properly handle RSVP",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1196",
        "text": "[embroider]: Embroider issue with Windows machines",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1200",
        "text": "[embroider]: Later added component classes not found until tmp deleted",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1203",
        "text": "[embroider]: importSync seems to have an issue with double \"default\" wrapping in Fastboot environments",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1220",
        "text": "[embroider]: Index path is not implied",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1221",
        "text": "[embroider]: Astro integration",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1222",
        "text": "[embroider]: Relocated file support for v2 addons can fail to resolve in monorepos",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1226",
        "text": "[embroider]: Support `ember` key in package.json (instead of `ember-addon`)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1237",
        "text": "[embroider]: Quest: update release process for independent versioning",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1251",
        "text": "[embroider]: production build breaks ember-inspector component tab",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1253",
        "text": "[embroider]: rollup `addon.keepAssets()` \"eating\" created assets",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1254",
        "text": "[embroider]: Import sync collides with ember-auto-import",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1257",
        "text": "[embroider]: Allow strict module resolution",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1258",
        "text": "[embroider]: dependencySatisfies doesn't work properly with dummy app",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1263",
        "text": "[embroider]: Using staticAppPaths results into RegEx error on Windows platform",
        "labels": [
          "good first issue"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1266",
        "text": "[embroider]: dependencySatisfies doesn't work properly with optional peer dependencies",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1280",
        "text": "[embroider]: --silent cli flag does not appear to have effect",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1286",
        "text": "[embroider]: Re-activate test coverage for latest ember-data",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1297",
        "text": "[embroider]: workspaceDir compat option being ignored",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1303",
        "text": "[embroider]: Implement configure / configureDependencies hooks from V2 Addon RFC",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1305",
        "text": "[embroider]: HTML entrypoint with script refering to package not working",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1312",
        "text": "[embroider]: `staticComponents: true` results in certain webpack `require`s failing",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1319",
        "text": "[embroider]: Compiled ember-welcome-page breaking app production css",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1324",
        "text": "[embroider]: runtime boot error @ember/application/deprecations upgrading to ember 4.x",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1329",
        "text": "[embroider]: Idea (for later): automatically generate `exports`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1330",
        "text": "[embroider]: Rethink how `@embroider/test-setup` pulls in Embroider",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1337",
        "text": "[embroider]: With strict settings turned on, the template-stack when using the globals resolver becomes less meaningful",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1338",
        "text": "[embroider]: Module not found: Error: Can't resolve '@ember/test-helpers'",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1351",
        "text": "[embroider]: @babel/plugin-transform-runtime not applying to imported modules",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1353",
        "text": "[embroider]: Set terser options",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1358",
        "text": "[embroider]: Styles disappear in embroider production build when there are css layers in app.css",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1370",
        "text": "[embroider]: v2 addon not resolveable from v2 addon, w/ embroider safe and pnpm",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1377",
        "text": "[embroider]: bug: isTesting macro returns false for addon code in app's production test builds",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1399",
        "text": "[embroider]: Performance issue in macro-config's babelPluginConfig",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1402",
        "text": "[embroider]: DOCTYPE not included in index.html while using embroider.compat build",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1410",
        "text": "[embroider]: Loading dynamic assets with `import()` and `importSync()`: `Cannot find module 'undefined'`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1417",
        "text": "[embroider]: \"can't find module\" error after file deletion in v1 addon",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1456",
        "text": "[embroider]: Imported css is duplicated during ember serve development build with fastboot",
        "labels": [
          "has reproduction"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1462",
        "text": "[embroider]: Babel plugin runs on v2 addon code where it shouldn't",
        "labels": [
          "bug",
          "has reproduction"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1483",
        "text": "[embroider]: Build fails if `tests/test-helper.js` is missing or renamed",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1486",
        "text": "[embroider]: Compat: app.css is required",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1491",
        "text": "[embroider]: `addonDependencyRules` comment",
        "labels": [
          "documentation"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1511",
        "text": "[embroider]: Need a better error when you get an unresolvable helper in a v2 addon",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1525",
        "text": "[embroider]: Module build failed: unable to use this non-serializable babel config in this node process ",
        "labels": [
          "has reproduction"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1527",
        "text": "[embroider]: `Module not found: Error: Can't resolve` errors with @ember-data imports in a v2 addon",
        "labels": [
          "has reproduction"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1546",
        "text": "[embroider]: loader.js runtime `define` and `importSync` interop issue",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1549",
        "text": "[embroider]: document packages that are obsolete/redundant under embroider",
        "labels": [
          "documentation"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1557",
        "text": "[embroider]: The presence of a `.ts` file breaks Javascript builds",
        "labels": [
          "has reproduction"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1561",
        "text": "[embroider]: Tracking: module resolution related build slowdown since v3.1",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1562",
        "text": "[embroider]: Stylelint files missing from instructions in docs/porting-addons-to-v2.md",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1569",
        "text": "[embroider]: addon-dev (v4) addon.publicAssets adds path to map values",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1571",
        "text": "[embroider]: Vite: route-template, using loose-mode, cannot resolve a gts component",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1574",
        "text": "[embroider]: Provide a way to explicitly finalize macro config?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1583",
        "text": "[embroider]: vite failing to optimize some dependencies of direct addons",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1585",
        "text": "[embroider]: Error: Can't resolve '.' from ember-test-waiters when building",
        "labels": [
          "good first issue"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1586",
        "text": "[embroider]: Design an updated spec for \"what is an engine\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1589",
        "text": "[embroider]: Needing a way to name/identify additional entrypoints",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1592",
        "text": "[embroider]: `moduleName` absolute path leakage regression ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1595",
        "text": "[embroider]: Vite: production build errors with `bug: embroider resolver's meta is not propagating`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1601",
        "text": "[embroider]: [pods] Addon providing a controller will win from app pods controller",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1619",
        "text": "[embroider]: Caching issues (leading to Webpack crashing or component templates not being picked up)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1631",
        "text": "[embroider]: ember-composable-helpers compat is slow",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1634",
        "text": "[embroider]: First-class `<template>`/.gjs/.gts support in @embroider/webpack",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1635",
        "text": "[embroider]: First-class support for developing in-repo addons",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1638",
        "text": "[embroider]: How to add template plugins in to an app",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1647",
        "text": "[embroider]: babel loader config points at $TMPDIR",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1667",
        "text": "[embroider]: Nitro (from Nuxt)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1672",
        "text": "[embroider]: `importSync` breaks the builds of apps consuming type=module packages",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1674",
        "text": "[embroider]: type=module packages are not translated correctly if they are v2 addons",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1678",
        "text": "[embroider]: top-level-await causes component loading to break",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1708",
        "text": "[embroider]: move the app files in an embroider rewritten app into virtualised content",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1737",
        "text": "[embroider]: AppFiles does not dedupe conflicting files that only differ by extension",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1741",
        "text": "[embroider]: @embroider/router _getQPMeta looks up \"unseen\" engine routes",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1745",
        "text": "[embroider]: Cannot resolve `macroCondition` ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1747",
        "text": "[embroider]: `staticComponents` misses sub-components with an unused parent",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1748",
        "text": "[embroider]: Allow v2 addons to filter `app-js`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1752",
        "text": "[embroider]: `Module not found: Error: bug: embroider resolver's meta is not propagating`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1757",
        "text": "[embroider]: Tolerate more ambiguous forms on ember >= 4.0",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1767",
        "text": "[embroider]: {{rootURL}} not working",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1770",
        "text": "[embroider]: v1 addon build watching gets stuck in a loop",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1773",
        "text": "[embroider]: [type=module] Quest Issue",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1774",
        "text": "[embroider]: [type=module] _ember_component_template_only is not a function",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1796",
        "text": "[embroider]: Feature request: allow setting webpack's __webpack_public_path__",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1800",
        "text": "[embroider]: Could not find module with webpack alias AND gts",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1812",
        "text": "[embroider]: Invalid code output when using `@embroider/macros` (ember app)",
        "labels": [
          "has reproduction"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1835",
        "text": "[embroider]: components in v2 addon's app-js using index files broken",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1848",
        "text": "[embroider]: Module not found: Error: Can't resolve './-private/function-based/modifier-manager'",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1851",
        "text": "[embroider]: importSync error: `Expected identifier but found \"*\"`  when using the `@cached` decorator in `ember-headless-table` with `@embroider/vite`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1857",
        "text": "[embroider]: V1 addon (TypeScript) with app/components/some-component.ts fails to find the component",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1860",
        "text": "[embroider]: Tracking issue for breaking changes in 4.x",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1861",
        "text": "[embroider]: Module not found: `Error: Can't resolve './helpers/liquid-outlet'` & CSS import into `app.ts`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1862",
        "text": "[embroider]: Ability to control order of addon implicit styles?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1878",
        "text": "[embroider]: Can a compat app keep all of the unprocessed app/styles/ files?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/1889",
        "text": "[embroider]: `{{unique-id}}` helper is broken in 3.4.8",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/392",
        "text": "[embroider]: Making addon with template transforms embroider compatible",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/397",
        "text": "[embroider]: Complete macro implementation from rfc",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/407",
        "text": "[embroider]: Enable runtime mode for macro system in development",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/463",
        "text": "[embroider]: Adjust default-pipeline.ts for fastboot production builds",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/473",
        "text": "[embroider]: Setting macro config for in-repo addon not working",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/484",
        "text": "[embroider]: Babel config scope control / package ownership testing",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/491",
        "text": "[embroider]: Embroider + Fastboot + headTags using ember-cli-meta-tag",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/496",
        "text": "[embroider]: ember-cli-gzip not working",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/501",
        "text": "[embroider]: Stabilization tracking issue",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/510",
        "text": "[embroider]: `this.owner.factoryFor( ... )` returning undefined for (n) modules",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/515",
        "text": "[embroider]: Embroider build doesn't deliver the /public tree of the dummy app of an addon to the output.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/519",
        "text": "[embroider]: Error in compat mode in addon: core_1.applyVariantToBabelConfig is not a function",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/520",
        "text": "[embroider]: Error in compat mode for addon: this.packageCache.seed is not a function",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/522",
        "text": "[embroider]: How to support tests with dynamic component registration?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/527",
        "text": "[embroider]: Setup dependabot",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/533",
        "text": "[embroider]: Module compatibility differences between `ember-auto-import` and Embroider",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/537",
        "text": "[embroider]: getConfig and getOwnConfig macros do not work reliable in addon's dummy app for classic builds",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/542",
        "text": "[embroider]: Make failBuild macro work correctly in runtime mode",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/548",
        "text": "[embroider]: Relative require in v1 addons doesn't work",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/558",
        "text": "[embroider]: Support for mapping args to component usage in compat resolver",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/562",
        "text": "[embroider]: Build fails when \"could not find vendor styles in index.html\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/567",
        "text": "[embroider]: Ember build fails if a new project has @embroider/macros and fabric.js installed",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/577",
        "text": "[embroider]: Installation warnings due to outdated package dependencies.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/595",
        "text": "[embroider]: Error in compat mode with ember-component-css: 'pod-styles' wasn't found",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/599",
        "text": "[embroider]: implement template literal import() in embroider-compat-audit",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/609",
        "text": "[embroider]: ESBuild Integration (Inspired by Vite)",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/612",
        "text": "[embroider]: Audit tool should use same mainFields behavior as the real build does",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/613",
        "text": "[embroider]: Define macro config based on other macros",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/622",
        "text": "[embroider]: Duplication of app.css in meta assets",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/640",
        "text": "[embroider]: build failure pointing to ember-data and embroider",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/641",
        "text": "[embroider]: Addon compatibility test failures since v0.32.0",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/646",
        "text": "[embroider]:  ModuleNotFoundError: Module not found: sanitize-html",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/649",
        "text": "[embroider]: babel-plugin-module-resolver compatibility",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/650",
        "text": "[embroider]: importSync resolution in classic builds",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/651",
        "text": "[embroider]: Unloaded routes get wrong default serializer implementation",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/667",
        "text": "[embroider]: `importSync` with \"fake\" Ember packages (e.g. `@ember/component`)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/668",
        "text": "[embroider]: Production build errors with \"needed by index.html: Cannot read property '0' of undefined\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/673",
        "text": "[embroider]: \"ie 11\" target value does not compile commonjs",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/682",
        "text": "[embroider]: Pod based component templates do not work",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/685",
        "text": "[embroider]: Unintended FastBoot dependencies under Embroider",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/688",
        "text": "[embroider]: ember-cli-postcss filters not running under embroider",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/693",
        "text": "[embroider]: Supporting overwrites for extra public trees",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/695",
        "text": "[embroider]: Did not emit the additional css entry point",
        "labels": [
          "good first issue"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/699",
        "text": "[embroider]: Embroider `webpackConfig` does not play well with ember-auto-import configurations",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/714",
        "text": "[embroider]: Generated output with `staticHelpers: true` seems invalid",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/719",
        "text": "[embroider]: Build fails after upgrading to 0.37 (Cannot find module '@babel/helper-regex')",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/723",
        "text": "[embroider]: Disable `babel-loader` cache when there are non-serializable plugins",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/724",
        "text": "[embroider]: Cannot `ember test --environment=production` an Embroider based application",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/733",
        "text": "[embroider]: [bug] Build failure with @glimmer/tracking with ember beta 3.27.0-beta.1 + ember-cli-babel >= 7.24.0",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/746",
        "text": "[embroider]: ember-svg-jar hbs strategy broken",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/755",
        "text": "[embroider]: Compatibility with broccoli-asset-rev functionality (asset fingerprinting, assetMap.json manifest)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/758",
        "text": "[embroider]: Non-JS files in mirage dir are ignored",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/767",
        "text": "[embroider]: Issues with @pollyjs",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/768",
        "text": "[embroider]: Can’t find in-repo addon on subsequent builds",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/769",
        "text": "[embroider]: Multiple copies of the `typescript-memoize` package crashes builds",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/778",
        "text": "[embroider]:  broccoliBuilderErrorStack … Can't resolve '../../test-waiters'",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/783",
        "text": "[embroider]: not all dependencies support webpack 5",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/800",
        "text": "[embroider]: template only components defined inside engine are not honoured",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/801",
        "text": "[embroider]: Ability to load third-party CSS before app CSS",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/810",
        "text": "[embroider]: Using Embroider with `jquery-integration: true` optional feature fails",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/818",
        "text": "[embroider]: Automated release failure",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/822",
        "text": "[embroider]: Support tree-shaking unused routes via staticRoutes option",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/824",
        "text": "[embroider]: Route.render not working",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/825",
        "text": "[embroider]: ensureSafeComponent does not work for imported classic component",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/846",
        "text": "[embroider]: \"Building into\" output doesn't play nice with progress indicator",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/847",
        "text": "[embroider]: it appears that deleting and empty backing class glimmer component mid-build crashes the build",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/862",
        "text": "[embroider]: Ember global not available to vendor code when using ember-source 3.27+",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/882",
        "text": "[embroider]: [Embroider:MacrosConfig] cannot read userConfigs until MacrosConfig has been finalized.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/902",
        "text": "[embroider]: ember-rfc176 deprecated data",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/909",
        "text": "[embroider]: isDevelopingAddon() not respected",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/952",
        "text": "[embroider]: compilerOptions.useUnknownInCatchVariables  introduces by #967",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/954",
        "text": "[embroider]: app.css is in dist folder once with and once without fingerprint",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/984",
        "text": "[embroider]: Is there a way to only have ESM in the compiled output?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/issues/996",
        "text": "[embroider]: Support level for `ember-engines` ecosystem ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1046",
        "text": "[embroider]: Disable publicAssetURL for FastBoot script render",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1080",
        "text": "[embroider]: Support a project having prerelease versions",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1160",
        "text": "[embroider]: Implement `usesCorrectAssetUrl` option for @embroider/webpack",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1174",
        "text": "[embroider]: Bump scenario-tester so that scenario links bins.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1187",
        "text": "[embroider]: Add test for app depending on an addon depending on an optional peerDependency",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1188",
        "text": "[embroider]: v2 guide: move `.md` files to published package",
        "labels": [
          "documentation"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1207",
        "text": "[embroider]: Move dummy app support down into packageCache",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1255",
        "text": "[embroider]: Resolve https://github.com/embroider-build/embroider/issues/1249",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1262",
        "text": "[embroider]: Remove sample files from addon-dev",
        "labels": [
          "documentation"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1272",
        "text": "[embroider]: fix: account for separate node_modules trees for moduleExists ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1284",
        "text": "[embroider]: Update lints w/ eslint-plugin-n",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1344",
        "text": "[embroider]: Delete files that are now in the blueprint",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1350",
        "text": "[embroider]: add a comment to the empty package key generator",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1459",
        "text": "[embroider]: [DO NOT MERGE] Embroider Architecture Overview Brain Dump",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1471",
        "text": "[embroider]: use @swc/register instead of ts-node for tests",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1472",
        "text": "[embroider]: Add section to CONTRIBUTING about issue/PR triage",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1596",
        "text": "[embroider]: Resolve \"nested layout\" components",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1643",
        "text": "[embroider]: Perf: Cache the lockfile and package.json lookups",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1665",
        "text": "[embroider]: Needs love: Update porting-addons-to-v2.md to mention \"app-js\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1711",
        "text": "[embroider]: Failing test for #1696",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1720",
        "text": "[embroider]: add test scenarios for beta",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1730",
        "text": "[embroider]: move vite index html to root",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1734",
        "text": "[embroider]: docs: Update FAQ and addon author guide to mention testing strategies for non-NPM-published branches / forks",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1749",
        "text": "[embroider]: Allow v1 addons to rely on renaming system even when they have an exp…",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1751",
        "text": "[embroider]: Cache `resolveComponent`-lookups",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1766",
        "text": "[embroider]: Convert @embroider/addon-dev to ESM",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1780",
        "text": "[embroider]: vite: fix initializers not running",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1793",
        "text": "[embroider]: refactor: change isProduction check strategy",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1797",
        "text": "[embroider]: addon-dev: Inline sample files as docs in the README and Porting Addons to V2 Docs.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1798",
        "text": "[embroider]: Provide Glint utility plugin for `@embroider/addon-dev`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1799",
        "text": "[embroider]: Define local types for @embroider/core, since we have no guarantees of the consuming test environment",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1818",
        "text": "[embroider]: unpin ember-data",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1844",
        "text": "[embroider]: Add @glimmer/runtime to ember-standard-modules",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1849",
        "text": "[embroider]: allow passing options to optimize deps",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1850",
        "text": "[embroider]: vite: do not optimize dynamic addons ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1854",
        "text": "[embroider]: add vite compat styles resolver",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1855",
        "text": "[embroider]: improve addon-dev clean",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1876",
        "text": "[embroider]: fix vite dep optimizer",
        "labels": [
          "blocked"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/1887",
        "text": "[embroider]: fix compat namespace app test",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/648",
        "text": "[embroider]: macro detection of fastboot in classic prod builds",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/803",
        "text": "[embroider]: Ensure extracted CSS comes before app/vendor CSS",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/808",
        "text": "[embroider]: [BUGFIX] Pass owner pkg to from file while resolving components",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/830",
        "text": "[embroider]: Add assertion for ensureSafeComponent called with legacy component class",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/895",
        "text": "[embroider]: Reproduction of: #889",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/922",
        "text": "[embroider]: allow `null`, `undefined`, `if` and `unless` for strict component arguments",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/982",
        "text": "[embroider]: Try private getter reproduction",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/992",
        "text": "[embroider]: Avoid errors using ensureSafeComponent in FastBoot on Ember < 3.25",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/994",
        "text": "[embroider]: Add link:all script",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/embroider/pull/995",
        "text": "[embroider]: Implement manifest.json output",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "reactivity": {
    "issues": [
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/102",
        "text": "[ember-modifier]: Switch to fully using babel.config.js when possible",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/126",
        "text": "[ember-modifier]: DEPRECATION: Versions of modifier manager capabilities prior to 3.22 have been deprecated",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/128",
        "text": "[ember-modifier]: ModifierArgs should be type-only export",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/136",
        "text": "[ember-modifier]: Invalid modifier manager compatibility specified",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/174",
        "text": "[ember-modifier]: No way to listen for changes to `this.element`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/18",
        "text": "[ember-modifier]: expected to be able to return a clean up function from did-insert callback",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/19",
        "text": "[ember-modifier]: Getting the previous value for an argument from didReceiveArguments",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/203",
        "text": "[ember-modifier]: Plan for v4 release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/21",
        "text": "[ember-modifier]: README - Class modifier - Arguments destruct incorrect",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/24",
        "text": "[ember-modifier]: Remove all custom destroy code in favor of destroyable",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/249",
        "text": "[ember-modifier]: Deprecation for missing options is backwards",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/25",
        "text": "[ember-modifier]: Stop retrieving owner from the factory argument in class modifier manager `createFactory` method",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/250",
        "text": "[ember-modifier]: [3.2.0]+ `state.teardown is not a function`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/251",
        "text": "[ember-modifier]: 3.2+: Class-based modifiers don't call `modify`?",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/26",
        "text": "[ember-modifier]: Simplify creation and management of functional modifier manager",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/28",
        "text": "[ember-modifier]: Specify and test supported TS versions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/282",
        "text": "[ember-modifier]: `ember-modifier@3.2.5` erroneously reporting deprecations",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/29",
        "text": "[ember-modifier]: Proposal: change `element` availability",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/324",
        "text": "[ember-modifier]: Functional `{{modifier}}` destructor being called after initializer",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/33",
        "text": "[ember-modifier]: Add Prettier with ESLint integration and fix",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/35",
        "text": "[ember-modifier]: Parallelize \"Additional Tests\" and \"Type Tests\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/40",
        "text": "[ember-modifier]: Named arguments should be more prominent in the API design and docs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/43",
        "text": "[ember-modifier]: Provide types",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/44",
        "text": "[ember-modifier]: Error in willRemove halts page",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/449",
        "text": "[ember-modifier]: Be more explicit in v3 -> v4 modifier() deprecation warning",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/464",
        "text": "[ember-modifier]: ember-modifier v3.2.3+ crashes during build on parsing syntax (Missing semicolon)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/505",
        "text": "[ember-modifier]: Ember modifier broke in each loop",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/52",
        "text": "[ember-modifier]: Any special setup required in user land?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/53",
        "text": "[ember-modifier]: Build Issue with v2.0.0: @ember/destroyable does not have a destroy export",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/58",
        "text": "[ember-modifier]: Consider different names for class modifier \"Arguments\" hooks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/59",
        "text": "[ember-modifier]: Not clear that 1.0.3 isn't compatible with ember 3.20",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/640",
        "text": "[ember-modifier]: Options (and eager) seems to have disappeared in v4.0.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/65",
        "text": "[ember-modifier]: failure on install with ember 3.22",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/66",
        "text": "[ember-modifier]: strongly typed arguments",
        "labels": [
          "documentation",
          "good first issue"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/68",
        "text": "[ember-modifier]: Types - Use interface `ModifierArgs` as a generic",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/71",
        "text": "[ember-modifier]: helperCreateClassFeaturesPlugin.injectInitialization is not a function",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/72",
        "text": "[ember-modifier]: Compatibility information in the readme seems wrong",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/74",
        "text": "[ember-modifier]: Arguments Missing When Set After Construction",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/75",
        "text": "[ember-modifier]: Deprecation: Versions of modifier manager capabilities prior to 3.22 have been deprecated",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/78",
        "text": "[ember-modifier]: Local modifiers not working correctly",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/80",
        "text": "[ember-modifier]: Type 'typeof import(\"ember-modifier\")' is not a constructor function type.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/82",
        "text": "[ember-modifier]: Modifiers and their use with splattributes",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/105",
        "text": "[ember-modifier]: Breaking: remove deprecated willRemove hook",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/106",
        "text": "[ember-modifier]: Breaking: clean up type parameters.",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/134",
        "text": "[ember-modifier]: Properly re-export types",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/135",
        "text": "[ember-modifier]: Add TypeScript 4.5 to testing matrix",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/15",
        "text": "[ember-modifier]: Fix incorrect `makeFunctionalModifier` reference in `README.md`",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/198",
        "text": "[ember-modifier]: README: autotracking clarification and misc. cleanup",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/210",
        "text": "[ember-modifier]: Support `Signature` types for modifiers",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/212",
        "text": "[ember-modifier]: Deprecate `willDestroy()` and `isDestroy(ing|ed)`",
        "labels": [
          "deprecation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/213",
        "text": "[ember-modifier]: Backports for v3.2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/217",
        "text": "[ember-modifier]: Introduce new `modify` hook",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/218",
        "text": "[ember-modifier]: Add TS 4.6 to CI and README",
        "labels": [
          "documentation",
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/22",
        "text": "[ember-modifier]: Fix arguments destructuring in `README.md`",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/220",
        "text": "[ember-modifier]: Deprecate didInstall, didReceiveArguments, and didUpdateArguments",
        "labels": [
          "deprecation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/221",
        "text": "[ember-modifier]: Deprecate `this.element` and `this.args` on class-based modifiers",
        "labels": [
          "deprecation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/222",
        "text": "[ember-modifier]: Introduce `eager` option to function-based modifiers",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/223",
        "text": "[ember-modifier]: Deprecate `modifier()` without `{ eager: false }`",
        "labels": [
          "deprecation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/227",
        "text": "[ember-modifier]: Update docs and export type utils",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/23",
        "text": "[ember-modifier]: Convert the addon to TypeScript",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/230",
        "text": "[ember-modifier]: Solidify types for release",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/235",
        "text": "[ember-modifier]: Backport: Include 3.2 deprecations in CHANGELOG (#234)",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/237",
        "text": "[ember-modifier]: Update README for v4 development",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/238",
        "text": "[ember-modifier]: Drop support for Node 12",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/244",
        "text": "[ember-modifier]: Remove all deprecations targeting v4",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/245",
        "text": "[ember-modifier]: Update Class-based modifier example",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/247",
        "text": "[ember-modifier]: Fix \"default\" positional and named argument types",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/248",
        "text": "[ember-modifier]: CHANGELOG and package.json updates for Release 3.2.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/252",
        "text": "[ember-modifier]: Invert deprecation for missing options",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/253",
        "text": "[ember-modifier]: Check type of teardown before saving or using it",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/254",
        "text": "[ember-modifier]: V3 updates to master",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/270",
        "text": "[ember-modifier]: Use \"export type\" for FunctionBasedModifier interface",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/277",
        "text": "[ember-modifier]: Make `FunctionBasedModifier` an (abstract) constructor type",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/278",
        "text": "[ember-modifier]: Make `FunctionBasedModifier` an (abstract) constructor type",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/279",
        "text": "[ember-modifier]: Release 3.2.3",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/280",
        "text": "[ember-modifier]: Use \"export type\" for FunctionBasedModifier interface",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/281",
        "text": "[ember-modifier]: Fix deprecation notice",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/283",
        "text": "[ember-modifier]: Fix deprecations for class-based modifiers",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/288",
        "text": "[ember-modifier]: Prevent triggering deprecation messages incorrectly for class-based modifiers",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/289",
        "text": "[ember-modifier]: Update class-based modifier in blueprint",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/296",
        "text": "[ember-modifier]: Convert to v2 addon",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/31",
        "text": "[ember-modifier]: Drop support for Node 8 and 9",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/315",
        "text": "[ember-modifier]: Update class-based modifier in blueprint",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/316",
        "text": "[ember-modifier]: Update function-based modifier in blueprint",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/327",
        "text": "[ember-modifier]: auto-publish unstable packages to NPM",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/372",
        "text": "[ember-modifier]: Include `blueprints` folder in published tarball",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/38",
        "text": "[ember-modifier]: Deprecate the `willRemove` hook for class based modifiers.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/39",
        "text": "[ember-modifier]: Update README Table of Contents w/Philosophy section",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/41",
        "text": "[ember-modifier]: TS: upgrade to 3.9; implement RFC for type stability",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/45",
        "text": "[ember-modifier]: Remove module unification support from blueprints.",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/450",
        "text": "[ember-modifier]: Options for modifier deprecation warning",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/46",
        "text": "[ember-modifier]: Use `ember-cli-htmlbars` for inline precompilation in blueprints.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/48",
        "text": "[ember-modifier]: Migrate to `@ember/destroyable` for destruction.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/497",
        "text": "[ember-modifier]: move `.md` files to the root",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/498",
        "text": "[ember-modifier]: Update signature of constructor for class-based modifiers",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/50",
        "text": "[ember-modifier]: Avoid issuing a deprecation during destruction on Ember 3.20+",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/504",
        "text": "[ember-modifier]: docs: Fix typo in TypeScript class based example",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/54",
        "text": "[ember-modifier]: Update dependencies to fix issues with `@ember/destroyable`.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/55",
        "text": "[ember-modifier]: Update ember-destroyable-polyfill to 2.0.0.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/56",
        "text": "[ember-modifier]: config: update TS and TS test matrix",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/57",
        "text": "[ember-modifier]: Update documentation to use `assert` from `@ember/debug` for type narrowing",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/593",
        "text": "[ember-modifier]: run `npx ember-cli-update --to=4.9.2` to align with blueprint",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/599",
        "text": "[ember-modifier]: Remove mention of v4 beta from readme",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/601",
        "text": "[ember-modifier]: Update compatibility section in README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/61",
        "text": "[ember-modifier]: Fix v1.x issue with Ember 3.20.4+.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/62",
        "text": "[ember-modifier]: Update minimum version of ember-destroyable-polyfill.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/63",
        "text": "[ember-modifier]: feat(modifier-managers): use 3.22 capabilities",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/64",
        "text": "[ember-modifier]: Reproduction Tests for  emberjs/ember.js#19162",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/657",
        "text": "[ember-modifier]: Include @ember/owner in tsconfig types",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/665",
        "text": "[ember-modifier]: Use the types published from Ember itself",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/669",
        "text": "[ember-modifier]: Disable publish unstable workflow",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/683",
        "text": "[ember-modifier]: Support Ember v5",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/687",
        "text": "[ember-modifier]: Remove engines field from addon package.json",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/73",
        "text": "[ember-modifier]: Update compatibility information",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/79",
        "text": "[ember-modifier]: Types: fix strictness and add a failing test",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/850",
        "text": "[ember-modifier]: Typo in test-app package.json",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/853",
        "text": "[ember-modifier]: Add TS support for the `modifier` and `modifier-test` blueprints",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/86",
        "text": "[ember-modifier]: Change `willRemove` usage in examples to `willDestroy`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/87",
        "text": "[ember-modifier]: Add support for `3.22` modifier capabilities",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/90",
        "text": "[ember-modifier]: Improve logic in `removeEventListener()` from examples",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/91",
        "text": "[ember-modifier]: Use `positional` and `named` as argument names in `ember g modifier` blueprint",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/96",
        "text": "[ember-modifier]: Drop Node 10 and add Node 14+",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/99",
        "text": "[ember-modifier]: docs: update README with compatibility info",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/issues/20096",
        "text": "[ember.js]: Reactivity: resources",
        "labels": [
          "design"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/102",
        "text": "[tracked-built-ins]: Drop old TS versions from support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/11",
        "text": "[tracked-built-ins]: TrackedArray",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/136",
        "text": "[tracked-built-ins]: Deprecated use of Ember global",
        "labels": [
          "enhancement",
          "help wanted",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/143",
        "text": "[tracked-built-ins]: Failing on Ember 4.0",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/19",
        "text": "[tracked-built-ins]: TS Error: Unable to resolve signature of property decorator when called as an expression.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/197",
        "text": "[tracked-built-ins]: 2021 Release? ;)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/204",
        "text": "[tracked-built-ins]: v2 error: class private methods are not enabled",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/21",
        "text": "[tracked-built-ins]: Issue with TrackedObject in a getter",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/222",
        "text": "[tracked-built-ins]: \"Class private methods are not enabled\" error when building the project",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/225",
        "text": "[tracked-built-ins]: Unexpected pass-through to glimmer tracked with `@tracked`",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/23",
        "text": "[tracked-built-ins]: Using `new TrackedArray<string>()` in TypeScript",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/27",
        "text": "[tracked-built-ins]: `delete` doesn't trigger recomputation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/274",
        "text": "[tracked-built-ins]: Convert to v2 addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/29",
        "text": "[tracked-built-ins]: TrackedArray.push dirties and consumes the collection tag",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/293",
        "text": "[tracked-built-ins]: Plan for v3 release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/319",
        "text": "[tracked-built-ins]: Implement `Array.from`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/320",
        "text": "[tracked-built-ins]: Integrate tracked-maps-and-sets directly into the addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/327",
        "text": "[tracked-built-ins]: Convert this to an Embroider v2 addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/328",
        "text": "[tracked-built-ins]: Drop Node 12",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/368",
        "text": "[tracked-built-ins]:  You attempted to update `_value` on `TrackedStorageImpl`, but it had already been used previously in the same computation.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/37",
        "text": "[tracked-built-ins]: `{{#each}}` rerenders on every array `set`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/39",
        "text": "[tracked-built-ins]: TrackedArray type too wide?",
        "labels": [
          "invalid"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/41",
        "text": "[tracked-built-ins]: TrackedArray missing types",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/45",
        "text": "[tracked-built-ins]: Switch to GitHub Actions",
        "labels": [
          "good first issue"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/51",
        "text": "[tracked-built-ins]: Better TS support",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/57",
        "text": "[tracked-built-ins]: Fix beta and canary builds",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/94",
        "text": "[tracked-built-ins]: Compat with Ember 3.27 and the missing Ember global",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/96",
        "text": "[tracked-built-ins]: Embroider + Ember 3.27: TypeError: setting getter-only property \"setupMandatorySetter\"",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/10",
        "text": "[tracked-built-ins]: [REFACTOR] Simplifies Autotracking",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/112",
        "text": "[tracked-built-ins]: Improve Object Proxy",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/12",
        "text": "[tracked-built-ins]: Each in reactivity",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/13",
        "text": "[tracked-built-ins]: [REFACTOR] Extracts Maps and Sets, updates decorator",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/144",
        "text": "[tracked-built-ins]: Breaking: drop Node 10 support",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/15",
        "text": "[tracked-built-ins]: [REFACTOR] Better decorator types",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/16",
        "text": "[tracked-built-ins]: [FEAT] Adds TrackedArray and TrackedObject",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/161",
        "text": "[tracked-built-ins]: Tracked storage implementations",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/17",
        "text": "[tracked-built-ins]: [FEAT] Adds error when attempting to use in IE11",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/172",
        "text": "[tracked-built-ins]: Update README.md to align with tracked-built-ins",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/18",
        "text": "[tracked-built-ins]: [FEAT] Adds release process and changelog",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/184",
        "text": "[tracked-built-ins]: Upgrade tracked maps and sets",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/189",
        "text": "[tracked-built-ins]: Update npmignore file",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/20",
        "text": "[tracked-built-ins]: Update decorator.ts",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/213",
        "text": "[tracked-built-ins]: Work around bad ember-cli-babel and preset-env interaction",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/22",
        "text": "[tracked-built-ins]: [BUGFIX] Ensure key operators work for TrackedObject",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/241",
        "text": "[tracked-built-ins]: Update repository url in package.json",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/25",
        "text": "[tracked-built-ins]: [BUGFIX] Fixes the mandatory setter bug",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/282",
        "text": "[tracked-built-ins]: Convert to monorepo",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/30",
        "text": "[tracked-built-ins]: Trigger update after calling `delete` on an object property",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/307",
        "text": "[tracked-built-ins]: Use Ember v4 types",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/313",
        "text": "[tracked-built-ins]: Introduce TS support policy with TS 4.4–4.6",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/314",
        "text": "[tracked-built-ins]: Add type tests and fix a types bug they exposed",
        "labels": [
          "bug",
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/315",
        "text": "[tracked-built-ins]: Adopt SemVer spec strictness guidelines",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/330",
        "text": "[tracked-built-ins]: Drop support for Node 12",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/332",
        "text": "[tracked-built-ins]: Convert to v2 addon",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/35",
        "text": "[tracked-built-ins]: Add deleteProperty to TrackedObject",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/372",
        "text": "[tracked-built-ins]: Fix some spelling errors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/395",
        "text": "[tracked-built-ins]: Remove unnecessary @babel/plugin-proposal-class-properties",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/396",
        "text": "[tracked-built-ins]: Replace dependabot with renovate",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/397",
        "text": "[tracked-built-ins]: Fix incorrect mutation-after-consumption assertions for Array `push` and `unshift`",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/40",
        "text": "[tracked-built-ins]: Export more correct types",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/401",
        "text": "[tracked-built-ins]: Run `pnpm install` after version bump",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/402",
        "text": "[tracked-built-ins]: Backport: Introduce flag for length access after push/unshift",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/408",
        "text": "[tracked-built-ins]: Move Array#fill to \"write then read\" methods so the template correctly updates",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/410",
        "text": "[tracked-built-ins]: Update compatibility section in README.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/42",
        "text": "[tracked-built-ins]: [Bug]: resolve error in build without browsers in targets.js file",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/44",
        "text": "[tracked-built-ins]: chore: bump ember-cli-babel and ember-cli-typescript",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/56",
        "text": "[tracked-built-ins]: Export correct types",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/95",
        "text": "[tracked-built-ins]: Ember -> globalThis.Ember",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/98",
        "text": "[tracked-built-ins]: Remove mandatory setter override",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/602",
        "text": "[ember-modifier]: 4.0 Migration docs not mentioning the need for e-auto-import in dependencies",
        "labels": [
          "documentation"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/613",
        "text": "[ember-modifier]: 3.2+ Cleanup function is not called within specific component",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/681",
        "text": "[ember-modifier]: Strange Bug `_ember_modifier__WEBPACK_IMPORTED_MODULE_1__.setModifierManager is not a function`",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/774",
        "text": "[ember-modifier]: `eager` option for functional modifiers is undocumented outside migration guide",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/849",
        "text": "[ember-modifier]: Created a basic modifier that just does a console.log for now, and I get an \"Error: Compile Error test-me is not a modifier: Helpers may not be used in the element form.\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/851",
        "text": "[ember-modifier]: Cannot read properties of undefined (reading 'manager')",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/852",
        "text": "[ember-modifier]: Module not found: Error: Can't resolve './-private/function-based/modifier-manager'",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/issues/88",
        "text": "[ember-modifier]: [INFORMATION] Does any stage of ember-modifier lifecycle that runs on server side with Fastboot?",
        "labels": [
          "documentation"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/331",
        "text": "[ember-modifier]: Remove `-private/signature.ts` entrypoint",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/486",
        "text": "[ember-modifier]: Update README examples that used deprecated behavior",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-modifier/ember-modifier/pull/725",
        "text": "[ember-modifier]: Additional tests for #613",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/957",
        "text": "[rfcs]: Render Aware Scheduler Interface",
        "labels": [
          "T-ember-data",
          "T-deprecation",
          "T-routing",
          "T-framework",
          "T-testing",
          "T-fastboot",
          "T-learning",
          "T-ember-cli",
          "S-Exploring"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/24",
        "text": "[tracked-built-ins]: Possible to use this outside of the ember framework?",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/316",
        "text": "[tracked-built-ins]: Prepare for Ember adoption",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/317",
        "text": "[tracked-built-ins]: Decide on design for (and implement?) `TrackedArray` constructor",
        "labels": [
          "blocked"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/318",
        "text": "[tracked-built-ins]: Decide on design for (and implement?) `TrackedObject` constructor",
        "labels": [
          "blocked"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/399",
        "text": "[tracked-built-ins]: Fix problem with rollup-plugin-ts and TS @ v5",
        "labels": [
          "bug"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/403",
        "text": "[tracked-built-ins]: 3.1.1 is latest in npm, should be 3.2.0",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/404",
        "text": "[tracked-built-ins]: v3.2.0: Reading array.length seems to trigger dirty flag",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/405",
        "text": "[tracked-built-ins]: Performance of splice",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/406",
        "text": "[tracked-built-ins]: Migrate off the cached primitives polyfill",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/416",
        "text": "[tracked-built-ins]: Newer method(s) missing from TrackedArray type",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/issues/73",
        "text": "[tracked-built-ins]: Add static constructors for `TrackedArray` and `TrackedObject` that don't copy",
        "labels": [
          "enhancement",
          "question"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/tracked-tools/tracked-built-ins/pull/414",
        "text": "[tracked-built-ins]: chore: Add performance regression test for TrackedArray",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      }
    ]
  },
  "compatibility": {
    "issues": [
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/466",
        "text": "[ember-cli-htmlbars]: Tries and fails to parse HBS files in non template directory",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/468",
        "text": "[ember-cli-htmlbars]: No type declaration provided",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/487",
        "text": "[ember-cli-htmlbars]: Why does this still use bower?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/491",
        "text": "[ember-cli-htmlbars]: Type definitions missing from 4.3.0",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/664",
        "text": "[ember-cli-htmlbars]: Order of plugins seems to have changed in 5.6.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/674",
        "text": "[ember-cli-htmlbars]: release-it is now a dependency?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/681",
        "text": "[ember-cli-htmlbars]: Addon template complier error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/687",
        "text": "[ember-cli-htmlbars]: Broken ember-source version check in nested addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/746",
        "text": "[ember-cli-htmlbars]: dead code? utils.template()",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/752",
        "text": "[ember-cli-htmlbars]: inline-precompile transform breaks parallel builds",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/754",
        "text": "[ember-cli-htmlbars]: Template compilation broken on ember-cli < 3.13 in addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/771",
        "text": "[ember-cli-htmlbars]: Co-location gives `does not contain a default export` error when class is re-exported, but co-located template is present",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/778",
        "text": "[ember-cli-htmlbars]: [QUEST] v7 Release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/481",
        "text": "[ember-cli-htmlbars]: Add type definition for test helper import",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/492",
        "text": "[ember-cli-htmlbars]: Remove Bower support.",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/493",
        "text": "[ember-cli-htmlbars]: Drop Node 8 support.",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/494",
        "text": "[ember-cli-htmlbars]: Ensure types file gets published.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/496",
        "text": "[ember-cli-htmlbars]: Drop support for Ember < 3.8.",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/512",
        "text": "[ember-cli-htmlbars]: Update Broccoli dependencies to latest.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/527",
        "text": "[ember-cli-htmlbars]: Move template compiler creation to a method on the addon",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/528",
        "text": "[ember-cli-htmlbars]: Use smaller cache key for `ember-template-compiler` (reduce overall memory overhead of caching)",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/543",
        "text": "[ember-cli-htmlbars]: Update babel-plugin-htmlbars-inline-precompile to 4.0.0.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/550",
        "text": "[ember-cli-htmlbars]: Fix specifying custom template compiler path.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/551",
        "text": "[ember-cli-htmlbars]: Ensure `EmberENV` is available to inline template compilation",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/553",
        "text": "[ember-cli-htmlbars]: Ensure custom templateCompilerPath is an absolute path.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/585",
        "text": "[ember-cli-htmlbars]: Refactor README",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/597",
        "text": "[ember-cli-htmlbars]: Pass `isProduction` to Ember template compiler.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/598",
        "text": "[ember-cli-htmlbars]: Pass `isProduction` to Ember template compiler.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/599",
        "text": "[ember-cli-htmlbars]: Move `ember-template-lint` to `devDependencies` (from `dependencies`)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/601",
        "text": "[ember-cli-htmlbars]: perf: encode template as JSON string",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/657",
        "text": "[ember-cli-htmlbars]: Make cacheKey lazy",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/660",
        "text": "[ember-cli-htmlbars]: Replace `purgeModule` cache busting with `vm` based sandboxing",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/661",
        "text": "[ember-cli-htmlbars]: Remove usage of registerPlugin / unregisterPlugin",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/662",
        "text": "[ember-cli-htmlbars]: Avoid building the template compiler cache key repeatedly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/663",
        "text": "[ember-cli-htmlbars]: Ember Ember 3.27+ can determine global for template compilation",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/665",
        "text": "[ember-cli-htmlbars]: Ensure AST plugins have the same ordering as < ember-cli-htmlbars@5.5.0.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/673",
        "text": "[ember-cli-htmlbars]: Backport template compiler improvements from 5.x",
        "labels": [
          "bug",
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/675",
        "text": "[ember-cli-htmlbars]: Remove development only `optionalDependencies` (`release-it` and `release-it-lerna-changelog`).",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/677",
        "text": "[ember-cli-htmlbars]: Support TypeScript merging of export default declarations in template colocation",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/678",
        "text": "[ember-cli-htmlbars]: Make `setTimeout`/`clearTimeout` available to the template compiler sandbox",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/680",
        "text": "[ember-cli-htmlbars]: Update inline template compilation plugin to avoid errors on rebuilds",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/683",
        "text": "[ember-cli-htmlbars]: Disable the modules API polyfill on Ember 3.27+",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/685",
        "text": "[ember-cli-htmlbars]: Ensure global is present for Node 10 + globalThis polyfill",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/724",
        "text": "[ember-cli-htmlbars]: Use simplified babel plugin on ember 3.27+ and drop unsupported node versions",
        "labels": [
          "enhancement",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/732",
        "text": "[ember-cli-htmlbars]: add `this._super` call to included hook plugin doc",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/733",
        "text": "[ember-cli-htmlbars]: Avoid repeated encoding in getTemplateCompiler",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/735",
        "text": "[ember-cli-htmlbars]: ember-cli-update to 3.28 blueprint",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/737",
        "text": "[ember-cli-htmlbars]: Update blueprint to 3.28",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/739",
        "text": "[ember-cli-htmlbars]: Allow console messages (v6.x, master)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/740",
        "text": "[ember-cli-htmlbars]: Allow console messages (v5.x)",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/741",
        "text": "[ember-cli-htmlbars]: Fix incorrect ember-source version check",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/743",
        "text": "[ember-cli-htmlbars]: Fix lin to ASTPluginBuilder type",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/747",
        "text": "[ember-cli-htmlbars]: Avoid registering `babel-plugin-ember-template-compilation` repeatedly",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/749",
        "text": "[ember-cli-htmlbars]: Drive all template compilation from babel",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/755",
        "text": "[ember-cli-htmlbars]: Add a test that covers addon templates and fix ember-try to include correct ember-cli versions",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/762",
        "text": "[ember-cli-htmlbars]: Upgrade to `babel-plugin-ember-template-compilation` v2",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/764",
        "text": "[ember-cli-htmlbars]: Export non-user-constructible `TemplateFactory` type",
        "labels": [
          "bug",
          "TypeScript"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/772",
        "text": "[ember-cli-htmlbars]: Ensure co-located templates with re-exported class do not throw an error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/773",
        "text": "[ember-cli-htmlbars]: Adjust error message for re-exported class when it has a co-located template",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/775",
        "text": "[ember-cli-htmlbars]: Fix CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/776",
        "text": "[ember-cli-htmlbars]: Clean up",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/784",
        "text": "[ember-cli-htmlbars]: Cleanup unused options",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/785",
        "text": "[ember-cli-htmlbars]: Drop support for node < 18 and ember < 4.12",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/786",
        "text": "[ember-cli-htmlbars]: big cleanup",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1016",
        "text": "[ember-cli-update]: codemods excessively processor intensive",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1019",
        "text": "[ember-cli-update]: Unknown Revision v3.12.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1034",
        "text": "[ember-cli-update]: old addon failure after upgrade to 3.17.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1040",
        "text": "[ember-cli-update]: [Question]: Would ember-cli-update also update the `scripts` path in package.json?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1070",
        "text": "[ember-cli-update]: Add a logo (hacktoberfest)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1072",
        "text": "[ember-cli-update]: Upgrades then downgrades then fails",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1096",
        "text": "[ember-cli-update]: \"args.map is not iterable\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1104",
        "text": "[ember-cli-update]: Cannot select blueprints update with arrow keys",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1147",
        "text": "[ember-cli-update]: `Error: Cannot find module` on Windows",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1153",
        "text": "[ember-cli-update]: Ember-cli update refuse to update a 2.18 app saying it's already at 3.28.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1164",
        "text": "[ember-cli-update]: Deprecation 'template-compiler.registerPlugin' does not provide enough information",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1215",
        "text": "[ember-cli-update]: Don't overwrite README.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1248",
        "text": "[ember-cli-update]: Runs on v2 addon with wrong package name",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/988",
        "text": "[ember-cli-update]: store outputRepo for comparing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/989",
        "text": "[ember-cli-update]: remove --create-custom-diff and make it default",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/998",
        "text": "[ember-cli-update]: Feature Idea: Detect yarn vs npm",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1000",
        "text": "[ember-cli-update]: remove unused fixtures",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1001",
        "text": "[ember-cli-update]: remove init from default command",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1002",
        "text": "[ember-cli-update]: remove subDir test",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1003",
        "text": "[ember-cli-update]: refactor init tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1004",
        "text": "[ember-cli-update]: buildTmp doesn't take commitMessage",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1005",
        "text": "[ember-cli-update]: compare handles no state file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1006",
        "text": "[ember-cli-update]: refactor if blocks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1007",
        "text": "[ember-cli-update]: remove reset from init",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1008",
        "text": "[ember-cli-update]: remove blueprintOptions from default command",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1009",
        "text": "[ember-cli-update]: reset without state file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1010",
        "text": "[ember-cli-update]: simplify blueprints access",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1011",
        "text": "[ember-cli-update]: stats without state file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1013",
        "text": "[ember-cli-update]: schemaVersion semver",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1020",
        "text": "[ember-cli-update]: wrap redirect commands in promise",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1021",
        "text": "[ember-cli-update]: remove unnecessary await that comes later",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1022",
        "text": "[ember-cli-update]: deprecate --resolve-conflicts",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1023",
        "text": "[ember-cli-update]: deprecate ember addon capability",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1025",
        "text": "[ember-cli-update]: support picking a blueprint inside a package",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1026",
        "text": "[ember-cli-update]: init with no base blueprint should not stage files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1027",
        "text": "[ember-cli-update]: add a save test for missing --from",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1028",
        "text": "[ember-cli-update]: reuse open stubbing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1029",
        "text": "[ember-cli-update]: ignore package.json version of ember-cli",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1030",
        "text": "[ember-cli-update]: failing test for out of sync ember-cli version",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1031",
        "text": "[ember-cli-update]: handle glimmer in loadDefaultBlueprintFromDisk",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1032",
        "text": "[ember-cli-update]: refactor loadDefaultBlueprintFromDisk to take an options arg",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1037",
        "text": "[ember-cli-update]: Revert \"Update dependency @kellyselden/node-template to v0.12.0\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1038",
        "text": "[ember-cli-update]: add code to support node 8",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1039",
        "text": "[ember-cli-update]: use min stable version instead of beta",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1062",
        "text": "[ember-cli-update]: use the floating node version in node checks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1063",
        "text": "[ember-cli-update]: increase timeout for \"runs codemods\" test in windows",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1064",
        "text": "[ember-cli-update]: increase `timeout-minutes` for mac",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1066",
        "text": "[ember-cli-update]: test github token",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1071",
        "text": "[ember-cli-update]: Add logo in PNG and SVG and inverted",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1079",
        "text": "[ember-cli-update]: docs: add code documention for some functions called in the index module",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1084",
        "text": "[ember-cli-update]: Make sure a custom blueprint will be used if it's not the default blueprint",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1088",
        "text": "[ember-cli-update]: Revert \"Update dependency @kellyselden/node-template to v1.3.0\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1090",
        "text": "[ember-cli-update]: extract debug util",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1091",
        "text": "[ember-cli-update]: run improvements",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1092",
        "text": "[ember-cli-update]: update boilerplate-update",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1093",
        "text": "[ember-cli-update]: convert to spawn",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1094",
        "text": "[ember-cli-update]: extract tmp helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1097",
        "text": "[ember-cli-update]: use execa instead of exec",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1098",
        "text": "[ember-cli-update]: use setUpCwdReset",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1099",
        "text": "[ember-cli-update]: update deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1101",
        "text": "[ember-cli-update]: update git-fixtures",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1102",
        "text": "[ember-cli-update]: update deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1107",
        "text": "[ember-cli-update]: use `e3` syntax in tests to mean seconds",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1108",
        "text": "[ember-cli-update]: prevent running ember-cli-update-action on a fork",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1133",
        "text": "[ember-cli-update]: run node 12 in appveyor",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1142",
        "text": "[ember-cli-update]: unpin node 12",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1189",
        "text": "[ember-cli-update]: pin floating node version in CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1191",
        "text": "[ember-cli-update]: use pacote instead of npm",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1192",
        "text": "[ember-cli-update]: add yargs-help-output",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1194",
        "text": "[ember-cli-update]: feat!: remove deprecated ability to run as ember addon command",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1195",
        "text": "[ember-cli-update]: disable latest node testing in CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1197",
        "text": "[ember-cli-update]: fix testing syntax",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1203",
        "text": "[ember-cli-update]: Revert \"Update dependency standard-node-template to v2.1.0\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1208",
        "text": "[ember-cli-update]: update @kellyselden/node-template to 2.2.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1210",
        "text": "[ember-cli-update]: increase timeouts for mac",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1211",
        "text": "[ember-cli-update]: use pacote instead of npm cli",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1240",
        "text": "[ember-cli-update]: Fix custom blueprints",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1245",
        "text": "[ember-cli-update]: Setup release-it",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1249",
        "text": "[ember-cli-update]: fix projectName if there is no package.json name",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/984",
        "text": "[ember-cli-update]: allow cwd",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/985",
        "text": "[ember-cli-update]: retire statsOnly",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/986",
        "text": "[ember-cli-update]: loadSafeBlueprint inside loadSafeBlueprintFile",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/987",
        "text": "[ember-cli-update]: keep remoteUrl around for now",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/990",
        "text": "[ember-cli-update]: remove createCustomDiff",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/991",
        "text": "[ember-cli-update]: update boilerplate-update",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/993",
        "text": "[ember-cli-update]: allow custom outputRepo",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/996",
        "text": "[ember-cli-update]: add compare command",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/997",
        "text": "[ember-cli-update]: refactor reset test",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/999",
        "text": "[ember-cli-update]: add codemods command",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/477",
        "text": "[ember-fetch]: Operation outputFileSync is not allowed to use",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/485",
        "text": "[ember-fetch]: Where are all the response headers?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/486",
        "text": "[ember-fetch]: Inconsistent Headers objects with preferNative",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/547",
        "text": "[ember-fetch]: fetch is not defined - maybe your browser targets are not covering everything you need",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/622",
        "text": "[ember-fetch]: Could not find module `rsvp` imported from `fetch`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/624",
        "text": "[ember-fetch]: Version 8.1.0 not released to NPM?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/716",
        "text": "[ember-fetch]: ember-fetch `input` type parameter is incorrect",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/736",
        "text": "[ember-fetch]: `Error: cannot find module rsvp imported from fetch`: Ember 4.12 + embroider-optimized scenario ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/447",
        "text": "[ember-fetch]: Remove ember-fetch/mixins/adapter-fetch ember-fetch/ajax, drop node 8",
        "labels": [
          "breaking",
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/468",
        "text": "[ember-fetch]: Ignore fastboot build output file if app unused/disable fastboot",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/476",
        "text": "[ember-fetch]: Convert co to async await",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/478",
        "text": "[ember-fetch]: Bump broccoli-concat to pick up transitive dependency fix",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/493",
        "text": "[ember-fetch]: Resolve FastBoot dependencies at compile time",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/517",
        "text": "[ember-fetch]: Remove mentioning ajax from readme",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/568",
        "text": "[ember-fetch]: Updates the type for data property to be less restrictive.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/581",
        "text": "[ember-fetch]: Upgrade devDepedencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/620",
        "text": "[ember-fetch]: Fix ember global",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/623",
        "text": "[ember-fetch]: Allow to use native promises instead of RSVP",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/636",
        "text": "[ember-fetch]: Replace console.warn with Ember.debug",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/638",
        "text": "[ember-fetch]: Disable jQuery integration to silence build warning",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/639",
        "text": "[ember-fetch]: Upgrade ember-qunit",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/640",
        "text": "[ember-fetch]: add node_modules to eslintignore",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/641",
        "text": "[ember-fetch]: Update CI.yml to run node tests on linux, macOS, and windows",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/642",
        "text": "[ember-fetch]: Octane the dummy app, set ember.edition",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/643",
        "text": "[ember-fetch]: Upgrade ember-data",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/708",
        "text": "[ember-fetch]: Avoid `ember-polyfills.deprecate-assign` deprecation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/717",
        "text": "[ember-fetch]: [types] fix typedef for fetch to match spec",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/737",
        "text": "[ember-fetch]: Rename import path to 'ember-fetch'",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/740",
        "text": "[ember-fetch]: Rewrite ember-fetch to a v2 addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-page-title/pull/258",
        "text": "[ember-page-title]: Drop support for IE 11",
        "labels": [
          "Cleanup",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/466",
        "text": "[ember-try]: `ember try:reset` with workspaces",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/598",
        "text": "[ember-try]: Stop backing up `node_modules`? 🤔",
        "labels": [
          "question"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/599",
        "text": "[ember-try]: Move backups to system tmp directory (instead of in project)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/744",
        "text": "[ember-try]: `pnpm` or generic package manager support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/813",
        "text": "[ember-try]: Error: Cannot copy '../semver/bin/semver.js' to a subdirectory of itself",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/944",
        "text": "[ember-try]: ember-try seems to be broken in Ember beta/canary",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/967",
        "text": "[ember-try]: Error cleaning up npm scenario: Error: Cannot copy '../../../../../esprima/bin/esvalidate.js' to a subdirectory of itself",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/463",
        "text": "[ember-try]: Handle additional `yarn` workspace definition formats",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/467",
        "text": "[ember-try]: Ensure Yarn Workspace adapter supports `ember try:reset`.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/512",
        "text": "[ember-try]: Drop support for Node.js 6.x, 8.x, 11.x and 13.x",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/583",
        "text": "[ember-try]: Update to use async/await modern language features.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/585",
        "text": "[ember-try]: Use `ember-addon.configPath` from `package.json` if defined.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/586",
        "text": "[ember-try]: Drop support for scenarios with bower.",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/784",
        "text": "[ember-try]: Update Build Status badge: Travis -> GH Actions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/785",
        "text": "[ember-try]: Update npmignore file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/787",
        "text": "[ember-try]: Implement `pnpm` adapter",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/798",
        "text": "[ember-try]: Fix a link in CHANGELOG.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/821",
        "text": "[ember-try]: Use `dereference` when copying node_modules",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/843",
        "text": "[ember-try]: Fix copy options",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/850",
        "text": "[ember-try]: Add support for npm overrides",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/896",
        "text": "[ember-try]: Fixed version of ember-try-test-suite-helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/912",
        "text": "[ember-try]: Downgraded fs-extra version to 6.x to fix a fs.copy related issue.",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/913",
        "text": "[ember-try]: Bump node to supported versions",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/920",
        "text": "[ember-try]: Drop Node.js 14 support",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/935",
        "text": "[ember-try]: add @ember/string to ember-canary scenario to fix CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/956",
        "text": "[ember-try]: Remove warning about pnpm",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/957",
        "text": "[ember-try]: Document pnpm options and behavior",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/958",
        "text": "[ember-try]: Update and test pnpm behavior so that we simulate a new user install",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/959",
        "text": "[ember-try]: Fix CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/960",
        "text": "[ember-try]: Use pnpm's --no-lockfile",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/961",
        "text": "[ember-try]: use --no-package-lock in npm",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/962",
        "text": "[ember-try]: Stop backing up the `node_modules` folder",
        "labels": [
          "bug",
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/964",
        "text": "[ember-try]: Drop support for npm v4",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/965",
        "text": "[ember-try]: Use the system's temp folder for backing up package-manager files",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/966",
        "text": "[ember-try]: Enforce resolution-mode=highest for pnpm versions 8.0.0 to 8.6.*",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/968",
        "text": "[ember-try]: Update Node support (drop v16, test against v20 and v21)",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1134",
        "text": "[ember-qunit]: Ensure folks get bugfixes when installing ember-qunit",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/939",
        "text": "[rfcs]: Introduce import.meta.glob",
        "labels": [
          "Final Comment Period",
          "S-Exploring"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/270",
        "text": "[ember-auto-import]: Slow warm boot times in large apps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/276",
        "text": "[ember-auto-import]: Support dynamic import from URL",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/278",
        "text": "[ember-auto-import]: `AutoImport.lookup(appOrAddon)` doesn't support multi-project builds",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/280",
        "text": "[ember-auto-import]: Webpack produced output is not deterministic",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/284",
        "text": "[ember-auto-import]: Imported module is bundled into vendor.js instead of test-support.js",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/286",
        "text": "[ember-auto-import]: Component with ember-concurrency-decorators gives \"Ignoring an unparseable file\" error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/291",
        "text": "[ember-auto-import]: Two versions of babel-core dependencies?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/292",
        "text": "[ember-auto-import]: The URL to the chunk is interrupted when a Yahoo or GoogleTagManager tracker exists on the page.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/296",
        "text": "[ember-auto-import]: webpack NODE_ENV always set to production ?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/314",
        "text": "[ember-auto-import]: Chunk file missing /assets prefix",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/315",
        "text": "[ember-auto-import]: Broken sourcemaps for vendor.js",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/316",
        "text": "[ember-auto-import]: Sourcemaps for dynamically imported chunks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/318",
        "text": "[ember-auto-import]: Snyk - Vulnerability Issue",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/320",
        "text": "[ember-auto-import]: No 1.7.0 release tag in the repo",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/321",
        "text": "[ember-auto-import]: Webpack 5 support?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/335",
        "text": "[ember-auto-import]: i'm getting spread operators in IE 11",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/340",
        "text": "[ember-auto-import]: Dependancies not getting imported when leader parent has isEnabled hook that evaluates to false",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/344",
        "text": "[ember-auto-import]: v1.10.1 seems to cause issues when blacklisting an addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/349",
        "text": "[ember-auto-import]: Webpack configuration duplicated for main app",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/351",
        "text": "[ember-auto-import]: Plans to publish new version?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/352",
        "text": "[ember-auto-import]: Lazy loaded chunks and Google Tag Manager",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/353",
        "text": "[ember-auto-import]: Importing a module not specified in package.json",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/354",
        "text": "[ember-auto-import]: Somehow detect app namespace import",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/359",
        "text": "[ember-auto-import]: Dependencies in `.ts` files not included with latest `ember-cli-babel`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/363",
        "text": "[ember-auto-import]: How do you import a json file?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/365",
        "text": "[ember-auto-import]: v1.11.0 causes webpack SplitChunksPlugin error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/368",
        "text": "[ember-auto-import]: v1.11.0+ breaks aliased dynamic imports",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/371",
        "text": "[ember-auto-import]: Dependencies are not properly transpiled with expected babel options/plugins",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/373",
        "text": "[ember-auto-import]: Could not find module, from fresh addon named with the format of `@prefix/suffix`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/378",
        "text": "[ember-auto-import]: auto-imported library source code appears multiple times in production vendor.js",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/381",
        "text": "[ember-auto-import]: Unable to use CDN url in publicAssetURL",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/384",
        "text": "[ember-auto-import]: how do i import ember-ace or ember-calendar package?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/387",
        "text": "[ember-auto-import]: Getting Error: Cannot read property 'chrome' of undefined while updating ember-cli to 3.26.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/388",
        "text": "[ember-auto-import]: Can't resolve 'p-queue'",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/391",
        "text": "[ember-auto-import]: [beta] need to pass browserslist through to webpack",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/403",
        "text": "[ember-auto-import]: [v2] Hundreds of Babel warnings",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/404",
        "text": "[ember-auto-import]: v2 fails build because config.targets given to Webpack is incorrect type",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/407",
        "text": "[ember-auto-import]: [v2] Import of an unavailable module returns an empty object",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/411",
        "text": "[ember-auto-import]: 2.x not compatible with broccoli-asset-rev prepend",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/412",
        "text": "[ember-auto-import]: Defining webpack externals breaks addon v2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/416",
        "text": "[ember-auto-import]: Cannot use `styleLoaderOptions`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/417",
        "text": "[ember-auto-import]: can't figure out how to make v2 work with ember tests when using node polyfills",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/418",
        "text": "[ember-auto-import]: Support Custom Script Attributes when inserting",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/422",
        "text": "[ember-auto-import]: Outputs file when not used in app",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/423",
        "text": "[ember-auto-import]: Could not find module `reserved-subdomains`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/425",
        "text": "[ember-auto-import]: <my-addon> tried to import \"qunit\" from addon code, but \"qunit\" is a devDependency. You may need to move it into dependencies.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/426",
        "text": "[ember-auto-import]: Remove code splitting and chunks on v2 with webpack 5",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/427",
        "text": "[ember-auto-import]: Unable to use Webpack Loaders",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/429",
        "text": "[ember-auto-import]: Auto reload issue after upgrade to 2.0.2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/436",
        "text": "[ember-auto-import]: Could not find module qunit imported from <my-app or addon>/tests/test-helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/444",
        "text": "[ember-auto-import]: Can't disable sourcemaps with forbidEval set",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/449",
        "text": "[ember-auto-import]: Analyzer messing up import names at the chunk boundaries",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/456",
        "text": "[ember-auto-import]: Addon-test-support importing from devDeps in addons is failing in some cases",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/457",
        "text": "[ember-auto-import]: Runtime problem missing cjs support when consuming dual module package format dependency",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/459",
        "text": "[ember-auto-import]: Relationship between app and add ons using different versions of ember-auto-import",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/464",
        "text": "[ember-auto-import]: Occasional EBADF during Analyzer runs on 2.2.3",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/469",
        "text": "[ember-auto-import]: Editing CSS files causes whole page to reload",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/474",
        "text": "[ember-auto-import]: Issues Upgrading to 2.X",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/477",
        "text": "[ember-auto-import]: Babel analyzer running before `each()` from `@embroider/macros` gets a chance to transpose imports",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/482",
        "text": "[ember-auto-import]: Can't enable babel plugin to transpil auto-imported deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/493",
        "text": "[ember-auto-import]: [2.4.0] Building in `production` environment fingerprints CSS chunk files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/497",
        "text": "[ember-auto-import]: Could not find module `async-mqtt` after upgrading to ember-auto-import V2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/501",
        "text": "[ember-auto-import]: Build fail after upgrading from 2.2.x to 2.3+",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/504",
        "text": "[ember-auto-import]: v2 addons don't always get ideal execution order",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/508",
        "text": "[ember-auto-import]: Dynamically importing module from a pubilc URL",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/514",
        "text": "[ember-auto-import]: Add ability to pass options to `MiniCssExtractPlugin`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/527",
        "text": "[ember-auto-import]: Upgrade issues",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/529",
        "text": "[ember-auto-import]: Build issue because of \"Invalid configuration object\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/532",
        "text": "[ember-auto-import]: Updating to ember-auto-import@2 is now not able to find module but only in prember",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/534",
        "text": "[ember-auto-import]: Uncaught Error: Could not find module `fast-memoize`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/536",
        "text": "[ember-auto-import]: @cached is \"not a decorator\" when used in a v2 addon being imported by an Ember 3.28 app with ember-auto-import  2.4.2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/543",
        "text": "[ember-auto-import]: Chunk generated for v2 addon is not respecting public entrypoints",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/549",
        "text": "[ember-auto-import]: Auto import not working when using ember-cli-babel with custom babel config",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/554",
        "text": "[ember-auto-import]: Importing assets with query params does not work",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/555",
        "text": "[ember-auto-import]: Getting `development` versions of modules by default",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/564",
        "text": "[ember-auto-import]: Expected hash or Mixin instance, got [object Undefined] after upgrading to 2.6.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/565",
        "text": "[ember-auto-import]: Feature: allow ember-auto-import to own parts of of the app",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/567",
        "text": "[ember-auto-import]: Need support so that we can add a nonce value with the scripts added for the chunks by ember-auto-import",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/570",
        "text": "[ember-auto-import]: Looking for some _hopefully very light_ maintainer support as I troubleshoot an annoyingly long warm boot",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/572",
        "text": "[ember-auto-import]: Local ESM module dependencies not resolving.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/578",
        "text": "[ember-auto-import]: Error using ember-moment since 2.6.2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/582",
        "text": "[ember-auto-import]: Bug introduced by #574 when using conditional importSync",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/583",
        "text": "[ember-auto-import]: Cannot find require and module definitions when upgrading to v2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/590",
        "text": "[ember-auto-import]: Embroider app doesn't detect runtime changes of v2 addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/591",
        "text": "[ember-auto-import]: Transitive Dependency Resolution Breaks Build on Recursive v2 Addons",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/593",
        "text": "[ember-auto-import]: Add polyfill use case to FAQ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/611",
        "text": "[ember-auto-import]: issue with gts/gjs if ts transform is enabled ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/612",
        "text": "[ember-auto-import]: error after ember upgrade - Module not found: Error: Can't resolve 'ember-qunit/qunit-module'",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/269",
        "text": "[ember-auto-import]: Explain the entry point in README",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/271",
        "text": "[ember-auto-import]: optional output fastboot files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/272",
        "text": "[ember-auto-import]: Update node version to 12.x (latest LTS)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/277",
        "text": "[ember-auto-import]: Fix CSP issue in apps using the addon indirectly",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/279",
        "text": "[ember-auto-import]: fix: support multiple projects in one process",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/281",
        "text": "[ember-auto-import]: add [id] to the chunkname",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/288",
        "text": "[ember-auto-import]: Ensure auto-import processes the same extensions as ember-cli-babel",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/289",
        "text": "[ember-auto-import]: Update minimum version of @babel/preset-env to 7.10.2.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/293",
        "text": "[ember-auto-import]: support dynamic import from template urls",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/294",
        "text": "[ember-auto-import]: Update regex to work with scoped npm packages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/299",
        "text": "[ember-auto-import]: upgrade webpack",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/301",
        "text": "[ember-auto-import]: Update CONTRIBUTING.md to make sure people cd into the right place.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/304",
        "text": "[ember-auto-import]: Fix merging addon webpack configs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/308",
        "text": "[ember-auto-import]: Update @embroider/core dependency",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/312",
        "text": "[ember-auto-import]: upgrade ember-cli-babel to v7",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/319",
        "text": "[ember-auto-import]: Allow semver matching versions of libraries to pass the safe version check",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/322",
        "text": "[ember-auto-import]: upgrade typescript",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/323",
        "text": "[ember-auto-import]: updating some deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/325",
        "text": "[ember-auto-import]: updating discovery protocol",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/326",
        "text": "[ember-auto-import]: minor tweak to use better types",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/327",
        "text": "[ember-auto-import]: [chore] bump webpack to v5",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/328",
        "text": "[ember-auto-import]: Migrate from resolve.sync and pkgUp to resolve-package-path",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/329",
        "text": "[ember-auto-import]: Infer bundle type (app vs test) by original tree if known.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/330",
        "text": "[ember-auto-import]: Ensure `bundleForTreeType` returns the proper values.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/331",
        "text": "[ember-auto-import]: Template string import",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/332",
        "text": "[ember-auto-import]: clean up linter setup",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/333",
        "text": "[ember-auto-import]: testing a different ci strategy",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/334",
        "text": "[ember-auto-import]: feat: resolve alias as prefix",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/336",
        "text": "[ember-auto-import]: entrypoint files don't get transpiled",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/339",
        "text": "[ember-auto-import]: running ember-cli-update",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/341",
        "text": "[ember-auto-import]: Throw error if isEnabled hook of leaders parent returns false",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/342",
        "text": "[ember-auto-import]: Ensure babel compilation ignores a `babel.config.js`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/347",
        "text": "[ember-auto-import]: WIP: Support importSync from @embroider/macros",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/348",
        "text": "[ember-auto-import]: allow unambiguous data URIs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/350",
        "text": "[ember-auto-import]: introduce watchDependencies option",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/355",
        "text": "[ember-auto-import]: handle symlinked app case",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/356",
        "text": "[ember-auto-import]: Convert sample-typescript package to new testing pattern",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/357",
        "text": "[ember-auto-import]: Layered tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/358",
        "text": "[ember-auto-import]: [WIP] Skip Babel Test",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/360",
        "text": "[ember-auto-import]: Ensure babel compilation ignores a `babel.config.js`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/362",
        "text": "[ember-auto-import]: Fix compatibility with ember-cli-babel@7.26+",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/364",
        "text": "[ember-auto-import]: test apps should not automatically depend on auto-import",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/366",
        "text": "[ember-auto-import]: Expanding test coverage",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/367",
        "text": "[ember-auto-import]: Fixing common chunk bug",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/369",
        "text": "[ember-auto-import]: Revert \"feat: resolve alias as prefix\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/370",
        "text": "[ember-auto-import]: Reimplement prefix aliasing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/374",
        "text": "[ember-auto-import]: Pull in fewer deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/375",
        "text": "[ember-auto-import]: extracting scenario-tester",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/376",
        "text": "[ember-auto-import]: Make v2 shim",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/377",
        "text": "[ember-auto-import]: Fix config duplication",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/379",
        "text": "[ember-auto-import]: 2.0 upgrade guide",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/380",
        "text": "[ember-auto-import]: fix(analyzer): ignore type-only imports & exports",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/382",
        "text": "[ember-auto-import]: drop babel6 support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/383",
        "text": "[ember-auto-import]: v3 leader election protocol",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/385",
        "text": "[ember-auto-import]: Refactoring chunk appending strategy",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/386",
        "text": "[ember-auto-import]: silence babel's unhelpful warning",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/389",
        "text": "[ember-auto-import]: Make apps control the webpack dependency",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/390",
        "text": "[ember-auto-import]: Improving browser targets test coverage",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/392",
        "text": "[ember-auto-import]: [beta] IE11 fix",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/393",
        "text": "[ember-auto-import]: Fix typo in README.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/394",
        "text": "[ember-auto-import]: updating test suite dependencies and minimum tested versions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/395",
        "text": "[ember-auto-import]: stick with older ember-cli-babel API due to bug",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/396",
        "text": "[ember-auto-import]: Run inserter before asset-rev",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/397",
        "text": "[ember-auto-import]: Fix typo in 2.0 upgrade guide",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/398",
        "text": "[ember-auto-import]: update self dep in test suite",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/399",
        "text": "[ember-auto-import]: reactivate test under canary",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/400",
        "text": "[ember-auto-import]: promoting beta to 2.0 final",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/401",
        "text": "[ember-auto-import]: docs(CHANGELOG): fix link to guide upgrade to v2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/405",
        "text": "[ember-auto-import]: Remove unused resolutions field.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/406",
        "text": "[ember-auto-import]: fix inconsistent \"loose\" babel warning",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/408",
        "text": "[ember-auto-import]: Add ability to specify options to `style-loader` and `css-loader`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/414",
        "text": "[ember-auto-import]: [BUGFIX] webpack detection should also consider supported versions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/415",
        "text": "[ember-auto-import]: respect publicAssetURL for entry chunks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/421",
        "text": "[ember-auto-import]: Fix publicAssetURL typo in v2 upgrade docs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/424",
        "text": "[ember-auto-import]: Support Customized HTML Insertion and Custom Entrypoints",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/430",
        "text": "[ember-auto-import]: fix potential spelling mistake",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/432",
        "text": "[ember-auto-import]: switch default branch to \"main\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/433",
        "text": "[ember-auto-import]: [v1.x] fix(analyzer): ignore type-only imports & exports",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/434",
        "text": "[ember-auto-import]: chore(pkg): move `.md` files to published package",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/435",
        "text": "[ember-auto-import]: Print file path when an import resolution error occurs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/437",
        "text": "[ember-auto-import]: relax semver check",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/438",
        "text": "[ember-auto-import]: update tests to match current version and add a safety check",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/440",
        "text": "[ember-auto-import]: Optimizing analyzer",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/441",
        "text": "[ember-auto-import]: Add package.json repository field",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/442",
        "text": "[ember-auto-import]: mixing of old and new analyzer patterns",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/447",
        "text": "[ember-auto-import]: upgrade scenario-tester",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/448",
        "text": "[ember-auto-import]: docs: fix link to upgrade guide in changelog",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/451",
        "text": "[ember-auto-import]: Support .mjs extensions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/454",
        "text": "[ember-auto-import]: Prevent loss of characters in case of false end-partial-match",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/458",
        "text": "[ember-auto-import]: Fix not passing the correct options to `style-loader` and `css-loader`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/460",
        "text": "[ember-auto-import]: Detect reexport all",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/461",
        "text": "[ember-auto-import]: package.json: Add `directory` metadata",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/463",
        "text": "[ember-auto-import]: windows symlinks->junctions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/466",
        "text": "[ember-auto-import]: Avoid EBADF on ReadStream early close in Node 12",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/467",
        "text": "[ember-auto-import]: Add ESBuild for minification",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/470",
        "text": "[ember-auto-import]: Prevent ebadf",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/473",
        "text": "[ember-auto-import]: chore(documentation): fix upgrade guide link",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/480",
        "text": "[ember-auto-import]: Provide context to errors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/481",
        "text": "[ember-auto-import]: Dependency updates",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/484",
        "text": "[ember-auto-import]: bump the embroider package versions we're testing against",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/485",
        "text": "[ember-auto-import]: support v2-addons that contain embroider/macros ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/486",
        "text": "[ember-auto-import]: Updating to newer @embroider/shared-internals",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/487",
        "text": "[ember-auto-import]: concat mixed configuration for webpack externals",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/489",
        "text": "[ember-auto-import]: Update to latest @embroider/internals and @embroider/macros",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/490",
        "text": "[ember-auto-import]: backporting newer embroider dep into 1.x series",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/491",
        "text": "[ember-auto-import]: fix test linkage",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/492",
        "text": "[ember-auto-import]: fastboot css fixes",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/496",
        "text": "[ember-auto-import]: don't let broccoli-asset-rev mess with css chunks",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/507",
        "text": "[ember-auto-import]: Clarify upgrade guide for addon",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/510",
        "text": "[ember-auto-import]: avoid unnecssary full page reloads",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/513",
        "text": "[ember-auto-import]: Fix NPM command in CONTRIBUTING.md ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/516",
        "text": "[ember-auto-import]: Bump LTS versions + ember-cli-dependency-checker versions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/517",
        "text": "[ember-auto-import]: Fix our usage of volta in the test suite",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/518",
        "text": "[ember-auto-import]: Fix `style-loader` not being in effect in `production` environments",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/520",
        "text": "[ember-auto-import]: Allow disabling sourcemaps when forbidEval is set (v1.x)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/521",
        "text": "[ember-auto-import]: Adjust appRoot to account for dummy apps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/522",
        "text": "[ember-auto-import]: upgrade scenario-tester",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/523",
        "text": "[ember-auto-import]: Allow user webpack config to override internal config",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/524",
        "text": "[ember-auto-import]: Prioritize user's devTool setting",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/526",
        "text": "[ember-auto-import]: Fix typo in docs",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/530",
        "text": "[ember-auto-import]: Move Dynamic Template Import error to runtime instead of a build error",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/531",
        "text": "[ember-auto-import]: Improve upgrade-guide",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/533",
        "text": "[ember-auto-import]: update package-lock.json version of htmlbars",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/535",
        "text": "[ember-auto-import]: use node path.join to build os specific file name",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/541",
        "text": "[ember-auto-import]: Respect v2 addon's explicit external list",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/544",
        "text": "[ember-auto-import]: Add support for consumers using Node ES Module support (e.g. `type=module` in `package.json`)",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/548",
        "text": "[ember-auto-import]: Ensure chunk filenames are consistent for long-term caching",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/550",
        "text": "[ember-auto-import]: update embroider/shared-internals",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/553",
        "text": "[ember-auto-import]: Add v1 addons that could be consumed by v2 addons in module-scope to …",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/561",
        "text": "[ember-auto-import]: Restructure entry file bundle logic to support \"layering\" - Rebase",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/562",
        "text": "[ember-auto-import]: Prevent HTML-escaping of module specifiers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/563",
        "text": "[ember-auto-import]: remove incorrect version safety check",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/568",
        "text": "[ember-auto-import]: Change default boot set",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/569",
        "text": "[ember-auto-import]: Fix wrong detection of ember-source version for earlyBootSet",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/573",
        "text": "[ember-auto-import]: added babel-plugin-ember-template-compilation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/574",
        "text": "[ember-auto-import]: Detect where modules loop back to AMD from webpack",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/575",
        "text": "[ember-auto-import]: Update blueprints for ember canary compat",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/576",
        "text": "[ember-auto-import]: Fix missing babel-plugin-ember-template-compilation dependency",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/587",
        "text": "[ember-auto-import]: Feature: allowAppImports",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/594",
        "text": "[ember-auto-import]: Add section on importing a module for side affects only to the README.md",
        "labels": [
          "documentation"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/596",
        "text": "[ember-auto-import]: Support private properties and static blocks",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/602",
        "text": "[ember-auto-import]: Allow arbitrary extensions for app-imports",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/603",
        "text": "[ember-auto-import]: Fix imports with a query part",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/605",
        "text": "[ember-auto-import]: Add es-compat to make asset loaders work as expected",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/606",
        "text": "[ember-auto-import]: Fix dynamic import inside allowAppImports dirs",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/613",
        "text": "[ember-auto-import]: fix imports analysis of gts",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/mainmatter/qunit-dom/pull/2065",
        "text": "[qunit-dom]: v3: Maximize compatibility",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/524",
        "text": "[ember-cli-htmlbars]: Runtime error on import { hbs } from 'ember-cli-htmlbars' in storybook",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/583",
        "text": "[ember-cli-htmlbars]: Colocation does not work with anonymous classes and class decorators",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/641",
        "text": "[ember-cli-htmlbars]: Update `templateOnly` compilation to pass the source moduleName as the first argument.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/686",
        "text": "[ember-cli-htmlbars]: [Bug] In-editor breakpoints broken because of source map discrepancies",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/713",
        "text": "[ember-cli-htmlbars]: Implements RFC 496 Incorrectly",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/753",
        "text": "[ember-cli-htmlbars]: Convert to TS or supply ambient definitions",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/774",
        "text": "[ember-cli-htmlbars]: app's TS files do not properly overwrite an addon's JS files",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/779",
        "text": "[ember-cli-htmlbars]: Code coverage off by 2 lines in components with co-located template",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/781",
        "text": "[ember-cli-htmlbars]: Version 6.0.1+ ignores --silent flag",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/issues/787",
        "text": "[ember-cli-htmlbars]: TemplateFactory type incompatible with setComponentTemplate type from @types/ember__component",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/558",
        "text": "[ember-cli-htmlbars]: Place colocated templates after the default export",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/738",
        "text": "[ember-cli-htmlbars]: chore: replace json-stable-stringify with safe-stable-stringify",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-htmlbars/pull/763",
        "text": "[ember-cli-htmlbars]: Fix colocated source maps",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1017",
        "text": "[ember-cli-update]: add new command",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1018",
        "text": "[ember-cli-update]: support using a custom blueprint output repo to update",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1041",
        "text": "[ember-cli-update]: ember-cli-update creates new app in /tmp",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1045",
        "text": "[ember-cli-update]: Errors on Windows:",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1050",
        "text": "[ember-cli-update]: Always wanting to jump to 3.18.0 (latest as of time of writing)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1051",
        "text": "[ember-cli-update]: Support relative paths to blueprint packages without publishing packages for those blueprints?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1054",
        "text": "[ember-cli-update]: Codemod failure on windows due to too many files on argument list",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1073",
        "text": "[ember-cli-update]: Doesn't work any more on Windows",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1074",
        "text": "[ember-cli-update]: should remove ember-cli-shims",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1075",
        "text": "[ember-cli-update]: Doesn't work with untagged blueprints",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1078",
        "text": "[ember-cli-update]: Blueprint isn't run if it doesn't match the package name",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1095",
        "text": "[ember-cli-update]: ember-cli-updates.json schema makes it seem like multiple blueprint to one package is supported but the code does not reflect that",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1103",
        "text": "[ember-cli-update]: feature request: hierarchal blueprint support or dependent blueprint support",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1105",
        "text": "[ember-cli-update]: Can't ran any of the codemods",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1106",
        "text": "[ember-cli-update]: Does not work with monorepos -- too many similar files between projects",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1109",
        "text": "[ember-cli-update]: [suggestion] Clarify the choose-blueprint-updates step ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1114",
        "text": "[ember-cli-update]: Enable codemods to be run with flags",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1115",
        "text": "[ember-cli-update]: gpg failed to sign the data",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1116",
        "text": "[ember-cli-update]: doesn't include blueprint changes to ember-cli-update.json",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1148",
        "text": "[ember-cli-update]: --to flag still prompting for user interaction",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1150",
        "text": "[ember-cli-update]: Error serving Ember app after updating via ember-cli-update",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1154",
        "text": "[ember-cli-update]: How do you test changes to a blueprint without publishing?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1160",
        "text": "[ember-cli-update]: Error: not supported",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1167",
        "text": "[ember-cli-update]: Node version support doesn't match codemods",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1218",
        "text": "[ember-cli-update]: Error while running:  ember-cli-update",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1254",
        "text": "[ember-cli-update]: How do you pass args to `ember new` when generating a diff? (ECU to get TS blueprint in a JS project)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1255",
        "text": "[ember-cli-update]: [Feature Request] allow passing flags to the underlying blueprint to allow migrating to different configurations",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/1256",
        "text": "[ember-cli-update]: Codemods are all failing",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/issues/995",
        "text": "[ember-cli-update]: throwing error when running with diff.noprefix true",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1052",
        "text": "[ember-cli-update]: support local paths",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1155",
        "text": "[ember-cli-update]: Fix to force a treatment (in case of using the \"--to\" parameter)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1193",
        "text": "[ember-cli-update]: feat!: remove deprecated `--resolve-conflicts`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1196",
        "text": "[ember-cli-update]: Revert \"disable latest node testing in CI\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1241",
        "text": "[ember-cli-update]: Revert \"add code to support node 8\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1246",
        "text": "[ember-cli-update]: Drop support for Node 14",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli-update/pull/1247",
        "text": "[ember-cli-update]: Testing patched boilerplate-update",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/600",
        "text": "[ember-fetch]: Ember 3.27+ issues deprecation for accessing `window.Ember`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/625",
        "text": "[ember-fetch]: Migration from jquery.ajax $.ajaxSettings.traditional = true. How remove [] from params",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/644",
        "text": "[ember-fetch]: Dropping Node 10, older versions of Ember",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/656",
        "text": "[ember-fetch]: Archive this repo?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/693",
        "text": "[ember-fetch]: Deprecation warning for assign() from ember/polyfills",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/701",
        "text": "[ember-fetch]: Failed to execute 'fetch' on 'Window': Failed to read the 'signal' property from 'RequestInit': Failed to convert value to 'AbortSignal'.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/707",
        "text": "[ember-fetch]: ember-polyfills.deprecate-assign deprication in Ember 4.4",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/730",
        "text": "[ember-fetch]: Upgrade package \"node-fetch\" to fix ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/554",
        "text": "[ember-fetch]: Test ember-fetch against an embroider build",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/563",
        "text": "[ember-fetch]: Update ember-cli-typescript to 4.0.0. and update types to latest version",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/584",
        "text": "[ember-fetch]: chore: upgrade ember-source, ember-cli, ember-data",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/633",
        "text": "[ember-fetch]: feat(build): add `includePolyfill: never`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/665",
        "text": "[ember-fetch]: Update npmignore file",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/732",
        "text": "[ember-fetch]: Move to new ember-fetch import path",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/741",
        "text": "[ember-fetch]: breaking: drops `Ember < 3.28`, upgrades to `Ember 4.12`,  supports `Ember 5`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/742",
        "text": "[ember-fetch]: drop support for node < 16",
        "labels": [
          "breaking"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/pull/743",
        "text": "[ember-fetch]: update to v3.28 with ember-cli-update",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/579",
        "text": "[ember-try]: Dependencies can leak between scenarios",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/597",
        "text": "[ember-try]: Stop using `--no-lockfile` / `--no-shrinkwrap` by default? 🤔",
        "labels": [
          "question"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/741",
        "text": "[ember-try]: Yarn Berry (v2 & v3) is not supported: Unsupported option name (\"--no-lockfile\")",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/828",
        "text": "[ember-try]: Support test reporters for CI",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/851",
        "text": "[ember-try]: ember try:ember seems to be doing a bit too much",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/881",
        "text": "[ember-try]: Yarn workspaces",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/891",
        "text": "[ember-try]: pnpm peer-dependency install issue",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/issues/892",
        "text": "[ember-try]: pnpm workspace support",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/740",
        "text": "[ember-try]: Added missing ',' to make configuration file valid",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/807",
        "text": "[ember-try]: use examples available in default ember addon blueprints",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/814",
        "text": "[ember-try]: updates cli-table3 dependency to version 0.6.1",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-try/pull/839",
        "text": "[ember-try]: Add `pnpm` adapter usage to README.md",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/ember.js/issues/20621",
        "text": "[ember.js]: [Bug] Types cannot be found when using type=module, moduleResolution=node16",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/273",
        "text": "[ember-auto-import]: Gridstack is not getting removed from vendor file while using ember-auto-import",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/274",
        "text": "[ember-auto-import]: Re-import failed dynamic import",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/275",
        "text": "[ember-auto-import]: CSP failure in consumers of ember-auto-import ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/283",
        "text": "[ember-auto-import]: Duplicate plugin/preset detected ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/285",
        "text": "[ember-auto-import]: Potential security vulnerability in webpack dependency",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/287",
        "text": "[ember-auto-import]: Electron Issue",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/298",
        "text": "[ember-auto-import]: how to import a babel webpack plugin ?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/300",
        "text": "[ember-auto-import]: \"Can't resolve 'videojs'\" error when building for production",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/305",
        "text": "[ember-auto-import]: Dependency 'webpack' leads to transitive dependency that does not support Node >8.10",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/309",
        "text": "[ember-auto-import]: Please document minimum versions of ember-cli and ember-cli-babel.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/310",
        "text": "[ember-auto-import]: Missing dynamic import should be a runtime error",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/311",
        "text": "[ember-auto-import]: How to import loader generated chunk file?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/313",
        "text": "[ember-auto-import]: [question] can not import files nested in a cjs module",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/317",
        "text": "[ember-auto-import]: Usage without `ember-cli-babel`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/337",
        "text": "[ember-auto-import]: Getting CssSyntaxError when using webpack with css-loader",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/338",
        "text": "[ember-auto-import]: Support the node conditional export for fastboot",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/346",
        "text": "[ember-auto-import]: /scripts/test.sh used by yarn test and referenced in CONTRIBUTING.md does not exist",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/372",
        "text": "[ember-auto-import]: Build breaks after installing ember-link (which uses v1.11.2)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/402",
        "text": "[ember-auto-import]: unused package?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/409",
        "text": "[ember-auto-import]: Support changing the asset rootURL at runtime",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/410",
        "text": "[ember-auto-import]: Not importing from @bugsnag/js",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/413",
        "text": "[ember-auto-import]: Production source maps contain no `sourcesContent`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/419",
        "text": "[ember-auto-import]: Build error when using importSync in a classic build with v2",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/420",
        "text": "[ember-auto-import]: Breaks when using script defer",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/428",
        "text": "[ember-auto-import]: Dynamic import does not work with embroider",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/431",
        "text": "[ember-auto-import]: @comunica dependency not working with ember-auto-import",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/439",
        "text": "[ember-auto-import]: Make test suite compatible with ember-source 4.0",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/443",
        "text": "[ember-auto-import]: Using watchDependencies causes full page reload when editing in-app css",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/446",
        "text": "[ember-auto-import]: How to use \"main\" for FastBoot environment instead of \"module\" in package.json?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/450",
        "text": "[ember-auto-import]: Upgrade to 2.2.0 has caused module loading problems",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/455",
        "text": "[ember-auto-import]: Webpack 5 Module Federation",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/462",
        "text": "[ember-auto-import]: Build fails on windows",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/465",
        "text": "[ember-auto-import]: Fails when `targets` is defined in an unconventional way",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/468",
        "text": "[ember-auto-import]: Hangs on build when mix of versions",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/471",
        "text": "[ember-auto-import]: Can't import modules if using `useBabelConfig: true`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/472",
        "text": "[ember-auto-import]: Way to access generated entrypoint chunks without index.html parsing",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/475",
        "text": "[ember-auto-import]: How to include/exclude when I do dynamic import using template string?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/476",
        "text": "[ember-auto-import]: Performance: Hot build potentially slower in v2",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/478",
        "text": "[ember-auto-import]: Chunk file output not deterministic",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/488",
        "text": "[ember-auto-import]: Dynamic import adds prefix \"_eai_dyn_\" and so cannot find the module",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/494",
        "text": "[ember-auto-import]: Error building stuck on \"ember-auto-import-webpack\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/495",
        "text": "[ember-auto-import]: `esmodules: true` config/targets",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/498",
        "text": "[ember-auto-import]: How to handle issue with import: Uncaught ReferenceError: process is not defined",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/499",
        "text": "[ember-auto-import]: fails to build when rootURL undefined",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/500",
        "text": "[ember-auto-import]: Issue with `@ember/render-modifiers` on `ember-auto-import@2.4.0`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/503",
        "text": "[ember-auto-import]: Let webpack handle test vs app layering",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/505",
        "text": "[ember-auto-import]: Could not find module `path`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/506",
        "text": "[ember-auto-import]: Doesn't work with simple TS package.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/511",
        "text": "[ember-auto-import]: Dependency rebuilds not working",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/515",
        "text": "[ember-auto-import]: watchDependencies causes a double rebuild",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/519",
        "text": "[ember-auto-import]: Chunks changing content when updating Webpack?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/525",
        "text": "[ember-auto-import]: QUnit chunks are created when creating a production build of a fresh Ember app",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/537",
        "text": "[ember-auto-import]: ember-auto-import publicAssetURL maybe incompatible with fingerprint prepend",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/538",
        "text": "[ember-auto-import]: Brocolli Plugin ENOENT no such file auto-import-fastboot.js error",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/539",
        "text": "[ember-auto-import]: Code imported from within addon-test-support dir of addon being included in production build",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/540",
        "text": "[ember-auto-import]: wrong assets url if rootUrl is set to empty string ''",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/547",
        "text": "[ember-auto-import]: V1 Addons declared as peerDependencies are resolved by ember-auto-import",
        "labels": [
          "working-group"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/551",
        "text": "[ember-auto-import]: Dynamic import of optional dep from addon gives runtime \"could not find module\" error",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/556",
        "text": "[ember-auto-import]: npm package inconsistently resolved when imported from v1 vs. v2 addon",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/557",
        "text": "[ember-auto-import]: uuid v9.0.0 import in fastboot fails with crypto.getRandomValues() not supported",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/558",
        "text": "[ember-auto-import]: Does not work with babel-plugin-lodash",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/559",
        "text": "[ember-auto-import]: Module build failed after bugfix in package (msw)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/560",
        "text": "[ember-auto-import]: 'Single Chunk Mode' for better embedded app compatibility?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/577",
        "text": "[ember-auto-import]: Modifying SASS files triggers full reload since 2.6.2",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/588",
        "text": "[ember-auto-import]: `instanceof` fails in classic mode",
        "labels": [
          "has reproduction"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/589",
        "text": "[ember-auto-import]: css imports not working until referenced",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/592",
        "text": "[ember-auto-import]: \"Require is not defined\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/595",
        "text": "[ember-auto-import]: Dynamic import missing fingerprint URL",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/601",
        "text": "[ember-auto-import]: Add option to disable decorator transforms in case we are using a different decorator transform plugin",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/609",
        "text": "[ember-auto-import]: Error loading fingerprinted lazy engine assets after moving to ember-auto-import v2",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/610",
        "text": "[ember-auto-import]: \"import * as ... from ...\" syntax breaks when upgrading from ember-auto-import 2.6.3 to 2.7.2",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/614",
        "text": "[ember-auto-import]: Strange import behavior with pdfjs v4",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/615",
        "text": "[ember-auto-import]: `allowAppImports` entries are now allowed to import from other `allowAppImports` entries.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/616",
        "text": "[ember-auto-import]: No AMD shim when alias is referencing absolute path",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/617",
        "text": "[ember-auto-import]: Virtual modules from plugins are not importable",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/618",
        "text": "[ember-auto-import]: Cannot dynamically import a component with `allowAppImports`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/issues/619",
        "text": "[ember-auto-import]: v2 addons are not bundled when listed in dependencies of lazy-loading engine (weirdo fix attached)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/345",
        "text": "[ember-auto-import]: WIP: ease usage with ember-cli-content-security-policy",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/479",
        "text": "[ember-auto-import]: Add context option to webpack config",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/512",
        "text": "[ember-auto-import]: Restructure entry file bundle logic to support \"layering\"",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/546",
        "text": "[ember-auto-import]: Remove built-time error for root-path module not found",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/566",
        "text": "[ember-auto-import]: omit dependencies bundled with ember-source from participating in the webpack fun ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/571",
        "text": "[ember-auto-import]: Test deeper nested v2 addons",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/581",
        "text": "[ember-auto-import]: Add link from top level changelog to actual changelog",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/584",
        "text": "[ember-auto-import]: Enable `bugfixes: true` to Babel's config",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/embroider-build/ember-auto-import/pull/622",
        "text": "[ember-auto-import]: fix glob version on lts tests",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "shrinkingTheBuild": {
    "issues": [
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1064",
        "text": "[ember-qunit]: Convert to native package",
        "labels": [
          "internal"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-test-waiters/pull/454",
        "text": "[ember-test-waiters]: Remove dual-package emit",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/mainmatter/qunit-dom/issues/2023",
        "text": "[qunit-dom]: convert to v2 addon / real npm package ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/mainmatter/qunit-dom/pull/2027",
        "text": "[qunit-dom]: Prepare for V2 Addon conversion.",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-fetch/issues/738",
        "text": "[ember-fetch]: Maintenance, V2, modern `fetch`, etc",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/ember-test-waiters/issues/458",
        "text": "[ember-test-waiters]: Quest: Prep for v4: V2 Addon conversion",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "removingOldPatterns": {
    "issues": [
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1328",
        "text": "[deprecation-app]: update percy",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1334",
        "text": "[deprecation-app]: Deprecate implict route model",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1336",
        "text": "[deprecation-app]: Add guide for `importing-inject-from-ember-service` deprecation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1337",
        "text": "[deprecation-app]: Add guide for `ember-cli.outputPaths-build-option` deprecation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1338",
        "text": "[deprecation-app]: add travis-ci-support ember-cli v5 deprecation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1339",
        "text": "[deprecation-app]: Add deprecations from Ember Data 5.x so far",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1365",
        "text": "[deprecation-app]: fix: dead links",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1366",
        "text": "[deprecation-app]: update ember-showdown-prism",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1376",
        "text": "[deprecation-app]: Update deprecate-implicit-route-model.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1380",
        "text": "[deprecation-app]: chore: replace all filename comments in code examples by proper `data-filename`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20570",
        "text": "[ember.js]: [CLEANUP] Remove all traces of named outlets code",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/1001",
        "text": "[rfcs]: Deprecate named `inject` export from `@ember/service`",
        "labels": [
          "Final Comment Period",
          "S-Exploring"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/issues/1330",
        "text": "[deprecation-app]: Add missing Ember 4 deprecations",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/issues/1335",
        "text": "[deprecation-app]: Duplicate named deprecation, different content",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1377",
        "text": "[deprecation-app]: Deprecation guide for (action) / {{action}}",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1378",
        "text": "[deprecation-app]: Deprecation guide for non-co-located components",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/deprecation-app/pull/1379",
        "text": "[deprecation-app]: feat: use `ember-showdown-shiki` for syntax highlighting",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/ember.js/issues/20472",
        "text": "[ember.js]: Deprecate Classic (specifically Ember.Object)",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "highlevel": {
    "issues": [
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/12",
        "text": "[tracking-polaris]: Include modifiers by default",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/32",
        "text": "[tracking-polaris]: Move ember-cli-typescript into maintenance mode",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/1",
        "text": "[tracking-polaris]: Update the tutorial",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/10",
        "text": "[tracking-polaris]: Ensure upgrade experience is good",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/11",
        "text": "[tracking-polaris]: Ensure new addon generation is good",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/13",
        "text": "[tracking-polaris]: Strict ES Modules",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/14",
        "text": "[tracking-polaris]: Deprecate import Ember from Ember",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/15",
        "text": "[tracking-polaris]: Change Safari support to rolling",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/16",
        "text": "[tracking-polaris]: Deprecate inclusion of RSVP",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/17",
        "text": "[tracking-polaris]: Stable Decorators",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/18",
        "text": "[tracking-polaris]: Reactivity: Modifiers",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/19",
        "text": "[tracking-polaris]: Reactivity: tracked built-ins",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/2",
        "text": "[tracking-polaris]: Update the guides",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/20",
        "text": "[tracking-polaris]: Routing: Analysis",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/21",
        "text": "[tracking-polaris]: Routing: Experimentation",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/22",
        "text": "[tracking-polaris]: Template tag codemod",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/23",
        "text": "[tracking-polaris]: TypeScript Guides",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/24",
        "text": "[tracking-polaris]: Enable Glint by default",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/25",
        "text": "[tracking-polaris]: Ensure new-user TypeScript experience is good",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/26",
        "text": "[tracking-polaris]: Blog post: Polaris idiom changes (deprecations, linting, codemods)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/27",
        "text": "[tracking-polaris]: Blog post: What is a V2 addon?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/28",
        "text": "[tracking-polaris]: Blog post: Addon Roadmap for Polaris",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/29",
        "text": "[tracking-polaris]: Blog post: TypeScript Roadmap for Polaris",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/3",
        "text": "[tracking-polaris]: EmberData: Ensure we have deprecation guides for existing deprecations",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/30",
        "text": "[tracking-polaris]: Ensure linting rules are aligned with Polaris",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/31",
        "text": "[tracking-polaris]: Reactivity: resources",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/33",
        "text": "[tracking-polaris]: Quest: First-Class Component Templates",
        "labels": [
          "help wanted"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/34",
        "text": "[tracking-polaris]: Blog post: What is Polaris?",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/35",
        "text": "[tracking-polaris]: Blog post: Polaris contributor kickoff",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/36",
        "text": "[tracking-polaris]: Editor Configuration",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/37",
        "text": "[tracking-polaris]: Deprecate babel-plugin-debug-macros",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/38",
        "text": "[tracking-polaris]: Polaris blueprint",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/39",
        "text": "[tracking-polaris]: Determine Ember API for Resources",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/4",
        "text": "[tracking-polaris]: Embroider",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/5",
        "text": "[tracking-polaris]: Ember Inspector should work with modern features",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/6",
        "text": "[tracking-polaris]: Formalize App booting",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/7",
        "text": "[tracking-polaris]: Answer SSR question",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/8",
        "text": "[tracking-polaris]: Vast majority of popular addons work well with Polaris",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/emberjs/tracking-polaris/issues/9",
        "text": "[tracking-polaris]: Ensure new project generation experience is good",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "other": {
    "issues": [
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10284",
        "text": "[ember-cli]: Cannot create new project with npm 9, peer violations from dependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10288",
        "text": "[ember-cli]:  Ubuntu server 22.04 errors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10295",
        "text": "[ember-cli]: ember-cli 5 makes the quick start guide error",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10312",
        "text": "[ember-cli]: Support prettier v3 in blueprints",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10315",
        "text": "[ember-cli]: Support Yarn v3 with ember new Command",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10344",
        "text": "[ember-cli]: WARNING: Ember CLI v5.2.0 is not tested against Node v20.4.0. S",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10383",
        "text": "[ember-cli]: `test` script should not run `lint:*` scripts",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10384",
        "text": "[ember-cli]: Drop Node 16 in ember-cli 5.4",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10401",
        "text": "[ember-cli]: TypeScript error on new project: 'SetupTestOptions' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10412",
        "text": "[ember-cli]: fingerprint.prepend not working for the chunk js files",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10415",
        "text": "[ember-cli]: ember-cli@5.5.0 has security vulnerability",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10420",
        "text": "[ember-cli]: You passed the '--typescript' flag but there is no TypeScript blueprint available. A JavaScript blueprint will be generated instead.",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10441",
        "text": "[ember-cli]: Could it be possible to use `--directory` to output to an already existing directory?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10443",
        "text": "[ember-cli]: App blueprint has invalid ESLint config",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10456",
        "text": "[ember-cli]: --port=4200 not working",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10457",
        "text": "[ember-cli]: Environment file is not loading accurately in CircleCI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10459",
        "text": "[ember-cli]: Security vulnerability in lodash.template package",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10283",
        "text": "[ember-cli]: Refactor `--typescript` support in blueprints",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10285",
        "text": "[ember-cli]: Fix sync output repos",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10286",
        "text": "[ember-cli]: Use explicit error check for BLUEPRINT in sync-output-repos script",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10287",
        "text": "[ember-cli]: Implementation of RFC 907 - pnpm support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10289",
        "text": "[ember-cli]: Show a file diff when files don't match in the acceptance/new tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10290",
        "text": "[ember-cli]: Update .eslintignore, so saving the doesn't run eslint on tests/fixtures",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10293",
        "text": "[ember-cli]: update stable deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10294",
        "text": "[ember-cli]: update beta deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10296",
        "text": "[ember-cli]: [BUGFIX] Don't invoke Testem.hookIntoTestFramework if there is no test framework (yet)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10297",
        "text": "[ember-cli]: Update pnpm fixtures",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10298",
        "text": "[ember-cli]: Add the fixtures/addon/pnpm path to the update-blueprint-dependencies…",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10300",
        "text": "[ember-cli]: [BUGFIX] Do not try to wire up Testem unless a test framework is detected",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10302",
        "text": "[ember-cli]: update stable deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10306",
        "text": "[ember-cli]: Set resolution-mode to highest for apps using pnpm",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10307",
        "text": "[ember-cli]: update beta deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10309",
        "text": "[ember-cli]: add typescript fixtures",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10311",
        "text": "[ember-cli]: [ENHANCEMENT] Add v4.12 LTS scenario to `addon` blueprint",
        "labels": [
          "enhancement",
          "blueprints"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10313",
        "text": "[ember-cli]: [BUGFIX] Do not try to wire up Testem unless a test framework is dete…",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10314",
        "text": "[ember-cli]: [BUGFIX] Do not try to wire up Testem unless a test framework is dete…",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10316",
        "text": "[ember-cli]: [BUGFIX] Remove `auto` as a possible value for `locationType` in `config` declaration",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10318",
        "text": "[ember-cli]: [ENHANCEMENT] Bump `ember-resolver` and remove `@ember/string` in `app` blueprint",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10319",
        "text": "[ember-cli]: Use pnpm-action from org",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10331",
        "text": "[ember-cli]: [ENHANCEMENT] Exclude `@ember/string` from `addon` blueprint",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10332",
        "text": "[ember-cli]: [ENHANCEMENT] Support converting gts files in blueprint",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10335",
        "text": "[ember-cli]: Update ci.yml to trigger on merge queue",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10337",
        "text": "[ember-cli]: remove EMBER_CLI_PNPM",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10340",
        "text": "[ember-cli]: Update RELEASE.md with some manual steps (for now)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10341",
        "text": "[ember-cli]: [ENHANCEMENT] Remove reference to `ember-mocha` in `app` blueprint",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10342",
        "text": "[ember-cli]: update stable deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10343",
        "text": "[ember-cli]: update beta deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10345",
        "text": "[ember-cli]: [BUGFIX beta] App blueprint may not have explicit-any in ember-data types",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10346",
        "text": "[ember-cli]: [BUGFIX release] App blueprint may not have explicit-any in ember-data types ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10347",
        "text": "[ember-cli]: Test against node 20",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10349",
        "text": "[ember-cli]: [BUGFIX release] Add `@babel/core` to `app` and `addon` blueprints",
        "labels": [
          "bug",
          "blueprints"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10350",
        "text": "[ember-cli]: [ENHANCEMENT] Deprecate Travis CI support",
        "labels": [
          "enhancement",
          "blueprints"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10351",
        "text": "[ember-cli]: [ENHANCEMENT] Remove `ember-lts-4.4` scenario from `addon` blueprint",
        "labels": [
          "enhancement",
          "blueprints"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10352",
        "text": "[ember-cli]: [ENHANCEMENT] Add official support for Node.js v20",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10353",
        "text": "[ember-cli]: [ENHANCEMENT] Remove all telemetry",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10356",
        "text": "[ember-cli]: arbitrarily trigger ci",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10357",
        "text": "[ember-cli]: Add workflow_dispatch to CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10368",
        "text": "[ember-cli]: [ENHANCEMENT] Streamline package-manager CLI options",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10370",
        "text": "[ember-cli]: When generating a new app with --embroider use all optimisation flags",
        "labels": [
          "enhancement",
          "blueprints"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10373",
        "text": "[ember-cli]: add broccoli-plugin to new app to fix hoisting for tests",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10374",
        "text": "[ember-cli]: Fix CI by adding broccoli-plugin to the test fixture so that it uses the correct",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10375",
        "text": "[ember-cli]: use broccoli-plugin v1 api for test-addon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10378",
        "text": "[ember-cli]: update stable deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10379",
        "text": "[ember-cli]: Add workflow_dispatch to CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10380",
        "text": "[ember-cli]: Add broccoli-plugin to the test fixture so that it uses the correct",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10381",
        "text": "[ember-cli]: update beta deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10382",
        "text": "[ember-cli]: Move to pnpm",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10388",
        "text": "[ember-cli]: [CLEANUP] Drop support for Node v16",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10389",
        "text": "[ember-cli]: Merge beta into master",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10393",
        "text": "[ember-cli]: [ENHANCEMENT] feat: add skip-install alias to skip-npm",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10394",
        "text": "[ember-cli]: [ENHANCEMENT] automatically select a port by default with `ember serve`",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10395",
        "text": "[ember-cli]: update stable deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10397",
        "text": "[ember-cli]: update beta deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10400",
        "text": "[ember-cli]: [BUGFIX beta] use import type in helpers/index.ts :: typechecking in new apps fails atm",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10402",
        "text": "[ember-cli]: [BUGFIX release] use import type in helpers/index.ts :: typechecking in new apps otherwise fails",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10403",
        "text": "[ember-cli]: Fix some docs that were showing up weirdly in generated api docs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10404",
        "text": "[ember-cli]: Add a workflow to deploy api docs to ember-learn/ember-cli.github.io",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10405",
        "text": "[ember-cli]: Update to deploy to the master branch and also correct a comment",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10407",
        "text": "[ember-cli]: merge beta branch",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10413",
        "text": "[ember-cli]: update stable deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10414",
        "text": "[ember-cli]: update beta deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10425",
        "text": "[ember-cli]: fix GitHub Action floating deps scenario for PNPM",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10426",
        "text": "[ember-cli]: update stable deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10431",
        "text": "[ember-cli]: update beta deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10432",
        "text": "[ember-cli]: Filter out tsconfig.declarations.json correctly",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10436",
        "text": "[ember-cli]: stop using wyvox/action-setup-pnpm",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10437",
        "text": "[ember-cli]: [ENHANCEMENT] Update LTS scenarios in `addon` blueprint",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10438",
        "text": "[ember-cli]: [ENHANCEMENT] Add `declarations` folder to `.eslintignore` file in `app` blueprint",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10439",
        "text": "[ember-cli]: [ENHANCEMENT] Add tsconfig files to `.npmignore` file in `addon` blueprint",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10440",
        "text": "[ember-cli]: Update optional-features.json",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10445",
        "text": "[ember-cli]: Unpin Node 18 for ci",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10446",
        "text": "[ember-cli]: [ENHANCEMENT] Format markdown files in blueprints with Prettier",
        "labels": [
          "enhancement",
          "blueprints"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10448",
        "text": "[ember-cli]: update stable deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10449",
        "text": "[ember-cli]: update beta deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10450",
        "text": "[ember-cli]: [ENHANCEMENT] Remove warning when encountering a `.js` file when generating a TS blueprint",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10452",
        "text": "[ember-cli]: [BUGFIX] Make sure to use the correct package manager in concurrently scripts",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10454",
        "text": "[ember-cli]: update stable deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10455",
        "text": "[ember-cli]: update beta deps",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10458",
        "text": "[ember-cli]: Use Lodash's `_.template` instead of `lodash.template` package",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/issues/286",
        "text": "[cli-guides]: Update cli-guides to ember 3.28",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/287",
        "text": "[cli-guides]: update to v3.28 with ember-cli-update and update to latest template",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/290",
        "text": "[cli-guides]: Add things about pnpm",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/291",
        "text": "[cli-guides]: Update reference to travis to GitHub Actions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/293",
        "text": "[cli-guides]: update guidemaker-ember-template",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/298",
        "text": "[cli-guides]: update guidemaker-ember-template",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/300",
        "text": "[cli-guides]: Correct section on CSS minification",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/301",
        "text": "[cli-guides]: Fix CI by bumping node version",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/302",
        "text": "[cli-guides]: Mention npm scripts, per RFC-831",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/304",
        "text": "[cli-guides]: remove mention of official support for Mocha",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/305",
        "text": "[cli-guides]: Remove reference to Travis",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/306",
        "text": "[cli-guides]: Update upgrading.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/308",
        "text": "[cli-guides]: docs: add --skip-install alias",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/311",
        "text": "[cli-guides]: Add docs for shouldTransformTypescript blueprint property",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/312",
        "text": "[cli-guides]: Add --typescript option to generate command docs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/313",
        "text": "[cli-guides]: Update configuration.md with isTypeScriptProject",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/315",
        "text": "[cli-guides]: Describe .ember-cli in home directory",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/10",
        "text": "[ember-api-docs-data]: Add 5.2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/11",
        "text": "[ember-api-docs-data]: Add 5.3",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/12",
        "text": "[ember-api-docs-data]: Fix old versions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/13",
        "text": "[ember-api-docs-data]: regenerate docs for ember-data 2.18",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/15",
        "text": "[ember-api-docs-data]: add missing entries for ember-data 3.28",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/16",
        "text": "[ember-api-docs-data]: Fix ember data",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/17",
        "text": "[ember-api-docs-data]: re-generate ember-data 2.18",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/18",
        "text": "[ember-api-docs-data]: Fix missing entries for Ember",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/19",
        "text": "[ember-api-docs-data]: fix issue with ember 4.12 pointing at the wrong patch version",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/21",
        "text": "[ember-api-docs-data]: V5.4.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/22",
        "text": "[ember-api-docs-data]: Clean up readme",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/24",
        "text": "[ember-api-docs-data]: V5.5.0 ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/26",
        "text": "[ember-api-docs-data]: Release 5.6",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/27",
        "text": "[ember-api-docs-data]: Release 5.7",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/28",
        "text": "[ember-api-docs-data]: Release 5.8",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/8",
        "text": "[ember-api-docs-data]: Sync data from S3",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/9",
        "text": "[ember-api-docs-data]: Add 5.1 for ember and ember-data",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/867",
        "text": "[ember-api-docs]: EmberObject API page redirects to 404 when on ember versions 3.12 or below",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/869",
        "text": "[ember-api-docs]: Netlify bug - Wrong 301 redirect for percent encoded URLs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/870",
        "text": "[ember-api-docs]: Fix edit button styling",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/872",
        "text": "[ember-api-docs]: Stale search results when switching versions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/875",
        "text": "[ember-api-docs]: Side menu styling",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/878",
        "text": "[ember-api-docs]: logo isn't working in the header in the redesign",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/890",
        "text": "[ember-api-docs]: ember-data 3.28 links aren't working",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/871",
        "text": "[ember-api-docs]: Fix styling of title and pencil",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/873",
        "text": "[ember-api-docs]: Clear stale search results when version is changed",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/874",
        "text": "[ember-api-docs]: Sidemenu styling",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/880",
        "text": "[ember-api-docs]: bugfix/878 fix header icon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/881",
        "text": "[ember-api-docs]: API docs styling tweaks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/885",
        "text": "[ember-api-docs]: Remove the collapse functionality",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/887",
        "text": "[ember-api-docs]: API docs redesign anchor",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/896",
        "text": "[ember-api-docs]: Update README to include fully local run",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/898",
        "text": "[ember-api-docs]: update lint-to-the-future",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/899",
        "text": "[ember-api-docs]: fix extra < on ember-data-landing-page",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/900",
        "text": "[ember-api-docs]: update node-sass and ember-auto-import",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/905",
        "text": "[ember-api-docs]: Implement 404",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/906",
        "text": "[ember-api-docs]: Implement 404 page",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/issues/480",
        "text": "[ember-styleguide]: Move tabel of contents styling to styleguide",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/issues/482",
        "text": "[ember-styleguide]: Make sure ember-styleguide live reload works properly",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/issues/486",
        "text": "[ember-styleguide]: Fix sidebar-weirdness",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/issues/487",
        "text": "[ember-styleguide]: Move link SVG styling to style guide (from API-docs & Guidemaker)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/issues/494",
        "text": "[ember-styleguide]: Content styling (centred with the on this page)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/464",
        "text": "[ember-styleguide]: Increase width sidebar",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/473",
        "text": "[ember-styleguide]: Sync menu content from ember-website to styleguide",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/474",
        "text": "[ember-styleguide]: Add @ember/string to ember-release dependencies",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/478",
        "text": "[ember-styleguide]: Sidebar clean up + full width",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/479",
        "text": "[ember-styleguide]: Pin node version in volta so that it runs for people who have node 18",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/488",
        "text": "[ember-styleguide]: drop support for EOL node < 18",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/491",
        "text": "[ember-styleguide]: Drop support for Ember < 3.28",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/493",
        "text": "[ember-styleguide]: Move header anchor styling into styleguide",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/495",
        "text": "[ember-styleguide]: Central content + on-this-page styling",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/496",
        "text": "[ember-styleguide]: update fastboot and ember-try to fix CI",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/501",
        "text": "[ember-styleguide]: [lts-v3] get legacy release embroider compatible",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/503",
        "text": "[ember-styleguide]: use release-plan for legacy release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/507",
        "text": "[ember-styleguide]: make sidebar content slightly wider and add background colour",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/issues/1051",
        "text": "[ember-website]: [BUG] Brand Guide URL 404s",
        "labels": [
          "bug",
          "help wanted",
          "good first issue"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/issues/1055",
        "text": "[ember-website]: Add npm start in README.md's Running / Development",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/issues/1064",
        "text": "[ember-website]: Error of syntax ?",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/issues/1096",
        "text": "[ember-website]: Suggestion: remove discontinued meetup groups",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1032",
        "text": "[ember-website]: Alumnize David Hamilton",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1034",
        "text": "[ember-website]: Embroider Initiative Sponsors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1035",
        "text": "[ember-website]: Release versions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1037",
        "text": "[ember-website]: Sponsor updates",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1038",
        "text": "[ember-website]: Remove mirage",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1039",
        "text": "[ember-website]: Add new Embroider team member - Simon",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1044",
        "text": "[ember-website]: chore: bump release page versions and dates for 5.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1046",
        "text": "[ember-website]: Update ember-styleguide to v8.4.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1047",
        "text": "[ember-website]: Use headerLinks directly from ember-styleguide",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1049",
        "text": "[ember-website]: Add @22a to embroider team",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1050",
        "text": "[ember-website]: Update release pages for 5.2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1052",
        "text": "[ember-website]: fix: Fixed 404 ERROR",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1053",
        "text": "[ember-website]: [BUGFIXED] Brand Guide URL 404s",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1054",
        "text": "[ember-website]: added target=\"_blank\" in the anchor tag for the hyperlink",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1056",
        "text": "[ember-website]: fix: Updated README.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1058",
        "text": "[ember-website]: Add Polaris editions page",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1059",
        "text": "[ember-website]: Update browser-support.hbs to include v5",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1060",
        "text": "[ember-website]: Fix Discord Link on Polaris Page",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1061",
        "text": "[ember-website]: Add Foodee as user",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1062",
        "text": "[ember-website]: Update 5.3 release pages",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1063",
        "text": "[ember-website]: Alumnize Chris Krycho from Ember TS team",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1065",
        "text": "[ember-website]: add TRIPTYK user",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1067",
        "text": "[ember-website]: Add Phorest Salon Software as an Ember user ",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1069",
        "text": "[ember-website]: docs: extend the Polaris edition page",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1070",
        "text": "[ember-website]: Update release pages for 5.4",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1071",
        "text": "[ember-website]: remove ota insights, add lighthouse",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1072",
        "text": "[ember-website]: release 5.5",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1074",
        "text": "[ember-website]: Update to node 20",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1075",
        "text": "[ember-website]: Fix implicit injection deprecation",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1079",
        "text": "[ember-website]: Update Kristen's name and image",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1080",
        "text": "[ember-website]: Release 5.6",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1081",
        "text": "[ember-website]: add Teamtailor to the Embroider Initiative sponsors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1082",
        "text": "[ember-website]: Add Ignace Maes to the Learning team",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1083",
        "text": "[ember-website]: Add non supported bugfix and security patch until dates",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1084",
        "text": "[ember-website]: Correct number of weeks added to promotion date",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1085",
        "text": "[ember-website]: releases/lts: drop last minor version column",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1090",
        "text": "[ember-website]: chore: delete meetups that refer to discontinued groups",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1091",
        "text": "[ember-website]: add Pix user",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1092",
        "text": "[ember-website]: Release 5.7",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1093",
        "text": "[ember-website]: fix: typo in pix user",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1094",
        "text": "[ember-website]: add crowdstrike to Embroider Initiative sponsors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1098",
        "text": "[ember-website]: update Crowdstrike logo",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1100",
        "text": "[ember-website]: use the updated crowdstrike logo for the sponsors",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1101",
        "text": "[ember-website]: Release 5.8",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1102",
        "text": "[ember-website]: Add 5.8 to LTS page",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/empress-blog-ember-template/pull/141",
        "text": "[empress-blog-ember-template]: include version-5 in tags",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/issues/145",
        "text": "[guidemaker-ember-template]: Layout of the \"old guides\" warning looks a bit strange",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/issues/146",
        "text": "[guidemaker-ember-template]: Implement a design for the \"info banner\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/issues/152",
        "text": "[guidemaker-ember-template]: Width of the content as discussed in the discord thread + stickiness sidepanels",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/issues/156",
        "text": "[guidemaker-ember-template]: Pulls in duplicate copy of showdown",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/issues/165",
        "text": "[guidemaker-ember-template]: Make sure that we use sanitize-html on algolia results",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/issues/179",
        "text": "[guidemaker-ember-template]: Style \"on this page\" to use header depth info",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/issues/181",
        "text": "[guidemaker-ember-template]: Highlight current \"on this page\" title based on scroll position",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/147",
        "text": "[guidemaker-ember-template]: clean up search dropdown-header component",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/148",
        "text": "[guidemaker-ember-template]: clean up the info-banner component",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/149",
        "text": "[guidemaker-ember-template]: Remove margin bottom from pencil",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/150",
        "text": "[guidemaker-ember-template]: Improve styling error page",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/151",
        "text": "[guidemaker-ember-template]: Make Old Version warning blue and better spaced",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/153",
        "text": "[guidemaker-ember-template]: Change reading width + centering of the content",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/154",
        "text": "[guidemaker-ember-template]: add prefixHeaderId to on-this-page links",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/155",
        "text": "[guidemaker-ember-template]: Revert \"add prefixHeaderId to on-this-page links\"",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/157",
        "text": "[guidemaker-ember-template]: fix: add renderInPlace=true to EmberPowerSelect invocation in versions.hbs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/160",
        "text": "[guidemaker-ember-template]: update ember-showdown-prism",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/161",
        "text": "[guidemaker-ember-template]: chore: add some spacing between article and footer",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/162",
        "text": "[guidemaker-ember-template]: Sidebar styling tweaks",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/164",
        "text": "[guidemaker-ember-template]: Bumped e-showdown-prism dep to 4.4",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/166",
        "text": "[guidemaker-ember-template]: Use Sanitize-HTML to not render input fields in our search response",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/168",
        "text": "[guidemaker-ember-template]: feat: Use `ember-showdown-shikiji` for syntax highlighting",
        "labels": [
          "breaking"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/170",
        "text": "[guidemaker-ember-template]: deps: upgrade to ember-showdown-shiki",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/171",
        "text": "[guidemaker-ember-template]: Sidebar weirdness (#486)",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/172",
        "text": "[guidemaker-ember-template]: cleanup: remove redundant toc styles",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/173",
        "text": "[guidemaker-ember-template]: style: inline pen svg and make color gray",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/174",
        "text": "[guidemaker-ember-template]: style: on-this-page tweaks",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/180",
        "text": "[guidemaker-ember-template]: style: update \"on this page\" to only show headers up until level 3 and indent",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/184",
        "text": "[guidemaker-ember-template]: style: make on-this-page sticky",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/185",
        "text": "[guidemaker-ember-template]: style: make TOC sticky",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/186",
        "text": "[guidemaker-ember-template]: feat: highlight active title in \"On This Page\"",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/187",
        "text": "[guidemaker-ember-template]: style: make header fixed",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1926",
        "text": "[guides-source]: Update the guides-source PR to include the real template instead of the GitHub branch",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1937",
        "text": "[guides-source]: Differences not shown in manual code",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1956",
        "text": "[guides-source]: data-diff +/- symbol renders outside of code block in first line",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1959",
        "text": "[guides-source]: Remove highlightjs / prismjs domain-wide in favor of ember-shiki",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1992",
        "text": "[guides-source]: Write about named blocks",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/2004",
        "text": "[guides-source]: import { inject } vs import { service }",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1924",
        "text": "[guides-source]: Update helper guides to use regular functions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1927",
        "text": "[guides-source]: 5.0 Release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1928",
        "text": "[guides-source]: Remove use of pushObject on RecordArray and ManyArray",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1929",
        "text": "[guides-source]: update minor details in the search index deployment script",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1930",
        "text": "[guides-source]: Fix broken handlebars highlighting",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1931",
        "text": "[guides-source]: update pre-built guides",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1932",
        "text": "[guides-source]: Update prebuilt versions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1933",
        "text": "[guides-source]: Add more versions to prebuilt",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1934",
        "text": "[guides-source]: Fix `<LinkTo />` in title",
        "labels": [
          "needs a reviewer"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1935",
        "text": "[guides-source]: Update prebuilt guides",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1939",
        "text": "[guides-source]: v5.1.0 Release",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1940",
        "text": "[guides-source]: testing: Improve examples by avoiding `assert.expect()`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1941",
        "text": "[guides-source]: update guidemaker-ember-template",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1944",
        "text": "[guides-source]: Mention the pnpm-lock.yaml",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1946",
        "text": "[guides-source]: Update the guides for element modifiers",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1947",
        "text": "[guides-source]: Mention extension pack and update listed extensions",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1953",
        "text": "[guides-source]: docs: mention vs code extension pack",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1955",
        "text": "[guides-source]: update guidemaker-ember-template",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1957",
        "text": "[guides-source]: v5.2.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1958",
        "text": "[guides-source]: Update block-content.md [Named blocks]",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1960",
        "text": "[guides-source]: Add TypeScript guides",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1962",
        "text": "[guides-source]: v5.3.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1963",
        "text": "[guides-source]: Update quick-start.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1964",
        "text": "[guides-source]: remove references to mocha in the guides",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1965",
        "text": "[guides-source]: npm upgrade",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1969",
        "text": "[guides-source]: Fix grammar in built-in-components.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1970",
        "text": "[guides-source]: ⬆️ Dep on ember-test-selectors@6",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1972",
        "text": "[guides-source]: ⬆️ dep on ember-metrics@1.5.2+",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1975",
        "text": "[guides-source]: Update engines",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1976",
        "text": "[guides-source]: Release v5.4.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1977",
        "text": "[guides-source]: 🐹 Migrate to ember 4",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1978",
        "text": "[guides-source]: docs: Add Template Tag format guides",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1979",
        "text": "[guides-source]: Update index.md",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1980",
        "text": "[guides-source]: ✅ 🔥 Delete \"Unit | Service | head data\" test file",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1981",
        "text": "[guides-source]: Demonstrating unique-id helper",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1984",
        "text": "[guides-source]: Fix version links processing",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1985",
        "text": "[guides-source]: ember-cli-update v4.0.1...v4.4.1",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1987",
        "text": "[guides-source]: Release v5.5.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1994",
        "text": "[guides-source]: ci: upgrade Node to v20",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1995",
        "text": "[guides-source]: deps: Upgrade fastboot and prember",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1998",
        "text": "[guides-source]: update all `ember server` to `npm start`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2000",
        "text": "[guides-source]: Fix tutorial",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2001",
        "text": "[guides-source]: Release 5.6",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2002",
        "text": "[guides-source]: fix: allow EmberData version to be set on release:minor script",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2005",
        "text": "[guides-source]: docs: fix import as service",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2006",
        "text": "[guides-source]: Update defining-your-routes.md to reflect RFC #774",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2007",
        "text": "[guides-source]: Update optional-features.md to include no-implicit-route-model",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2010",
        "text": "[guides-source]: Update more-about-components.md - Rental::Image component test",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2012",
        "text": "[guides-source]: chore: normalize h1 headers in content to h2",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2013",
        "text": "[guides-source]: Correct @cached example",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2014",
        "text": "[guides-source]: chore: update to modern favicon",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2018",
        "text": "[guides-source]: Release v5.7.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2022",
        "text": "[guides-source]: docs: Update urban-living image",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2024",
        "text": "[guides-source]: Add missing `)` in EmberData Models  docs",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2025",
        "text": "[guides-source]: Release v5.8.0",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10301",
        "text": "[ember-cli]: Generating a new project on Node 14 with ember-cli 4.12 with yarn and typescript fails",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10339",
        "text": "[ember-cli]: Test against yarn 3",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10369",
        "text": "[ember-cli]: ember build --watch fails with '[NodeWrapper:4 /path/to/some/folder] is not a SourceNode' when the app name contains 'ember-data' anywhere",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10371",
        "text": "[ember-cli]: incompatible with bun (or bun is incompatible)",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10390",
        "text": "[ember-cli]: Fails to fingerprint in production mode",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10391",
        "text": "[ember-cli]: set `declaration: false` in tsconfig.json for the app blueprint.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10411",
        "text": "[ember-cli]: Run Prettier standalone ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10427",
        "text": "[ember-cli]: new typescript component blueprint gives eslint warning",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10428",
        "text": "[ember-cli]: Fresh app 404's on missing assets/test-support.css",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10442",
        "text": "[ember-cli]: Add a `--no-ci-provider` flag for `ember new`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/issues/10444",
        "text": "[ember-cli]: Add bun support for Ember CLI projects",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10355",
        "text": "[ember-cli]: fix: Be more explicit about page-title being a helper rather than a component",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10416",
        "text": "[ember-cli]: Group tests' logs together so you know what log/error/warning/deprecation/etc came from which test.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10417",
        "text": "[ember-cli]: Set a breakpoint when the window is about to unload.",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10447",
        "text": "[ember-cli]: [ENHANCEMENT] Add template tag setup to `ember new` for apps",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10453",
        "text": "[ember-cli]: [ENHANCEMENT] Allow specifying no CI provider",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/issues/303",
        "text": "[cli-guides]: Add a tutorial for using TypeScript in an addon",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/cli-guides/pull/310",
        "text": "[cli-guides]: commands ref: update `ember serve` help text",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/issues/14",
        "text": "[ember-api-docs-data]: Write a script that adds search indexes to Algolia",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/20",
        "text": "[ember-api-docs-data]: fix: update installation instructions",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs-data/pull/25",
        "text": "[ember-api-docs-data]: Use Markdown for all descriptions",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/876",
        "text": "[ember-api-docs]: Adjust data and UX to account for differing ember-data versions",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/877",
        "text": "[ember-api-docs]: Make the codeblocks work for the website redesign",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/879",
        "text": "[ember-api-docs]: Start using \"wide mode\" in the redesign branch",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/882",
        "text": "[ember-api-docs]: use the new anchor functionality in the redesign",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/883",
        "text": "[ember-api-docs]: Remove logic for collapsable menu items",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/884",
        "text": "[ember-api-docs]: Implement 404",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/886",
        "text": "[ember-api-docs]: Tab interface doesn't have any tab highlighted on the new prember site",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/891",
        "text": "[ember-api-docs]: 5.3 is missing search",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/issues/894",
        "text": "[ember-api-docs]: ember-api-docs can not currently be run locally against ember-source or ember-data",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/902",
        "text": "[ember-api-docs]: use ember-showdown-prism ",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/903",
        "text": "[ember-api-docs]: Start using Embroider",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-api-docs/pull/904",
        "text": "[ember-api-docs]: fix: resolve ember-global deprecation",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/issues/465",
        "text": "[ember-styleguide]: Update the underline implementation",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/issues/466",
        "text": "[ember-styleguide]: Create a \"webpage\" wrapper for around images",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/issues/467",
        "text": "[ember-styleguide]: Add a a11y audit to the styleguide tests",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/issues/472",
        "text": "[ember-styleguide]: Move search dropdown to styleguide",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/issues/484",
        "text": "[ember-styleguide]: update bottled ember on ember-styleguide",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/issues/485",
        "text": "[ember-styleguide]: remove ember-cli css hack from ember-styleguide",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/471",
        "text": "[ember-styleguide]: Move Algolia styling to Styleguide",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/477",
        "text": "[ember-styleguide]: Update links.js",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-styleguide/pull/490",
        "text": "[ember-styleguide]: update to v4.8 with ember-cli-update",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-website/issues/1036",
        "text": "[ember-website]: [Documentation] JavaScript Environment Requirements ",
        "labels": [
          "help wanted"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-website/issues/1078",
        "text": "[ember-website]: Suggestion: remove usage of ember-data",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-website/issues/1086",
        "text": "[ember-website]: [REQUEST] Remove highcharts from initial page load",
        "labels": [
          "enhancement"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-website/issues/1097",
        "text": "[ember-website]: Ember-data chapter is outdated",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-website/issues/1103",
        "text": "[ember-website]: Clarification of Ember 5.8 LTS Status",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1076",
        "text": "[ember-website]: Update to Ember 4.12.2",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1087",
        "text": "[ember-website]: feat: lazy load Highcharts",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1088",
        "text": "[ember-website]: Amend the browser support policy for Safari",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1089",
        "text": "[ember-website]: feat: add code blocks to the homepage",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/ember-website/pull/1104",
        "text": "[ember-website]: feat: add survey 2024 page",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/empress-blog-ember-template/pull/142",
        "text": "[empress-blog-ember-template]: feat: use `ember-showdown-shiki` for syntax highlighting",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/issues/158",
        "text": "[guidemaker-ember-template]: video thumbnail size",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/issues/159",
        "text": "[guidemaker-ember-template]: Headers should be inside of a section",
        "labels": [
          "good first issue"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/issues/182",
        "text": "[guidemaker-ember-template]: Make TOC and \"on this page\" sidebars sticky",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/issues/183",
        "text": "[guidemaker-ember-template]: Vertically align header link anchors and adapt to title size",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/178",
        "text": "[guidemaker-ember-template]: Update Ember to v5.4 and drop support for Ember < 3.28",
        "labels": [
          "breaking"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guidemaker-ember-template/pull/188",
        "text": "[guidemaker-ember-template]: Convert to a V2 addon and drop support for Ember < 3.28",
        "labels": [
          "breaking"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1936",
        "text": "[guides-source]: [Documentation] Mention `tracked-tools` in Autotracking Guide",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1938",
        "text": "[guides-source]: Mapbox now requires a credit card to register an account",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1943",
        "text": "[guides-source]: Update Guides for Tracked Built-ins",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1951",
        "text": "[guides-source]: Add new.emberjs.com link to Quick Start page",
        "labels": [
          "help wanted"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1954",
        "text": "[guides-source]: Feature Epic - Cross Site Search",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1967",
        "text": "[guides-source]: Rendering Values page is badly named",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1973",
        "text": "[guides-source]: Changing version triggers DEPRECATIONS",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1982",
        "text": "[guides-source]: Seems NASA is not using ember.js and so ember inspector won't detect it",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1988",
        "text": "[guides-source]: Ember Data relationships guide has syntax that errors in 5.x",
        "labels": [
          "ember-data"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1989",
        "text": "[guides-source]: Mention unless in Conditional Content",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/1990",
        "text": "[guides-source]: Don't tell people to use @ember/render-modifiers",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/2008",
        "text": "[guides-source]: Document `@ember/destroyables`",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/2009",
        "text": "[guides-source]: [Disco]: recommending on{event} instead of on-modifier",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/issues/2015",
        "text": "[guides-source]: Lint: enforce consistent markdown title level nesting",
        "labels": [
          "help wanted"
        ],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1961",
        "text": "[guides-source]: Update index.md",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1966",
        "text": "[guides-source]: Update rendering-values.md with example of how to return a component from a function",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1974",
        "text": "[guides-source]: Add a section for using vanilla classes with dependency injection",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/1999",
        "text": "[guides-source]: Update disabling-prototype-extensions.md with possible fix for #20465",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2021",
        "text": "[guides-source]: docs: Update mirage version",
        "labels": [],
        "isPending": true
      },
      {
        "href": "https://github.com/ember-learn/guides-source/pull/2026",
        "text": "[guides-source]: Update testing-tools.md",
        "labels": [],
        "isPending": true
      }
    ]
  },
  "intellisense": {
    "issues": [
      {
        "href": "https://github.com/ember-cli/ember-cli/pull/10406",
        "text": "[ember-cli]: [BUGFIX beta] use import type in helpers/index.ts :: typechecking in new apps otherwise fails",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ember-cli/ember-page-title/pull/275",
        "text": "[ember-page-title]: TypeScript conversion so we have accurately generated types for consumers",
        "labels": [
          "enhancement"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/data/issues/8852",
        "text": "[data]: tracking: road to public EmberData typescript support",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember-qunit/pull/1137",
        "text": "[ember-qunit]: Add 'types' to package.json#exports because newer typescript versions ignore the package.json#types entry when package.json#exports is present",
        "labels": [
          "bug"
        ],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/ember.js/pull/20579",
        "text": "[ember.js]: Mark `cached` as a `MethodDecorator` instead of `PropertyDecorator`",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/ijlee2/ember-codemod-args-to-signature/issues/1",
        "text": "[ember-codemod-args-to-signature]: Develop ember-codemod-args-to-signature",
        "labels": [],
        "isPending": false
      },
      {
        "href": "https://github.com/emberjs/rfcs/pull/976",
        "text": "[rfcs]: Enable Glint by Default",
        "labels": [
          "S-Exploring"
        ],
        "isPending": true
      }
    ]
  },
  "routing": {
    "category": "authoring experience",
    "issues": []
  },
  "css": {
    "category": "authoring experience",
    "issues": []
  },
  "total": 5003,
  "finished": 4064,
  "labels": [
    "Breaking",
    "Bug",
    "Cleanup",
    "Documentation",
    "Enhancement",
    "Final Comment Period",
    "Help Wanted",
    "New Rule",
    "Question",
    "S-Exploring",
    "T-deprecation",
    "T-ember-cli",
    "T-ember-data",
    "T-fastboot",
    "T-framework",
    "T-learning",
    "T-routing",
    "T-testing",
    "TypeScript",
    "a11y",
    "blocked",
    "blocker",
    "blueprints",
    "breaking",
    "bug",
    "deprecation",
    "design",
    "documentation",
    "ember-data",
    "enhancement",
    "error messages",
    "good first issue",
    "hacktoberfest",
    "has reproduction",
    "help wanted",
    "internal",
    "invalid",
    "needs a reviewer",
    "question",
    "refactor",
    "testing",
    "todos",
    "upstream",
    "working-group"
  ]
}